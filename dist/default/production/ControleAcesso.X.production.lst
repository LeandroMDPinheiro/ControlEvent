

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Dec 06 10:58:12 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   384                           PORTA equ 0F80h ;# 
   385  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   386                           PORTB equ 0F81h ;# 
   387  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   388                           PORTC equ 0F82h ;# 
   389  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   390                           PORTD equ 0F83h ;# 
   391  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   392                           PORTE equ 0F84h ;# 
   393  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   394                           LATA equ 0F89h ;# 
   395  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   396                           LATB equ 0F8Ah ;# 
   397  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   398                           LATC equ 0F8Bh ;# 
   399  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   400                           LATD equ 0F8Ch ;# 
   401  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   402                           LATE equ 0F8Dh ;# 
   403  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   404                           TRISA equ 0F92h ;# 
   405  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   406                           DDRA equ 0F92h ;# 
   407  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   408                           TRISB equ 0F93h ;# 
   409  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   410                           DDRB equ 0F93h ;# 
   411  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   412                           TRISC equ 0F94h ;# 
   413  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   414                           DDRC equ 0F94h ;# 
   415  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   416                           TRISD equ 0F95h ;# 
   417  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   418                           DDRD equ 0F95h ;# 
   419  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   420                           TRISE equ 0F96h ;# 
   421  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   422                           DDRE equ 0F96h ;# 
   423  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   424                           OSCTUNE equ 0F9Bh ;# 
   425  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   426                           PIE1 equ 0F9Dh ;# 
   427  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   428                           PIR1 equ 0F9Eh ;# 
   429  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   430                           IPR1 equ 0F9Fh ;# 
   431  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   432                           PIE2 equ 0FA0h ;# 
   433  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   434                           PIR2 equ 0FA1h ;# 
   435  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   436                           IPR2 equ 0FA2h ;# 
   437  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   438                           EECON1 equ 0FA6h ;# 
   439  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   440                           EECON2 equ 0FA7h ;# 
   441  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   442                           EEDATA equ 0FA8h ;# 
   443  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   444                           EEADR equ 0FA9h ;# 
   445  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   446                           RCSTA equ 0FABh ;# 
   447  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   448                           RCSTA1 equ 0FABh ;# 
   449  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   450                           TXSTA equ 0FACh ;# 
   451  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   452                           TXSTA1 equ 0FACh ;# 
   453  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   454                           TXREG equ 0FADh ;# 
   455  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   456                           TXREG1 equ 0FADh ;# 
   457  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   458                           RCREG equ 0FAEh ;# 
   459  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   460                           RCREG1 equ 0FAEh ;# 
   461  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   462                           SPBRG equ 0FAFh ;# 
   463  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   464                           SPBRG1 equ 0FAFh ;# 
   465  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   466                           SPBRGH equ 0FB0h ;# 
   467  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   468                           T3CON equ 0FB1h ;# 
   469  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   470                           TMR3 equ 0FB2h ;# 
   471  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   472                           TMR3L equ 0FB2h ;# 
   473  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   474                           TMR3H equ 0FB3h ;# 
   475  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   476                           CMCON equ 0FB4h ;# 
   477  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   478                           CVRCON equ 0FB5h ;# 
   479  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   480                           ECCP1AS equ 0FB6h ;# 
   481  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   482                           ECCPAS equ 0FB6h ;# 
   483  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   484                           PWM1CON equ 0FB7h ;# 
   485  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   486                           ECCP1DEL equ 0FB7h ;# 
   487  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   488                           BAUDCON equ 0FB8h ;# 
   489  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   490                           BAUDCTL equ 0FB8h ;# 
   491  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   492                           CCP2CON equ 0FBAh ;# 
   493  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   494                           CCPR2 equ 0FBBh ;# 
   495  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   496                           CCPR2L equ 0FBBh ;# 
   497  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   498                           CCPR2H equ 0FBCh ;# 
   499  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   500                           CCP1CON equ 0FBDh ;# 
   501  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   502                           CCPR1 equ 0FBEh ;# 
   503  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   504                           CCPR1L equ 0FBEh ;# 
   505  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   506                           CCPR1H equ 0FBFh ;# 
   507  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   508                           ADCON2 equ 0FC0h ;# 
   509  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   510                           ADCON1 equ 0FC1h ;# 
   511  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   512                           ADCON0 equ 0FC2h ;# 
   513  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   514                           ADRES equ 0FC3h ;# 
   515  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   516                           ADRESL equ 0FC3h ;# 
   517  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   518                           ADRESH equ 0FC4h ;# 
   519  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   520                           SSPCON2 equ 0FC5h ;# 
   521  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   522                           SSPCON1 equ 0FC6h ;# 
   523  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   524                           SSPSTAT equ 0FC7h ;# 
   525  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   526                           SSPADD equ 0FC8h ;# 
   527  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   528                           SSPBUF equ 0FC9h ;# 
   529  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   530                           T2CON equ 0FCAh ;# 
   531  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   532                           PR2 equ 0FCBh ;# 
   533  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   534                           MEMCON equ 0FCBh ;# 
   535  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   536                           TMR2 equ 0FCCh ;# 
   537  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   538                           T1CON equ 0FCDh ;# 
   539  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   540                           TMR1 equ 0FCEh ;# 
   541  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   542                           TMR1L equ 0FCEh ;# 
   543  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   544                           TMR1H equ 0FCFh ;# 
   545  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   546                           RCON equ 0FD0h ;# 
   547  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   548                           WDTCON equ 0FD1h ;# 
   549  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   550                           HLVDCON equ 0FD2h ;# 
   551  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   552                           LVDCON equ 0FD2h ;# 
   553  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   554                           OSCCON equ 0FD3h ;# 
   555  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   556                           T0CON equ 0FD5h ;# 
   557  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   558                           TMR0 equ 0FD6h ;# 
   559  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   560                           TMR0L equ 0FD6h ;# 
   561  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   562                           TMR0H equ 0FD7h ;# 
   563  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   564                           STATUS equ 0FD8h ;# 
   565  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   566                           FSR2 equ 0FD9h ;# 
   567  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   568                           FSR2L equ 0FD9h ;# 
   569  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   570                           FSR2H equ 0FDAh ;# 
   571  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   572                           PLUSW2 equ 0FDBh ;# 
   573  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   574                           PREINC2 equ 0FDCh ;# 
   575  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   576                           POSTDEC2 equ 0FDDh ;# 
   577  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   578                           POSTINC2 equ 0FDEh ;# 
   579  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   580                           INDF2 equ 0FDFh ;# 
   581  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   582                           BSR equ 0FE0h ;# 
   583  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   584                           FSR1 equ 0FE1h ;# 
   585  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   586                           FSR1L equ 0FE1h ;# 
   587  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   588                           FSR1H equ 0FE2h ;# 
   589  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   590                           PLUSW1 equ 0FE3h ;# 
   591  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   592                           PREINC1 equ 0FE4h ;# 
   593  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   594                           POSTDEC1 equ 0FE5h ;# 
   595  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   596                           POSTINC1 equ 0FE6h ;# 
   597  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   598                           INDF1 equ 0FE7h ;# 
   599  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   600                           WREG equ 0FE8h ;# 
   601  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   602                           FSR0 equ 0FE9h ;# 
   603  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   604                           FSR0L equ 0FE9h ;# 
   605  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   606                           FSR0H equ 0FEAh ;# 
   607  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   608                           PLUSW0 equ 0FEBh ;# 
   609  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   610                           PREINC0 equ 0FECh ;# 
   611  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   612                           POSTDEC0 equ 0FEDh ;# 
   613  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   614                           POSTINC0 equ 0FEEh ;# 
   615  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   616                           INDF0 equ 0FEFh ;# 
   617  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   618                           INTCON3 equ 0FF0h ;# 
   619  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   620                           INTCON2 equ 0FF1h ;# 
   621  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   622                           INTCON equ 0FF2h ;# 
   623  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   624                           PROD equ 0FF3h ;# 
   625  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   626                           PRODL equ 0FF3h ;# 
   627  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   628                           PRODH equ 0FF4h ;# 
   629  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   630                           TABLAT equ 0FF5h ;# 
   631  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   632                           TBLPTR equ 0FF6h ;# 
   633  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   634                           TBLPTRL equ 0FF6h ;# 
   635  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   636                           TBLPTRH equ 0FF7h ;# 
   637  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   638                           TBLPTRU equ 0FF8h ;# 
   639  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   640                           PCLAT equ 0FF9h ;# 
   641  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   642                           PC equ 0FF9h ;# 
   643  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   644                           PCL equ 0FF9h ;# 
   645  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   646                           PCLATH equ 0FFAh ;# 
   647  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   648                           PCLATU equ 0FFBh ;# 
   649  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   650                           STKPTR equ 0FFCh ;# 
   651  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   652                           TOS equ 0FFDh ;# 
   653  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   654                           TOSL equ 0FFDh ;# 
   655  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   656                           TOSH equ 0FFEh ;# 
   657  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   658                           TOSU equ 0FFFh ;# 
   659  0000                     	FNCALL	_main,_acende
   660                           	FNCALL	_main,_config
   661                           	FNCALL	_main,_gira_anti_horario
   662                           	FNCALL	_main,_gira_horario
   663                           	FNCALL	_main,_gira_horarioF
   664                           	FNCALL	_gira_horarioF,_lcd_clear
   665                           	FNCALL	_gira_horarioF,_lcd_goto
   666                           	FNCALL	_gira_horarioF,_lcd_puts
   667                           	FNCALL	_gira_horario,_atualza_entrada
   668                           	FNCALL	_atualza_entrada,_acende
   669                           	FNCALL	_atualza_entrada,_mostra
   670                           	FNCALL	_mostra,_lcd_clear
   671                           	FNCALL	_mostra,_lcd_goto
   672                           	FNCALL	_mostra,_lcd_init
   673                           	FNCALL	_mostra,_lcd_puts
   674                           	FNCALL	_mostra,_sprintf
   675                           	FNCALL	_sprintf,_vfprintf
   676                           	FNCALL	_vfprintf,_vfpfcnvrt
   677                           	FNCALL	_vfpfcnvrt,_dtoa
   678                           	FNCALL	_vfpfcnvrt,_fputc
   679                           	FNCALL	_dtoa,___aodiv
   680                           	FNCALL	_dtoa,___aomod
   681                           	FNCALL	_dtoa,_abs
   682                           	FNCALL	_dtoa,_pad
   683                           	FNCALL	_pad,_fputc
   684                           	FNCALL	_pad,_fputs
   685                           	FNCALL	_pad,_strlen
   686                           	FNCALL	_fputs,_fputc
   687                           	FNCALL	_fputc,_putch
   688                           	FNCALL	_lcd_puts,_lcd_write
   689                           	FNCALL	_lcd_init,_lcd_clear
   690                           	FNCALL	_lcd_init,_lcd_write
   691                           	FNCALL	_lcd_clear,_lcd_write
   692                           	FNCALL	_lcd_goto,_lcd_write
   693                           	FNROOT	_main
   694                           	FNCALL	_tmr,_bloqueada
   695                           	FNCALL	_tmr,i2_gira_anti_horario
   696                           	FNCALL	_tmr,i2_gira_horario
   697                           	FNCALL	i2_gira_horario,i2_atualza_entrada
   698                           	FNCALL	i2_atualza_entrada,i2_acende
   699                           	FNCALL	i2_atualza_entrada,i2_mostra
   700                           	FNCALL	i2_mostra,i2_lcd_clear
   701                           	FNCALL	i2_mostra,i2_lcd_goto
   702                           	FNCALL	i2_mostra,i2_lcd_init
   703                           	FNCALL	i2_mostra,i2_lcd_puts
   704                           	FNCALL	i2_mostra,i2_sprintf
   705                           	FNCALL	i2_lcd_init,i2_lcd_clear
   706                           	FNCALL	i2_lcd_init,i2_lcd_write
   707                           	FNCALL	_bloqueada,i2_lcd_clear
   708                           	FNCALL	_bloqueada,i2_lcd_goto
   709                           	FNCALL	_bloqueada,i2_lcd_puts
   710                           	FNCALL	_bloqueada,i2_sprintf
   711                           	FNCALL	i2_sprintf,i2_vfprintf
   712                           	FNCALL	i2_vfprintf,i2_vfpfcnvrt
   713                           	FNCALL	i2_vfpfcnvrt,i2_dtoa
   714                           	FNCALL	i2_vfpfcnvrt,i2_fputc
   715                           	FNCALL	i2_dtoa,i2___aodiv
   716                           	FNCALL	i2_dtoa,i2___aomod
   717                           	FNCALL	i2_dtoa,i2_abs
   718                           	FNCALL	i2_dtoa,i2_pad
   719                           	FNCALL	i2_pad,i2_fputc
   720                           	FNCALL	i2_pad,i2_fputs
   721                           	FNCALL	i2_pad,i2_strlen
   722                           	FNCALL	i2_fputs,i2_fputc
   723                           	FNCALL	i2_fputc,i2_putch
   724                           	FNCALL	i2_lcd_puts,i2_lcd_write
   725                           	FNCALL	i2_lcd_goto,i2_lcd_write
   726                           	FNCALL	i2_lcd_clear,i2_lcd_write
   727                           	FNCALL	intlevel2,_tmr
   728                           	global	intlevel2
   729                           	FNROOT	intlevel2
   730                           	global	_nout
   731                           	global	_width
   732                           	global	_prec
   733                           	global	_flags
   734                           	global	_num_mostra
   735                           	global	_estado
   736                           	global	_quant_pessoas
   737                           	global	_num
   738                           	global	_dbuf
   739                           	global	_TMR0
   740                           _TMR0	set	0xFD6
   741  0000                     	global	_PORTCbits
   742                           _PORTCbits	set	0xF82
   743  0000                     	global	_PORTE
   744                           _PORTE	set	0xF84
   745  0000                     	global	_PORTB
   746                           _PORTB	set	0xF81
   747  0000                     	global	_RCREG
   748                           _RCREG	set	0xFAE
   749  0000                     	global	_PORTBbits
   750                           _PORTBbits	set	0xF81
   751  0000                     	global	_SPBRG
   752                           _SPBRG	set	0xFAF
   753  0000                     	global	_BAUDCON
   754                           _BAUDCON	set	0xFB8
   755  0000                     	global	_RCSTA
   756                           _RCSTA	set	0xFAB
   757  0000                     	global	_TXSTA
   758                           _TXSTA	set	0xFAC
   759  0000                     	global	_ADCON2
   760                           _ADCON2	set	0xFC0
   761  0000                     	global	_ADCON1
   762                           _ADCON1	set	0xFC1
   763  0000                     	global	_ADCON0
   764                           _ADCON0	set	0xFC2
   765  0000                     	global	_T0CON
   766                           _T0CON	set	0xFD5
   767  0000                     	global	_INTCON
   768                           _INTCON	set	0xFF2
   769  0000                     	global	_OSCCON
   770                           _OSCCON	set	0xFD3
   771  0000                     	global	_TRISE
   772                           _TRISE	set	0xF96
   773  0000                     	global	_TRISD
   774                           _TRISD	set	0xF95
   775  0000                     	global	_TRISC
   776                           _TRISC	set	0xF94
   777  0000                     	global	_TRISB
   778                           _TRISB	set	0xF93
   779  0000                     	global	_TRISA
   780                           _TRISA	set	0xF92
   781  0000                     	global	_PORTD
   782                           _PORTD	set	0xF83
   783  0000                     	global	_RCIF
   784                           _RCIF	set	0x7CF5
   785  0000                     	global	_RCIP
   786                           _RCIP	set	0x7CFD
   787  0000                     	global	_RCIE
   788                           _RCIE	set	0x7CED
   789  0000                     	global	_IPEN
   790                           _IPEN	set	0x7E87
   791  0000                     	global	_LE0
   792                           _LE0	set	0x7C68
   793  0000                     	global	_LE1
   794                           _LE1	set	0x7C69
   795  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   796                           global __psmallconst
   797                           __psmallconst:
   798  000600                     	db	0
   799  000600  00                 	
   800                           STR_6:
   801  000601                     	db	69	;'E'
   802  000601  45                 	db	110	;'n'
   803  000602  6E                 	db	116	;'t'
   804  000603  74                 	db	114	;'r'
   805  000604  72                 	db	97	;'a'
   806  000605  61                 	db	100	;'d'
   807  000606  64                 	db	97	;'a'
   808  000607  61                 	db	32
   809  000608  20                 	db	66	;'B'
   810  000609  42                 	db	108	;'l'
   811  00060A  6C                 	db	111	;'o'
   812  00060B  6F                 	db	113	;'q'
   813  00060C  71                 	db	117	;'u'
   814  00060D  75                 	db	101	;'e'
   815  00060E  65                 	db	97	;'a'
   816  00060F  61                 	db	100	;'d'
   817  000610  64                 	db	97	;'a'
   818  000611  61                 	db	0
   819  000612  00                 	
   820                           STR_8:
   821  000613                     	db	83	;'S'
   822  000613  53                 	db	97	;'a'
   823  000614  61                 	db	105	;'i'
   824  000615  69                 	db	100	;'d'
   825  000616  64                 	db	97	;'a'
   826  000617  61                 	db	32
   827  000618  20                 	db	66	;'B'
   828  000619  42                 	db	108	;'l'
   829  00061A  6C                 	db	111	;'o'
   830  00061B  6F                 	db	113	;'q'
   831  00061C  71                 	db	117	;'u'
   832  00061D  75                 	db	101	;'e'
   833  00061E  65                 	db	97	;'a'
   834  00061F  61                 	db	100	;'d'
   835  000620  64                 	db	97	;'a'
   836  000621  61                 	db	0
   837  000622  00                 	
   838                           STR_10:
   839  000623                     	db	76	;'L'
   840  000623  4C                 	db	105	;'i'
   841  000624  69                 	db	109	;'m'
   842  000625  6D                 	db	105	;'i'
   843  000626  69                 	db	116	;'t'
   844  000627  74                 	db	101	;'e'
   845  000628  65                 	db	32
   846  000629  20                 	db	109	;'m'
   847  00062A  6D                 	db	97	;'a'
   848  00062B  61                 	db	120	;'x'
   849  00062C  78                 	db	105	;'i'
   850  00062D  69                 	db	109	;'m'
   851  00062E  6D                 	db	111	;'o'
   852  00062F  6F                 	db	0
   853  000630  00                 	
   854                           STR_11:
   855  000631                     	db	97	;'a'
   856  000631  61                 	db	116	;'t'
   857  000632  74                 	db	105	;'i'
   858  000633  69                 	db	110	;'n'
   859  000634  6E                 	db	103	;'g'
   860  000635  67                 	db	105	;'i'
   861  000636  69                 	db	100	;'d'
   862  000637  64                 	db	111	;'o'
   863  000638  6F                 	db	46
   864  000639  2E                 	db	0
   865  00063A  00                 	
   866                           STR_1:
   867  00063B                     	db	69	;'E'
   868  00063B  45                 	db	110	;'n'
   869  00063C  6E                 	db	116	;'t'
   870  00063D  74                 	db	114	;'r'
   871  00063E  72                 	db	97	;'a'
   872  00063F  61                 	db	110	;'n'
   873  000640  6E                 	db	100	;'d'
   874  000641  64                 	db	111	;'o'
   875  000642  6F                 	db	0
   876  000643  00                 	
   877                           STR_3:
   878  000644                     	db	83	;'S'
   879  000644  53                 	db	97	;'a'
   880  000645  61                 	db	105	;'i'
   881  000646  69                 	db	110	;'n'
   882  000647  6E                 	db	100	;'d'
   883  000648  64                 	db	111	;'o'
   884  000649  6F                 	db	0
   885  00064A  00                 	
   886                           STR_2:
   887  00064B                     	db	37
   888  00064B  25                 	db	100	;'d'
   889  00064C  64                 	db	0
   890  00064D  00                 STR_5	equ	STR_3+0
   891  0000                     STR_4	equ	STR_2+0
   892  0000                     STR_7	equ	STR_2+0
   893  0000                     STR_9	equ	STR_2+0
   894  0000                     ; #config settings
   895                           global __CFG_OSC$INTIO67
   896                           __CFG_OSC$INTIO67 equ 0x0
   897  0000                     global __CFG_FCMEN$OFF
   898                           __CFG_FCMEN$OFF equ 0x0
   899  0000                     global __CFG_IESO$OFF
   900                           __CFG_IESO$OFF equ 0x0
   901  0000                     global __CFG_PWRT$OFF
   902                           __CFG_PWRT$OFF equ 0x0
   903  0000                     global __CFG_BOREN$SBORDIS
   904                           __CFG_BOREN$SBORDIS equ 0x0
   905  0000                     global __CFG_BORV$3
   906                           __CFG_BORV$3 equ 0x0
   907  0000                     global __CFG_WDT$OFF
   908                           __CFG_WDT$OFF equ 0x0
   909  0000                     global __CFG_WDTPS$32768
   910                           __CFG_WDTPS$32768 equ 0x0
   911  0000                     global __CFG_CCP2MX$PORTC
   912                           __CFG_CCP2MX$PORTC equ 0x0
   913  0000                     global __CFG_PBADEN$OFF
   914                           __CFG_PBADEN$OFF equ 0x0
   915  0000                     global __CFG_LPT1OSC$OFF
   916                           __CFG_LPT1OSC$OFF equ 0x0
   917  0000                     global __CFG_MCLRE$ON
   918                           __CFG_MCLRE$ON equ 0x0
   919  0000                     global __CFG_STVREN$ON
   920                           __CFG_STVREN$ON equ 0x0
   921  0000                     global __CFG_LVP$OFF
   922                           __CFG_LVP$OFF equ 0x0
   923  0000                     global __CFG_XINST$OFF
   924                           __CFG_XINST$OFF equ 0x0
   925  0000                     global __CFG_CP0$OFF
   926                           __CFG_CP0$OFF equ 0x0
   927  0000                     global __CFG_CP1$OFF
   928                           __CFG_CP1$OFF equ 0x0
   929  0000                     global __CFG_CP2$OFF
   930                           __CFG_CP2$OFF equ 0x0
   931  0000                     global __CFG_CP3$OFF
   932                           __CFG_CP3$OFF equ 0x0
   933  0000                     global __CFG_CPB$OFF
   934                           __CFG_CPB$OFF equ 0x0
   935  0000                     global __CFG_CPD$OFF
   936                           __CFG_CPD$OFF equ 0x0
   937  0000                     global __CFG_WRT0$OFF
   938                           __CFG_WRT0$OFF equ 0x0
   939  0000                     global __CFG_WRT1$OFF
   940                           __CFG_WRT1$OFF equ 0x0
   941  0000                     global __CFG_WRT2$OFF
   942                           __CFG_WRT2$OFF equ 0x0
   943  0000                     global __CFG_WRT3$OFF
   944                           __CFG_WRT3$OFF equ 0x0
   945  0000                     global __CFG_WRTC$OFF
   946                           __CFG_WRTC$OFF equ 0x0
   947  0000                     global __CFG_WRTB$OFF
   948                           __CFG_WRTB$OFF equ 0x0
   949  0000                     global __CFG_WRTD$OFF
   950                           __CFG_WRTD$OFF equ 0x0
   951  0000                     global __CFG_EBTR0$OFF
   952                           __CFG_EBTR0$OFF equ 0x0
   953  0000                     global __CFG_EBTR1$OFF
   954                           __CFG_EBTR1$OFF equ 0x0
   955  0000                     global __CFG_EBTR2$OFF
   956                           __CFG_EBTR2$OFF equ 0x0
   957  0000                     global __CFG_EBTR3$OFF
   958                           __CFG_EBTR3$OFF equ 0x0
   959  0000                     global __CFG_EBTRB$OFF
   960                           __CFG_EBTRB$OFF equ 0x0
   961  0000                     	file	"C:\Users\ADMINI~1\AppData\Local\Temp\s10o."
   962                           	line	#
   963                           psect	cinit,class=CODE,delta=1,reloc=2
   964                           global __pcinit
   965                           __pcinit:
   966  002748                     global start_initialization
   967                           start_initialization:
   968  002748                     
   969                           global __initialization
   970                           __initialization:
   971  002748                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   972                           global __pbssCOMRAM
   973                           __pbssCOMRAM:
   974  000076                     _nout:
   975  000076                            ds      2
   976  000076                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
   977                           global __pbssBANK0
   978                           __pbssBANK0:
   979  0000F1                     _width:
   980  0000F1                            ds      2
   981  0000F1                     _prec:
   982  0000F3                            ds      2
   983  0000F3                     _flags:
   984  0000F5                            ds      2
   985  0000F5                     	global	_num_mostra
   986                           _num_mostra:
   987  0000F7                            ds      2
   988  0000F7                     	global	_estado
   989                           _estado:
   990  0000F9                            ds      2
   991  0000F9                     	global	_quant_pessoas
   992                           _quant_pessoas:
   993  0000FB                            ds      2
   994  0000FB                     	global	_num
   995                           _num:
   996  0000FD                            ds      3
   997  0000FD                     psect	bssBANK1,class=BANK1,space=1,noexec,lowdata
   998                           global __pbssBANK1
   999                           __pbssBANK1:
  1000  000100                     _dbuf:
  1001  000100                            ds      32
  1002  000100                     	file	"C:\Users\ADMINI~1\AppData\Local\Temp\s10o."
  1003                           	line	#
  1004                           psect	cinit
  1005                           ; Clear objects allocated to BANK1 (32 bytes)
  1006                           	global __pbssBANK1
  1007                           lfsr	0,__pbssBANK1
  1008  002748  EE01  F000         movlw	32
  1009  00274C  0E20               clear_0:
  1010  00274E                     clrf	postinc0,c
  1011  00274E  6AEE               decf	wreg
  1012  002750  06E8               bnz	clear_0
  1013  002752  E1FD               ; Clear objects allocated to BANK0 (15 bytes)
  1014                           	global __pbssBANK0
  1015                           lfsr	0,__pbssBANK0
  1016  002754  EE00  F0F1         movlw	15
  1017  002758  0E0F               clear_1:
  1018  00275A                     clrf	postinc0,c
  1019  00275A  6AEE               decf	wreg
  1020  00275C  06E8               bnz	clear_1
  1021  00275E  E1FD               ; Clear objects allocated to COMRAM (2 bytes)
  1022                           	global __pbssCOMRAM
  1023                           clrf	(__pbssCOMRAM+1)&0xffh,c
  1024  002760  6A77               clrf	(__pbssCOMRAM+0)&0xffh,c
  1025  002762  6A76               psect cinit,class=CODE,delta=1
  1026                           global end_of_initialization,__end_of__initialization
  1027                           
  1028                           ;End of C runtime variable initialization code
  1029                           
  1030                           end_of_initialization:
  1031  002764                     __end_of__initialization:
  1032  002764                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  1033  002764  9078               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1034  002766  9278               	GLOBAL	__Lmediumconst
  1035                           	movlw	low highword(__Lmediumconst)
  1036  002768  0E00               	movwf	tblptru
  1037  00276A  6EF8               movlb 0
  1038  00276C  0100               goto _main	;jump to C main() function
  1039  00276E  EF46  F006         psect	cstackBANK0,class=BANK0,space=1,noexec
  1040                           global __pcstackBANK0
  1041                           __pcstackBANK0:
  1042  000080                     ??_putch:	; 1 bytes @ 0x0
  1043  000080                     ??_lcd_write:	; 1 bytes @ 0x0
  1044  000080                     ??_config:	; 1 bytes @ 0x0
  1045  000080                     ?_acende:	; 1 bytes @ 0x0
  1046  000080                     ??_gira_anti_horario:	; 1 bytes @ 0x0
  1047  000080                     ?_fputc:	; 2 bytes @ 0x0
  1048  000080                     	global	?_strlen
  1049                           ?_strlen:	; 2 bytes @ 0x0
  1050  000080                     	global	?___aodiv
  1051                           ?___aodiv:	; 8 bytes @ 0x0
  1052  000080                     	global	?___aomod
  1053                           ?___aomod:	; 8 bytes @ 0x0
  1054  000080                     	global	lcd_write@c
  1055                           lcd_write@c:	; 1 bytes @ 0x0
  1056  000080                     	global	acende@quant_pessoas
  1057                           acende@quant_pessoas:	; 2 bytes @ 0x0
  1058  000080                     	global	fputc@c
  1059                           fputc@c:	; 2 bytes @ 0x0
  1060  000080                     	global	strlen@s
  1061                           strlen@s:	; 2 bytes @ 0x0
  1062  000080                     	global	___aodiv@dividend
  1063                           ___aodiv@dividend:	; 8 bytes @ 0x0
  1064  000080                     	global	___aomod@dividend
  1065                           ___aomod@dividend:	; 8 bytes @ 0x0
  1066  000080                     	ds   1
  1067  000080                     ??_lcd_clear:	; 1 bytes @ 0x1
  1068  000081                     ?_lcd_puts:	; 1 bytes @ 0x1
  1069  000081                     ??_lcd_goto:	; 1 bytes @ 0x1
  1070  000081                     	global	lcd_goto@pos
  1071                           lcd_goto@pos:	; 1 bytes @ 0x1
  1072  000081                     	global	lcd_puts@s
  1073                           lcd_puts@s:	; 2 bytes @ 0x1
  1074  000081                     	ds   1
  1075  000081                     ??_strlen:	; 1 bytes @ 0x2
  1076  000082                     ??_lcd_init:	; 1 bytes @ 0x2
  1077  000082                     ??_acende:	; 1 bytes @ 0x2
  1078  000082                     	global	fputc@fp
  1079                           fputc@fp:	; 2 bytes @ 0x2
  1080  000082                     	ds   1
  1081  000082                     ??_lcd_puts:	; 1 bytes @ 0x3
  1082  000083                     ??_gira_horarioF:	; 1 bytes @ 0x3
  1083  000083                     	global	lcd_init@init_value
  1084                           lcd_init@init_value:	; 1 bytes @ 0x3
  1085  000083                     	ds   1
  1086  000083                     ??_fputc:	; 1 bytes @ 0x4
  1087  000084                     	global	strlen@a
  1088                           strlen@a:	; 2 bytes @ 0x4
  1089  000084                     	ds   4
  1090  000084                     	global	___aodiv@divisor
  1091                           ___aodiv@divisor:	; 8 bytes @ 0x8
  1092  000088                     	global	___aomod@divisor
  1093                           ___aomod@divisor:	; 8 bytes @ 0x8
  1094  000088                     	ds   1
  1095  000088                     ?_fputs:	; 2 bytes @ 0x9
  1096  000089                     	global	fputs@s
  1097                           fputs@s:	; 2 bytes @ 0x9
  1098  000089                     	ds   2
  1099  000089                     	global	fputs@fp
  1100                           fputs@fp:	; 2 bytes @ 0xB
  1101  00008B                     	ds   2
  1102  00008B                     ??_fputs:	; 1 bytes @ 0xD
  1103  00008D                     	global	fputs@c
  1104                           fputs@c:	; 1 bytes @ 0xD
  1105  00008D                     	ds   1
  1106  00008D                     	global	fputs@i
  1107                           fputs@i:	; 2 bytes @ 0xE
  1108  00008E                     	ds   2
  1109  00008E                     ??___aodiv:	; 1 bytes @ 0x10
  1110  000090                     ??___aomod:	; 1 bytes @ 0x10
  1111  000090                     	global	?_pad
  1112                           ?_pad:	; 2 bytes @ 0x10
  1113  000090                     	global	___aodiv@counter
  1114                           ___aodiv@counter:	; 1 bytes @ 0x10
  1115  000090                     	global	___aomod@counter
  1116                           ___aomod@counter:	; 1 bytes @ 0x10
  1117  000090                     	global	pad@fp
  1118                           pad@fp:	; 2 bytes @ 0x10
  1119  000090                     	ds   1
  1120  000090                     	global	___aodiv@sign
  1121                           ___aodiv@sign:	; 1 bytes @ 0x11
  1122  000091                     	global	___aomod@sign
  1123                           ___aomod@sign:	; 1 bytes @ 0x11
  1124  000091                     	ds   1
  1125  000091                     	global	?_abs
  1126                           ?_abs:	; 2 bytes @ 0x12
  1127  000092                     	global	pad@buf
  1128                           pad@buf:	; 2 bytes @ 0x12
  1129  000092                     	global	abs@a
  1130                           abs@a:	; 2 bytes @ 0x12
  1131  000092                     	global	___aodiv@quotient
  1132                           ___aodiv@quotient:	; 8 bytes @ 0x12
  1133  000092                     	ds   2
  1134  000092                     ??_abs:	; 1 bytes @ 0x14
  1135  000094                     	global	pad@p
  1136                           pad@p:	; 2 bytes @ 0x14
  1137  000094                     	ds   2
  1138  000094                     ??_pad:	; 1 bytes @ 0x16
  1139  000096                     	ds   1
  1140  000096                     	global	pad@i
  1141                           pad@i:	; 2 bytes @ 0x17
  1142  000097                     	ds   2
  1143  000097                     	global	pad@w
  1144                           pad@w:	; 2 bytes @ 0x19
  1145  000099                     	ds   2
  1146  000099                     	global	?_dtoa
  1147                           ?_dtoa:	; 2 bytes @ 0x1B
  1148  00009B                     	global	dtoa@fp
  1149                           dtoa@fp:	; 2 bytes @ 0x1B
  1150  00009B                     	ds   2
  1151  00009B                     	global	dtoa@d
  1152                           dtoa@d:	; 8 bytes @ 0x1D
  1153  00009D                     	ds   8
  1154  00009D                     ??_dtoa:	; 1 bytes @ 0x25
  1155  0000A5                     	ds   8
  1156  0000A5                     	global	_dtoa$344
  1157                           _dtoa$344:	; 2 bytes @ 0x2D
  1158  0000AD                     	ds   2
  1159  0000AD                     	global	dtoa@p
  1160                           dtoa@p:	; 2 bytes @ 0x2F
  1161  0000AF                     	ds   2
  1162  0000AF                     	global	dtoa@w
  1163                           dtoa@w:	; 2 bytes @ 0x31
  1164  0000B1                     	ds   2
  1165  0000B1                     	global	dtoa@s
  1166                           dtoa@s:	; 2 bytes @ 0x33
  1167  0000B3                     	ds   2
  1168  0000B3                     	global	dtoa@n
  1169                           dtoa@n:	; 8 bytes @ 0x35
  1170  0000B5                     	ds   8
  1171  0000B5                     	global	dtoa@i
  1172                           dtoa@i:	; 2 bytes @ 0x3D
  1173  0000BD                     	ds   2
  1174  0000BD                     	global	?_vfpfcnvrt
  1175                           ?_vfpfcnvrt:	; 2 bytes @ 0x3F
  1176  0000BF                     	global	vfpfcnvrt@fp
  1177                           vfpfcnvrt@fp:	; 2 bytes @ 0x3F
  1178  0000BF                     	ds   2
  1179  0000BF                     	global	vfpfcnvrt@fmt
  1180                           vfpfcnvrt@fmt:	; 2 bytes @ 0x41
  1181  0000C1                     	ds   2
  1182  0000C1                     	global	vfpfcnvrt@ap
  1183                           vfpfcnvrt@ap:	; 2 bytes @ 0x43
  1184  0000C3                     	ds   2
  1185  0000C3                     ??_vfpfcnvrt:	; 1 bytes @ 0x45
  1186  0000C5                     	ds   2
  1187  0000C5                     	global	vfpfcnvrt@ll
  1188                           vfpfcnvrt@ll:	; 8 bytes @ 0x47
  1189  0000C7                     	ds   8
  1190  0000C7                     	global	?_vfprintf
  1191                           ?_vfprintf:	; 2 bytes @ 0x4F
  1192  0000CF                     	global	vfprintf@fp
  1193                           vfprintf@fp:	; 2 bytes @ 0x4F
  1194  0000CF                     	ds   2
  1195  0000CF                     	global	vfprintf@fmt
  1196                           vfprintf@fmt:	; 2 bytes @ 0x51
  1197  0000D1                     	ds   2
  1198  0000D1                     	global	vfprintf@ap
  1199                           vfprintf@ap:	; 2 bytes @ 0x53
  1200  0000D3                     	ds   2
  1201  0000D3                     ??_vfprintf:	; 1 bytes @ 0x55
  1202  0000D5                     	global	vfprintf@cfmt
  1203                           vfprintf@cfmt:	; 2 bytes @ 0x55
  1204  0000D5                     	ds   2
  1205  0000D5                     	global	?_sprintf
  1206                           ?_sprintf:	; 2 bytes @ 0x57
  1207  0000D7                     	global	sprintf@s
  1208                           sprintf@s:	; 2 bytes @ 0x57
  1209  0000D7                     	ds   2
  1210  0000D7                     	global	sprintf@fmt
  1211                           sprintf@fmt:	; 2 bytes @ 0x59
  1212  0000D9                     	ds   4
  1213  0000D9                     ??_sprintf:	; 1 bytes @ 0x5D
  1214  0000DD                     	global	sprintf@ret
  1215                           sprintf@ret:	; 2 bytes @ 0x5D
  1216  0000DD                     	ds   2
  1217  0000DD                     	global	sprintf@ap
  1218                           sprintf@ap:	; 2 bytes @ 0x5F
  1219  0000DF                     	ds   2
  1220  0000DF                     	global	sprintf@f
  1221                           sprintf@f:	; 6 bytes @ 0x61
  1222  0000E1                     	ds   6
  1223  0000E1                     ?_mostra:	; 1 bytes @ 0x67
  1224  0000E7                     	global	mostra@quant_pessoas
  1225                           mostra@quant_pessoas:	; 2 bytes @ 0x67
  1226  0000E7                     	ds   2
  1227  0000E7                     ??_mostra:	; 1 bytes @ 0x69
  1228  0000E9                     	ds   2
  1229  0000E9                     ??_atualza_entrada:	; 1 bytes @ 0x6B
  1230  0000EB                     ??_gira_horario:	; 1 bytes @ 0x6B
  1231  0000EB                     ?_main:	; 1 bytes @ 0x6B
  1232  0000EB                     main@argc:	; 2 bytes @ 0x6B
  1233  0000EB                     	ds   2
  1234  0000EB                     main@argv:	; 3 bytes @ 0x6D
  1235  0000ED                     	ds   3
  1236  0000ED                     ??_main:	; 1 bytes @ 0x70
  1237  0000F0                     	ds   1
  1238  0000F0                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  1239                           global __pcstackCOMRAM
  1240                           __pcstackCOMRAM:
  1241  000001                     ?_putch:	; 1 bytes @ 0x0
  1242  000001                     ?_lcd_write:	; 1 bytes @ 0x0
  1243  000001                     ?_lcd_clear:	; 1 bytes @ 0x0
  1244  000001                     ?_lcd_goto:	; 1 bytes @ 0x0
  1245  000001                     ?_lcd_init:	; 1 bytes @ 0x0
  1246  000001                     ?_config:	; 1 bytes @ 0x0
  1247  000001                     ?_atualza_entrada:	; 1 bytes @ 0x0
  1248  000001                     ?_gira_horario:	; 1 bytes @ 0x0
  1249  000001                     ?_gira_horarioF:	; 1 bytes @ 0x0
  1250  000001                     ?_gira_anti_horario:	; 1 bytes @ 0x0
  1251  000001                     ?_tmr:	; 1 bytes @ 0x0
  1252  000001                     ?i2_lcd_write:	; 1 bytes @ 0x0
  1253  000001                     ??i2_lcd_write:	; 1 bytes @ 0x0
  1254  000001                     ?i2_lcd_clear:	; 1 bytes @ 0x0
  1255  000001                     ?i2_lcd_goto:	; 1 bytes @ 0x0
  1256  000001                     ?i2_lcd_init:	; 1 bytes @ 0x0
  1257  000001                     ?i2_acende:	; 1 bytes @ 0x0
  1258  000001                     ?i2_atualza_entrada:	; 1 bytes @ 0x0
  1259  000001                     ?i2_gira_horario:	; 1 bytes @ 0x0
  1260  000001                     ?i2_gira_anti_horario:	; 1 bytes @ 0x0
  1261  000001                     ??i2_gira_anti_horario:	; 1 bytes @ 0x0
  1262  000001                     ?i2_putch:	; 1 bytes @ 0x0
  1263  000001                     ??i2_putch:	; 1 bytes @ 0x0
  1264  000001                     ?i2_fputc:	; 2 bytes @ 0x0
  1265  000001                     	global	?i2_strlen
  1266                           ?i2_strlen:	; 2 bytes @ 0x0
  1267  000001                     	global	?i2___aodiv
  1268                           ?i2___aodiv:	; 8 bytes @ 0x0
  1269  000001                     	global	?i2___aomod
  1270                           ?i2___aomod:	; 8 bytes @ 0x0
  1271  000001                     putch@c:	; 1 bytes @ 0x0
  1272  000001                     	global	i2lcd_write@c
  1273                           i2lcd_write@c:	; 1 bytes @ 0x0
  1274  000001                     	global	i2acende@quant_pessoas
  1275                           i2acende@quant_pessoas:	; 2 bytes @ 0x0
  1276  000001                     	global	i2fputc@c
  1277                           i2fputc@c:	; 2 bytes @ 0x0
  1278  000001                     	global	i2strlen@s
  1279                           i2strlen@s:	; 2 bytes @ 0x0
  1280  000001                     	global	i2___aodiv@dividend
  1281                           i2___aodiv@dividend:	; 8 bytes @ 0x0
  1282  000001                     	global	i2___aomod@dividend
  1283                           i2___aomod@dividend:	; 8 bytes @ 0x0
  1284  000001                     	ds   1
  1285  000001                     ??i2_lcd_clear:	; 1 bytes @ 0x1
  1286  000002                     ?i2_lcd_puts:	; 1 bytes @ 0x1
  1287  000002                     ??i2_lcd_goto:	; 1 bytes @ 0x1
  1288  000002                     	global	i2lcd_goto@pos
  1289                           i2lcd_goto@pos:	; 1 bytes @ 0x1
  1290  000002                     	global	i2lcd_puts@s
  1291                           i2lcd_puts@s:	; 2 bytes @ 0x1
  1292  000002                     	ds   1
  1293  000002                     ??i2_lcd_init:	; 1 bytes @ 0x2
  1294  000003                     ??i2_acende:	; 1 bytes @ 0x2
  1295  000003                     ??i2_strlen:	; 1 bytes @ 0x2
  1296  000003                     	global	i2fputc@fp
  1297                           i2fputc@fp:	; 2 bytes @ 0x2
  1298  000003                     	ds   1
  1299  000003                     ??i2_lcd_puts:	; 1 bytes @ 0x3
  1300  000004                     	global	i2lcd_init@init_value
  1301                           i2lcd_init@init_value:	; 1 bytes @ 0x3
  1302  000004                     	ds   1
  1303  000004                     ??i2_fputc:	; 1 bytes @ 0x4
  1304  000005                     	global	i2strlen@a
  1305                           i2strlen@a:	; 2 bytes @ 0x4
  1306  000005                     	ds   4
  1307  000005                     	global	i2___aodiv@divisor
  1308                           i2___aodiv@divisor:	; 8 bytes @ 0x8
  1309  000009                     	global	i2___aomod@divisor
  1310                           i2___aomod@divisor:	; 8 bytes @ 0x8
  1311  000009                     	ds   1
  1312  000009                     ?i2_fputs:	; 2 bytes @ 0x9
  1313  00000A                     	global	i2fputs@s
  1314                           i2fputs@s:	; 2 bytes @ 0x9
  1315  00000A                     	ds   2
  1316  00000A                     	global	i2fputs@fp
  1317                           i2fputs@fp:	; 2 bytes @ 0xB
  1318  00000C                     	ds   2
  1319  00000C                     ??i2_fputs:	; 1 bytes @ 0xD
  1320  00000E                     	global	i2fputs@c
  1321                           i2fputs@c:	; 1 bytes @ 0xD
  1322  00000E                     	ds   1
  1323  00000E                     	global	i2fputs@i
  1324                           i2fputs@i:	; 2 bytes @ 0xE
  1325  00000F                     	ds   2
  1326  00000F                     ??i2___aodiv:	; 1 bytes @ 0x10
  1327  000011                     ??i2___aomod:	; 1 bytes @ 0x10
  1328  000011                     	global	?i2_pad
  1329                           ?i2_pad:	; 2 bytes @ 0x10
  1330  000011                     	global	i2___aodiv@counter
  1331                           i2___aodiv@counter:	; 1 bytes @ 0x10
  1332  000011                     	global	i2___aomod@counter
  1333                           i2___aomod@counter:	; 1 bytes @ 0x10
  1334  000011                     	global	i2pad@fp
  1335                           i2pad@fp:	; 2 bytes @ 0x10
  1336  000011                     	ds   1
  1337  000011                     	global	i2___aodiv@sign
  1338                           i2___aodiv@sign:	; 1 bytes @ 0x11
  1339  000012                     	global	i2___aomod@sign
  1340                           i2___aomod@sign:	; 1 bytes @ 0x11
  1341  000012                     	ds   1
  1342  000012                     	global	?i2_abs
  1343                           ?i2_abs:	; 2 bytes @ 0x12
  1344  000013                     	global	i2pad@buf
  1345                           i2pad@buf:	; 2 bytes @ 0x12
  1346  000013                     	global	i2abs@a
  1347                           i2abs@a:	; 2 bytes @ 0x12
  1348  000013                     	global	i2___aodiv@quotient
  1349                           i2___aodiv@quotient:	; 8 bytes @ 0x12
  1350  000013                     	ds   2
  1351  000013                     ??i2_abs:	; 1 bytes @ 0x14
  1352  000015                     	global	i2pad@p
  1353                           i2pad@p:	; 2 bytes @ 0x14
  1354  000015                     	ds   2
  1355  000015                     ??i2_pad:	; 1 bytes @ 0x16
  1356  000017                     	ds   1
  1357  000017                     	global	i2pad@i
  1358                           i2pad@i:	; 2 bytes @ 0x17
  1359  000018                     	ds   2
  1360  000018                     	global	i2pad@w
  1361                           i2pad@w:	; 2 bytes @ 0x19
  1362  00001A                     	ds   2
  1363  00001A                     	global	?i2_dtoa
  1364                           ?i2_dtoa:	; 2 bytes @ 0x1B
  1365  00001C                     	global	i2dtoa@fp
  1366                           i2dtoa@fp:	; 2 bytes @ 0x1B
  1367  00001C                     	ds   2
  1368  00001C                     	global	i2dtoa@d
  1369                           i2dtoa@d:	; 8 bytes @ 0x1D
  1370  00001E                     	ds   8
  1371  00001E                     ??i2_dtoa:	; 1 bytes @ 0x25
  1372  000026                     	ds   8
  1373  000026                     	global	i2_dtoa$344
  1374                           i2_dtoa$344:	; 2 bytes @ 0x2D
  1375  00002E                     	ds   2
  1376  00002E                     	global	i2dtoa@p
  1377                           i2dtoa@p:	; 2 bytes @ 0x2F
  1378  000030                     	ds   2
  1379  000030                     	global	i2dtoa@w
  1380                           i2dtoa@w:	; 2 bytes @ 0x31
  1381  000032                     	ds   2
  1382  000032                     	global	i2dtoa@s
  1383                           i2dtoa@s:	; 2 bytes @ 0x33
  1384  000034                     	ds   2
  1385  000034                     	global	i2dtoa@n
  1386                           i2dtoa@n:	; 8 bytes @ 0x35
  1387  000036                     	ds   8
  1388  000036                     	global	i2dtoa@i
  1389                           i2dtoa@i:	; 2 bytes @ 0x3D
  1390  00003E                     	ds   2
  1391  00003E                     	global	?i2_vfpfcnvrt
  1392                           ?i2_vfpfcnvrt:	; 2 bytes @ 0x3F
  1393  000040                     	global	i2vfpfcnvrt@fp
  1394                           i2vfpfcnvrt@fp:	; 2 bytes @ 0x3F
  1395  000040                     	ds   2
  1396  000040                     	global	i2vfpfcnvrt@fmt
  1397                           i2vfpfcnvrt@fmt:	; 2 bytes @ 0x41
  1398  000042                     	ds   2
  1399  000042                     	global	i2vfpfcnvrt@ap
  1400                           i2vfpfcnvrt@ap:	; 2 bytes @ 0x43
  1401  000044                     	ds   2
  1402  000044                     ??i2_vfpfcnvrt:	; 1 bytes @ 0x45
  1403  000046                     	ds   2
  1404  000046                     	global	i2vfpfcnvrt@ll
  1405                           i2vfpfcnvrt@ll:	; 8 bytes @ 0x47
  1406  000048                     	ds   8
  1407  000048                     	global	?i2_vfprintf
  1408                           ?i2_vfprintf:	; 2 bytes @ 0x4F
  1409  000050                     	global	i2vfprintf@fp
  1410                           i2vfprintf@fp:	; 2 bytes @ 0x4F
  1411  000050                     	ds   2
  1412  000050                     	global	i2vfprintf@fmt
  1413                           i2vfprintf@fmt:	; 2 bytes @ 0x51
  1414  000052                     	ds   2
  1415  000052                     	global	i2vfprintf@ap
  1416                           i2vfprintf@ap:	; 2 bytes @ 0x53
  1417  000054                     	ds   2
  1418  000054                     ??i2_vfprintf:	; 1 bytes @ 0x55
  1419  000056                     	global	i2vfprintf@cfmt
  1420                           i2vfprintf@cfmt:	; 2 bytes @ 0x55
  1421  000056                     	ds   2
  1422  000056                     	global	?i2_sprintf
  1423                           ?i2_sprintf:	; 2 bytes @ 0x57
  1424  000058                     	global	i2sprintf@s
  1425                           i2sprintf@s:	; 2 bytes @ 0x57
  1426  000058                     	ds   2
  1427  000058                     	global	i2sprintf@fmt
  1428                           i2sprintf@fmt:	; 2 bytes @ 0x59
  1429  00005A                     	ds   4
  1430  00005A                     ??i2_sprintf:	; 1 bytes @ 0x5D
  1431  00005E                     	global	i2sprintf@ret
  1432                           i2sprintf@ret:	; 2 bytes @ 0x5D
  1433  00005E                     	ds   2
  1434  00005E                     	global	i2sprintf@ap
  1435                           i2sprintf@ap:	; 2 bytes @ 0x5F
  1436  000060                     	ds   2
  1437  000060                     	global	i2sprintf@f
  1438                           i2sprintf@f:	; 6 bytes @ 0x61
  1439  000062                     	ds   6
  1440  000062                     ?_bloqueada:	; 1 bytes @ 0x67
  1441  000068                     ?i2_mostra:	; 1 bytes @ 0x67
  1442  000068                     	global	bloqueada@estado
  1443                           bloqueada@estado:	; 2 bytes @ 0x67
  1444  000068                     	global	i2mostra@quant_pessoas
  1445                           i2mostra@quant_pessoas:	; 2 bytes @ 0x67
  1446  000068                     	ds   2
  1447  000068                     ??i2_mostra:	; 1 bytes @ 0x69
  1448  00006A                     	global	bloqueada@quant_pessoas
  1449                           bloqueada@quant_pessoas:	; 2 bytes @ 0x69
  1450  00006A                     	ds   2
  1451  00006A                     ??_bloqueada:	; 1 bytes @ 0x6B
  1452  00006C                     ??i2_atualza_entrada:	; 1 bytes @ 0x6B
  1453  00006C                     ??i2_gira_horario:	; 1 bytes @ 0x6B
  1454  00006C                     	ds   2
  1455  00006C                     ??_tmr:	; 1 bytes @ 0x6D
  1456  00006E                     	ds   8
  1457  00006E                     ;!
  1458                           ;!Data Sizes:
  1459                           ;!    Strings     77
  1460                           ;!    Constant    0
  1461                           ;!    Data        0
  1462                           ;!    BSS         49
  1463                           ;!    Persistent  0
  1464                           ;!    Stack       0
  1465                           ;!
  1466                           ;!Auto Spaces:
  1467                           ;!    Space          Size  Autos    Used
  1468                           ;!    COMRAM          126    117     119
  1469                           ;!    BANK0           128    113     128
  1470                           ;!    BANK1           256      0      32
  1471                           ;!    BANK2           256      0       0
  1472                           ;!    BANK3           256      0       0
  1473                           ;!    BANK4           256      0       0
  1474                           ;!    BANK5           256      0       0
  1475                           
  1476                           ;!
  1477                           ;!Pointer List with Targets:
  1478                           ;!
  1479                           ;!    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
  1480                           ;!		 -> num(BANK0[3]), 
  1481                           ;!
  1482                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 32
  1483                           ;!		 -> dbuf(BANK1[32]), 
  1484                           ;!
  1485                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 32
  1486                           ;!		 -> dbuf(BANK1[32]), 
  1487                           ;!
  1488                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
  1489                           ;!		 -> STR_9(CODE[3]), STR_7(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
  1490                           ;!
  1491                           ;!    sprintf@s	PTR unsigned char  size(2) Largest target is 3
  1492                           ;!		 -> num(BANK0[3]), 
  1493                           ;!
  1494                           ;!    sprintf@ap	PTR void [1] size(2) Largest target is 2
  1495                           ;!		 -> ?_sprintf(BANK0[2]), 
  1496                           ;!
  1497                           ;!    f.buffer	PTR unsigned char  size(2) Largest target is 3
  1498                           ;!		 -> num(BANK0[3]), 
  1499                           ;!
  1500                           ;!    fputs@s	PTR const unsigned char  size(2) Largest target is 32
  1501                           ;!		 -> dbuf(BANK1[32]), 
  1502                           ;!
  1503                           ;!    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1504                           ;!		 -> sprintf@f(BANK0[6]), 
  1505                           ;!
  1506                           ;!    S805_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 3
  1507                           ;!		 -> num(BANK0[3]), 
  1508                           ;!
  1509                           ;!    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 3
  1510                           ;!		 -> num(BANK0[3]), 
  1511                           ;!
  1512                           ;!    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1513                           ;!		 -> sprintf@f(BANK0[6]), 
  1514                           ;!
  1515                           ;!    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
  1516                           ;!		 -> sprintf@ap(BANK0[2]), 
  1517                           ;!
  1518                           ;!    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1519                           ;!		 -> sprintf@f(BANK0[6]), 
  1520                           ;!
  1521                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
  1522                           ;!		 -> STR_9(CODE[3]), STR_7(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
  1523                           ;!
  1524                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
  1525                           ;!		 -> STR_9(CODE[3]), STR_7(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
  1526                           ;!
  1527                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1528                           ;!		 -> sprintf@f(BANK0[6]), 
  1529                           ;!
  1530                           ;!    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
  1531                           ;!		 -> sprintf@ap(BANK0[2]), 
  1532                           ;!
  1533                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
  1534                           ;!		 -> vfprintf@cfmt(BANK0[2]), 
  1535                           ;!
  1536                           ;!    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1537                           ;!		 -> sprintf@f(BANK0[6]), 
  1538                           ;!
  1539                           ;!    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1540                           ;!		 -> sprintf@f(BANK0[6]), 
  1541                           ;!
  1542                           ;!    pad@buf	PTR unsigned char  size(2) Largest target is 32
  1543                           ;!		 -> dbuf(BANK1[32]), 
  1544                           ;!
  1545                           ;!    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 18
  1546                           ;!		 -> STR_11(CODE[10]), STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[18]), 
  1547                           ;!		 -> STR_5(CODE[7]), STR_3(CODE[7]), num(BANK0[3]), STR_1(CODE[9]), 
  1548                           ;!
  1549                           
  1550                           
  1551                           ;!
  1552                           ;!Critical Paths under _main in COMRAM
  1553                           ;!
  1554                           ;!    None.
  1555                           ;!
  1556                           ;!Critical Paths under _tmr in COMRAM
  1557                           ;!
  1558                           ;!    _tmr->_bloqueada
  1559                           ;!    i2_atualza_entrada->i2_mostra
  1560                           ;!    i2_mostra->i2_sprintf
  1561                           ;!    i2_lcd_init->i2_lcd_clear
  1562                           ;!    _bloqueada->i2_sprintf
  1563                           ;!    i2_sprintf->i2_vfprintf
  1564                           ;!    i2_vfprintf->i2_vfpfcnvrt
  1565                           ;!    i2_vfpfcnvrt->i2_dtoa
  1566                           ;!    i2_dtoa->i2_pad
  1567                           ;!    i2_pad->i2_fputs
  1568                           ;!    i2_fputs->i2_fputc
  1569                           ;!    i2_abs->i2___aomod
  1570                           ;!    i2_lcd_puts->i2_lcd_write
  1571                           ;!    i2_lcd_goto->i2_lcd_write
  1572                           ;!    i2_lcd_clear->i2_lcd_write
  1573                           ;!
  1574                           ;!Critical Paths under _main in BANK0
  1575                           ;!
  1576                           ;!    _gira_horarioF->_lcd_puts
  1577                           ;!    _atualza_entrada->_mostra
  1578                           ;!    _mostra->_sprintf
  1579                           ;!    _sprintf->_vfprintf
  1580                           ;!    _vfprintf->_vfpfcnvrt
  1581                           ;!    _vfpfcnvrt->_dtoa
  1582                           ;!    _dtoa->_pad
  1583                           ;!    _pad->_fputs
  1584                           ;!    _fputs->_fputc
  1585                           ;!    _abs->___aomod
  1586                           ;!    _lcd_puts->_lcd_write
  1587                           ;!    _lcd_init->_lcd_clear
  1588                           ;!    _lcd_clear->_lcd_write
  1589                           ;!    _lcd_goto->_lcd_write
  1590                           ;!
  1591                           ;!Critical Paths under _tmr in BANK0
  1592                           ;!
  1593                           ;!    None.
  1594                           ;!
  1595                           ;!Critical Paths under _main in BANK1
  1596                           ;!
  1597                           ;!    None.
  1598                           ;!
  1599                           ;!Critical Paths under _tmr in BANK1
  1600                           ;!
  1601                           ;!    None.
  1602                           ;!
  1603                           ;!Critical Paths under _main in BANK2
  1604                           ;!
  1605                           ;!    None.
  1606                           ;!
  1607                           ;!Critical Paths under _tmr in BANK2
  1608                           ;!
  1609                           ;!    None.
  1610                           ;!
  1611                           ;!Critical Paths under _main in BANK3
  1612                           ;!
  1613                           ;!    None.
  1614                           ;!
  1615                           ;!Critical Paths under _tmr in BANK3
  1616                           ;!
  1617                           ;!    None.
  1618                           ;!
  1619                           ;!Critical Paths under _main in BANK4
  1620                           ;!
  1621                           ;!    None.
  1622                           ;!
  1623                           ;!Critical Paths under _tmr in BANK4
  1624                           ;!
  1625                           ;!    None.
  1626                           ;!
  1627                           ;!Critical Paths under _main in BANK5
  1628                           ;!
  1629                           ;!    None.
  1630                           ;!
  1631                           ;!Critical Paths under _tmr in BANK5
  1632                           ;!
  1633                           ;!    None.
  1634                           
  1635 ;;
  1636 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1637 ;;
  1638                           
  1639                           ;!
  1640                           ;!Call Graph Tables:
  1641                           ;!
  1642                           ;! ---------------------------------------------------------------------------------
  1643                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1644                           ;! ---------------------------------------------------------------------------------
  1645                           ;! (0) _main                                                 6     1      5    9037
  1646                           ;!                                            107 BANK0      6     1      5
  1647                           ;!                             _acende
  1648                           ;!                             _config
  1649                           ;!                  _gira_anti_horario
  1650                           ;!                       _gira_horario
  1651                           ;!                      _gira_horarioF
  1652                           ;! ---------------------------------------------------------------------------------
  1653                           ;! (1) _gira_horarioF                                        2     2      0     813
  1654                           ;!                                              3 BANK0      2     2      0
  1655                           ;!                          _lcd_clear
  1656                           ;!                           _lcd_goto
  1657                           ;!                           _lcd_puts
  1658                           ;! ---------------------------------------------------------------------------------
  1659                           ;! (1) _gira_horario                                         0     0      0    8028
  1660                           ;!                    _atualza_entrada
  1661                           ;! ---------------------------------------------------------------------------------
  1662                           ;! (2) _atualza_entrada                                      0     0      0    8028
  1663                           ;!                             _acende
  1664                           ;!                             _mostra
  1665                           ;! ---------------------------------------------------------------------------------
  1666                           ;! (3) _mostra                                               4     2      2    7832
  1667                           ;!                                            103 BANK0      4     2      2
  1668                           ;!                          _lcd_clear
  1669                           ;!                           _lcd_goto
  1670                           ;!                           _lcd_init
  1671                           ;!                           _lcd_puts
  1672                           ;!                            _sprintf
  1673                           ;! ---------------------------------------------------------------------------------
  1674                           ;! (4) _sprintf                                             16    10      6    6832
  1675                           ;!                                             87 BANK0     16    10      6
  1676                           ;!                           _vfprintf
  1677                           ;! ---------------------------------------------------------------------------------
  1678                           ;! (5) _vfprintf                                             8     2      6    6120
  1679                           ;!                                             79 BANK0      8     2      6
  1680                           ;!                          _vfpfcnvrt
  1681                           ;! ---------------------------------------------------------------------------------
  1682                           ;! (6) _vfpfcnvrt                                           42    36      6    5751
  1683                           ;!                                             63 BANK0     16    10      6
  1684                           ;!                               _dtoa
  1685                           ;!                              _fputc
  1686                           ;! ---------------------------------------------------------------------------------
  1687                           ;! (7) _dtoa                                                36    26     10    4358
  1688                           ;!                                             27 BANK0     36    26     10
  1689                           ;!                            ___aodiv
  1690                           ;!                            ___aomod
  1691                           ;!                                _abs
  1692                           ;!                                _pad
  1693                           ;! ---------------------------------------------------------------------------------
  1694                           ;! (8) _pad                                                 11     5      6    2709
  1695                           ;!                                             16 BANK0     11     5      6
  1696                           ;!                              _fputc
  1697                           ;!                              _fputs
  1698                           ;!                             _strlen
  1699                           ;! ---------------------------------------------------------------------------------
  1700                           ;! (9) _strlen                                               6     4      2     166
  1701                           ;!                                              0 BANK0      6     4      2
  1702                           ;! ---------------------------------------------------------------------------------
  1703                           ;! (9) _fputs                                                7     3      4    1235
  1704                           ;!                                              9 BANK0      7     3      4
  1705                           ;!                              _fputc
  1706                           ;! ---------------------------------------------------------------------------------
  1707                           ;! (7) _fputc                                                9     5      4     834
  1708                           ;!                                              0 BANK0      9     5      4
  1709                           ;!                              _putch
  1710                           ;! ---------------------------------------------------------------------------------
  1711                           ;! (8) _putch                                                1     1      0       0
  1712                           ;! ---------------------------------------------------------------------------------
  1713                           ;! (8) _abs                                                  4     2      2     142
  1714                           ;!                                             18 BANK0      4     2      2
  1715                           ;!                            ___aomod (ARG)
  1716                           ;! ---------------------------------------------------------------------------------
  1717                           ;! (8) ___aomod                                             18     2     16     448
  1718                           ;!                                              0 BANK0     18     2     16
  1719                           ;! ---------------------------------------------------------------------------------
  1720                           ;! (8) ___aodiv                                             26    10     16     452
  1721                           ;!                                              0 BANK0     26    10     16
  1722                           ;! ---------------------------------------------------------------------------------
  1723                           ;! (2) _lcd_puts                                             2     0      2     747
  1724                           ;!                                              1 BANK0      2     0      2
  1725                           ;!                          _lcd_write
  1726                           ;! ---------------------------------------------------------------------------------
  1727                           ;! (4) _lcd_init                                             2     2      0      67
  1728                           ;!                                              2 BANK0      2     2      0
  1729                           ;!                          _lcd_clear
  1730                           ;!                          _lcd_write
  1731                           ;! ---------------------------------------------------------------------------------
  1732                           ;! (2) _lcd_clear                                            1     1      0      22
  1733                           ;!                                              1 BANK0      1     1      0
  1734                           ;!                          _lcd_write
  1735                           ;! ---------------------------------------------------------------------------------
  1736                           ;! (2) _lcd_goto                                             1     1      0      44
  1737                           ;!                                              1 BANK0      1     1      0
  1738                           ;!                          _lcd_write
  1739                           ;! ---------------------------------------------------------------------------------
  1740                           ;! (3) _lcd_write                                            1     1      0      22
  1741                           ;!                                              0 BANK0      1     1      0
  1742                           ;! ---------------------------------------------------------------------------------
  1743                           ;! (3) _acende                                               2     0      2     196
  1744                           ;!                                              0 BANK0      2     0      2
  1745                           ;! ---------------------------------------------------------------------------------
  1746                           ;! (1) _gira_anti_horario                                    0     0      0       0
  1747                           ;! ---------------------------------------------------------------------------------
  1748                           ;! (1) _config                                               0     0      0       0
  1749                           ;! ---------------------------------------------------------------------------------
  1750                           ;! Estimated maximum stack depth 9
  1751                           ;! ---------------------------------------------------------------------------------
  1752                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1753                           ;! ---------------------------------------------------------------------------------
  1754                           ;! (12) _tmr                                                 8     8      0    9909
  1755                           ;!                                            109 COMRAM     8     8      0
  1756                           ;!                          _bloqueada
  1757                           ;!                i2_gira_anti_horario
  1758                           ;!                     i2_gira_horario
  1759                           ;! ---------------------------------------------------------------------------------
  1760                           ;! (13) i2_gira_horario                                      0     0      0    4862
  1761                           ;!                  i2_atualza_entrada
  1762                           ;! ---------------------------------------------------------------------------------
  1763                           ;! (14) i2_atualza_entrada                                   0     0      0    4862
  1764                           ;!                           i2_acende
  1765                           ;!                           i2_mostra
  1766                           ;! ---------------------------------------------------------------------------------
  1767                           ;! (15) i2_mostra                                            4     2      2    4792
  1768                           ;!                                            103 COMRAM     4     2      2
  1769                           ;!                        i2_lcd_clear
  1770                           ;!                         i2_lcd_goto
  1771                           ;!                         i2_lcd_init
  1772                           ;!                         i2_lcd_puts
  1773                           ;!                          i2_sprintf
  1774                           ;! ---------------------------------------------------------------------------------
  1775                           ;! (16) i2_lcd_init                                          2     2      0      67
  1776                           ;!                                              2 COMRAM     2     2      0
  1777                           ;!                        i2_lcd_clear
  1778                           ;!                        i2_lcd_write
  1779                           ;! ---------------------------------------------------------------------------------
  1780                           ;! (15) i2_acende                                            2     0      2      70
  1781                           ;!                                              0 COMRAM     2     0      2
  1782                           ;! ---------------------------------------------------------------------------------
  1783                           ;! (13) i2_gira_anti_horario                                 0     0      0       0
  1784                           ;! ---------------------------------------------------------------------------------
  1785                           ;! (13) _bloqueada                                           6     2      4    5047
  1786                           ;!                                            103 COMRAM     6     2      4
  1787                           ;!                        i2_lcd_clear
  1788                           ;!                         i2_lcd_goto
  1789                           ;!                         i2_lcd_puts
  1790                           ;!                          i2_sprintf
  1791                           ;! ---------------------------------------------------------------------------------
  1792                           ;! (16) i2_sprintf                                          16    10      6    4262
  1793                           ;!                                             87 COMRAM    16    10      6
  1794                           ;!                         i2_vfprintf
  1795                           ;! ---------------------------------------------------------------------------------
  1796                           ;! (17) i2_vfprintf                                          8     2      6    3855
  1797                           ;!                                             79 COMRAM     8     2      6
  1798                           ;!                        i2_vfpfcnvrt
  1799                           ;! ---------------------------------------------------------------------------------
  1800                           ;! (18) i2_vfpfcnvrt                                        42    36      6    3651
  1801                           ;!                                             63 COMRAM    16    10      6
  1802                           ;!                             i2_dtoa
  1803                           ;!                            i2_fputc
  1804                           ;! ---------------------------------------------------------------------------------
  1805                           ;! (19) i2_dtoa                                             36    26     10    2808
  1806                           ;!                                             27 COMRAM    36    26     10
  1807                           ;!                          i2___aodiv
  1808                           ;!                          i2___aomod
  1809                           ;!                              i2_abs
  1810                           ;!                              i2_pad
  1811                           ;! ---------------------------------------------------------------------------------
  1812                           ;! (20) i2_pad                                              11     5      6    1509
  1813                           ;!                                             16 COMRAM    11     5      6
  1814                           ;!                            i2_fputc
  1815                           ;!                            i2_fputs
  1816                           ;!                           i2_strlen
  1817                           ;! ---------------------------------------------------------------------------------
  1818                           ;! (21) i2_strlen                                            6     4      2     116
  1819                           ;!                                              0 COMRAM     6     4      2
  1820                           ;! ---------------------------------------------------------------------------------
  1821                           ;! (21) i2_fputs                                             7     3      4     635
  1822                           ;!                                              9 COMRAM     7     3      4
  1823                           ;!                            i2_fputc
  1824                           ;! ---------------------------------------------------------------------------------
  1825                           ;! (19) i2_fputc                                             9     5      4     434
  1826                           ;!                                              0 COMRAM     9     5      4
  1827                           ;!                            i2_putch
  1828                           ;! ---------------------------------------------------------------------------------
  1829                           ;! (20) i2_putch                                             1     1      0       0
  1830                           ;! ---------------------------------------------------------------------------------
  1831                           ;! (20) i2_abs                                               4     2      2      92
  1832                           ;!                                             18 COMRAM     4     2      2
  1833                           ;!                          i2___aomod (ARG)
  1834                           ;! ---------------------------------------------------------------------------------
  1835                           ;! (20) i2___aomod                                          18     2     16     348
  1836                           ;!                                              0 COMRAM    18     2     16
  1837                           ;! ---------------------------------------------------------------------------------
  1838                           ;! (20) i2___aodiv                                          26    10     16     352
  1839                           ;!                                              0 COMRAM    26    10     16
  1840                           ;! ---------------------------------------------------------------------------------
  1841                           ;! (16) i2_lcd_puts                                          2     0      2     327
  1842                           ;!                                              1 COMRAM     2     0      2
  1843                           ;!                        i2_lcd_write
  1844                           ;! ---------------------------------------------------------------------------------
  1845                           ;! (16) i2_lcd_goto                                          1     1      0      44
  1846                           ;!                                              1 COMRAM     1     1      0
  1847                           ;!                        i2_lcd_write
  1848                           ;! ---------------------------------------------------------------------------------
  1849                           ;! (17) i2_lcd_clear                                         1     1      0      22
  1850                           ;!                                              1 COMRAM     1     1      0
  1851                           ;!                        i2_lcd_write
  1852                           ;! ---------------------------------------------------------------------------------
  1853                           ;! (17) i2_lcd_write                                         1     1      0      22
  1854                           ;!                                              0 COMRAM     1     1      0
  1855                           ;! ---------------------------------------------------------------------------------
  1856                           ;! Estimated maximum stack depth 21
  1857                           ;! ---------------------------------------------------------------------------------
  1858                           ;!
  1859                           ;! Call Graph Graphs:
  1860                           ;!
  1861                           ;! _main (ROOT)
  1862                           ;!   _acende
  1863                           ;!   _config
  1864                           ;!   _gira_anti_horario
  1865                           ;!   _gira_horario
  1866                           ;!     _atualza_entrada
  1867                           ;!       _acende
  1868                           ;!       _mostra
  1869                           ;!         _lcd_clear
  1870                           ;!           _lcd_write
  1871                           ;!         _lcd_goto
  1872                           ;!           _lcd_write
  1873                           ;!         _lcd_init
  1874                           ;!           _lcd_clear
  1875                           ;!             _lcd_write
  1876                           ;!           _lcd_write
  1877                           ;!         _lcd_puts
  1878                           ;!           _lcd_write
  1879                           ;!         _sprintf
  1880                           ;!           _vfprintf
  1881                           ;!             _vfpfcnvrt
  1882                           ;!               _dtoa
  1883                           ;!                 ___aodiv
  1884                           ;!                 ___aomod
  1885                           ;!                 _abs
  1886                           ;!                   ___aomod (ARG)
  1887                           ;!                 _pad
  1888                           ;!                   _fputc
  1889                           ;!                     _putch
  1890                           ;!                   _fputs
  1891                           ;!                     _fputc
  1892                           ;!                       _putch
  1893                           ;!                   _strlen
  1894                           ;!               _fputc
  1895                           ;!                 _putch
  1896                           ;!   _gira_horarioF
  1897                           ;!     _lcd_clear
  1898                           ;!       _lcd_write
  1899                           ;!     _lcd_goto
  1900                           ;!       _lcd_write
  1901                           ;!     _lcd_puts
  1902                           ;!       _lcd_write
  1903                           ;!
  1904                           ;! _tmr (ROOT)
  1905                           ;!   _bloqueada
  1906                           ;!     i2_lcd_clear
  1907                           ;!       i2_lcd_write
  1908                           ;!     i2_lcd_goto
  1909                           ;!       i2_lcd_write
  1910                           ;!     i2_lcd_puts
  1911                           ;!       i2_lcd_write
  1912                           ;!     i2_sprintf
  1913                           ;!       i2_vfprintf
  1914                           ;!         i2_vfpfcnvrt
  1915                           ;!           i2_dtoa
  1916                           ;!             i2___aodiv
  1917                           ;!             i2___aomod
  1918                           ;!             i2_abs
  1919                           ;!               i2___aomod (ARG)
  1920                           ;!             i2_pad
  1921                           ;!               i2_fputc
  1922                           ;!                 i2_putch
  1923                           ;!               i2_fputs
  1924                           ;!                 i2_fputc
  1925                           ;!                   i2_putch
  1926                           ;!               i2_strlen
  1927                           ;!           i2_fputc
  1928                           ;!             i2_putch
  1929                           ;!   i2_gira_anti_horario
  1930                           ;!   i2_gira_horario
  1931                           ;!     i2_atualza_entrada
  1932                           ;!       i2_acende
  1933                           ;!       i2_mostra
  1934                           ;!         i2_lcd_clear
  1935                           ;!           i2_lcd_write
  1936                           ;!         i2_lcd_goto
  1937                           ;!           i2_lcd_write
  1938                           ;!         i2_lcd_init
  1939                           ;!           i2_lcd_clear
  1940                           ;!             i2_lcd_write
  1941                           ;!           i2_lcd_write
  1942                           ;!         i2_lcd_puts
  1943                           ;!           i2_lcd_write
  1944                           ;!         i2_sprintf
  1945                           ;!           i2_vfprintf
  1946                           ;!             i2_vfpfcnvrt
  1947                           ;!               i2_dtoa
  1948                           ;!                 i2___aodiv
  1949                           ;!                 i2___aomod
  1950                           ;!                 i2_abs
  1951                           ;!                   i2___aomod (ARG)
  1952                           ;!                 i2_pad
  1953                           ;!                   i2_fputc
  1954                           ;!                     i2_putch
  1955                           ;!                   i2_fputs
  1956                           ;!                     i2_fputc
  1957                           ;!                       i2_putch
  1958                           ;!                   i2_strlen
  1959                           ;!               i2_fputc
  1960                           ;!                 i2_putch
  1961                           ;!
  1962                           
  1963                           ;! Address spaces:
  1964                           
  1965                           ;!Name               Size   Autos  Total    Cost      Usage
  1966                           ;!BIGRAM             5FF      0       0      17        0.0%
  1967                           ;!EEDATA             100      0       0       0        0.0%
  1968                           ;!BITBANK5           100      0       0      16        0.0%
  1969                           ;!BANK5              100      0       0      14        0.0%
  1970                           ;!BITBANK4           100      0       0      12        0.0%
  1971                           ;!BANK4              100      0       0      13        0.0%
  1972                           ;!BITBANK3           100      0       0      10        0.0%
  1973                           ;!BANK3              100      0       0      11        0.0%
  1974                           ;!BITBANK2           100      0       0       8        0.0%
  1975                           ;!BANK2              100      0       0       9        0.0%
  1976                           ;!BITBANK1           100      0       0       6        0.0%
  1977                           ;!BANK1              100      0      20       7       12.5%
  1978                           ;!BITBANK0            80      0       0       4        0.0%
  1979                           ;!BANK0               80     71      80       5      100.0%
  1980                           ;!BITCOMRAM           7E      0       0       0        0.0%
  1981                           ;!COMRAM              7E     75      77       1       94.4%
  1982                           ;!BITSFR               0      0       0     200        0.0%
  1983                           ;!SFR                  0      0       0     200        0.0%
  1984                           ;!STACK                0      0       0       2        0.0%
  1985                           ;!NULL                 0      0       0       0        0.0%
  1986                           ;!ABS                  0      0     117      15        0.0%
  1987                           ;!DATA                 0      0     117       3        0.0%
  1988                           ;!CODE                 0      0       0       0        0.0%
  1989                           
  1990                           	global	_main
  1991                           
  1992 ;; *************** function _main *****************
  1993 ;; Defined at:
  1994 ;;		line 199 in file "Controle.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  argc            2  107[BANK0 ] int 
  1997 ;;  argv            3  109[BANK0 ] PTR PTR unsigned char 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2009 ;;      Params:         0       5       0       0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0       0       0
  2011 ;;      Temps:          0       1       0       0       0       0       0
  2012 ;;      Totals:         0       6       0       0       0       0       0
  2013 ;;Total ram usage:        6 bytes
  2014 ;; Hardware stack levels required when called:   23
  2015 ;; This function calls:
  2016 ;;		_acende
  2017 ;;		_config
  2018 ;;		_gira_anti_horario
  2019 ;;		_gira_horario
  2020 ;;		_gira_horarioF
  2021 ;; This function is called by:
  2022 ;;		Startup code after reset
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           psect	text0,class=CODE,space=0,reloc=2,group=0
  2026                           	file	"Controle.c"
  2027                           	line	199
  2028                           global __ptext0
  2029                           __ptext0:
  2030  000C8C                     psect	text0
  2031                           	file	"Controle.c"
  2032                           	line	199
  2033                           	global	__size_of_main
  2034                           	__size_of_main	equ	__end_of_main-_main
  2035  0000                     	
  2036                           _main:
  2037  000C8C                     ;incstack = 0
  2038                           	opt	stack 8
  2039                           	line	200
  2040                           	
  2041                           l2795:
  2042  000C8C                     ;Controle.c: 200:     config();
  2043                           	call	_config	;wreg free
  2044  000C8C  EC4D  F013         	line	201
  2045                           	
  2046                           l2797:
  2047  000C90                     ;Controle.c: 201:     PORTB = 0;
  2048                           	movlw	low(0)
  2049  000C90  0E00               	movwf	((c:3969)),c	;volatile
  2050  000C92  6E81               	line	202
  2051                           	
  2052                           l2799:
  2053  000C94                     ;Controle.c: 202:     PORTD = 0;
  2054                           	movlw	low(0)
  2055  000C94  0E00               	movwf	((c:3971)),c	;volatile
  2056  000C96  6E83               	line	203
  2057                           	
  2058                           l2801:
  2059  000C98                     ;Controle.c: 203:     PORTE = 0;
  2060                           	movlw	low(0)
  2061  000C98  0E00               	movwf	((c:3972)),c	;volatile
  2062  000C9A  6E84               	line	204
  2063                           	
  2064                           l2803:
  2065  000C9C                     ;Controle.c: 204:     TMR0 = 6;
  2066                           	movlw	high(06h)
  2067  000C9C  0E00               	movwf	((c:4054+1)),c	;volatile
  2068  000C9E  6ED7               	movlw	low(06h)
  2069  000CA0  0E06               	movwf	((c:4054)),c	;volatile
  2070  000CA2  6ED6               	line	206
  2071                           	
  2072                           l2805:
  2073  000CA4                     ;Controle.c: 206:     num_mostra = 0;
  2074                           	movlw	high(0)
  2075  000CA4  0E00               	movlb	0	; () banked
  2076  000CA6  0100               	movwf	((_num_mostra+1))&0ffh
  2077  000CA8  6FF8               	movlw	low(0)
  2078  000CAA  0E00               	movwf	((_num_mostra))&0ffh
  2079  000CAC  6FF7               	line	207
  2080                           	
  2081                           l2807:; BSR set to: 0
  2082  000CAE                     
  2083                           ;Controle.c: 207:     quant_pessoas = 0;
  2084                           	movlw	high(0)
  2085  000CAE  0E00               	movwf	((_quant_pessoas+1))&0ffh
  2086  000CB0  6FFC               	movlw	low(0)
  2087  000CB2  0E00               	movwf	((_quant_pessoas))&0ffh
  2088  000CB4  6FFB               	goto	l2809
  2089  000CB6  EF5D  F006         	line	209
  2090                           ;Controle.c: 209:     while(1)
  2091                           	
  2092                           l155:; BSR set to: 0
  2093  000CBA                     
  2094                           	line	212
  2095                           	
  2096                           l2809:
  2097  000CBA                     ;Controle.c: 210:     {;Controle.c: 212:         if (!PORTCbits.RC1)
  2098                           	btfsc	((c:3970)),c,1	;volatile
  2099  000CBA  B282               	goto	u2431
  2100  000CBC  EF62  F006         	goto	u2430
  2101  000CC0  EF64  F006         u2431:
  2102  000CC4                     	goto	l156
  2103  000CC4  EF8E  F006         u2430:
  2104  000CC8                     	line	214
  2105                           	
  2106                           l2811:
  2107  000CC8                     ;Controle.c: 213:         {;Controle.c: 214:             _delay((unsigned long)((55)*(40
                                 00000/4000.0)));
  2108                           	opt asmopt_push
  2109                           opt asmopt_off
  2110                           movlw	72
  2111  000CC8  0E48               	movlb	0	; () banked
  2112  000CCA  0100               movwf	(??_main+0+0)&0ffh,f
  2113  000CCC  6FF0               	movlw	108
  2114  000CCE  0E6C               u2557:
  2115  000CD0                     decfsz	wreg,f
  2116  000CD0  2EE8               	bra	u2557
  2117  000CD2  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  2118  000CD4  2FF0               	bra	u2557
  2119  000CD6  D7FC               	nop
  2120  000CD8  F000               opt asmopt_pop
  2121                           
  2122                           	line	215
  2123                           	
  2124                           l2813:
  2125  000CDA                     ;Controle.c: 215:             if(!PORTCbits.RC1){
  2126                           	btfsc	((c:3970)),c,1	;volatile
  2127  000CDA  B282               	goto	u2441
  2128  000CDC  EF72  F006         	goto	u2440
  2129  000CE0  EF74  F006         u2441:
  2130  000CE4                     	goto	l156
  2131  000CE4  EF8E  F006         u2440:
  2132  000CE8                     	line	216
  2133                           	
  2134                           l2815:
  2135  000CE8                     ;Controle.c: 216:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  2136                           	opt asmopt_push
  2137                           opt asmopt_off
  2138                           movlw	72
  2139  000CE8  0E48               	movlb	0	; () banked
  2140  000CEA  0100               movwf	(??_main+0+0)&0ffh,f
  2141  000CEC  6FF0               	movlw	108
  2142  000CEE  0E6C               u2567:
  2143  000CF0                     decfsz	wreg,f
  2144  000CF0  2EE8               	bra	u2567
  2145  000CF2  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  2146  000CF4  2FF0               	bra	u2567
  2147  000CF6  D7FC               	nop
  2148  000CF8  F000               opt asmopt_pop
  2149                           
  2150                           	line	217
  2151                           ;Controle.c: 217:                 while (!PORTCbits.RC1)
  2152                           	goto	l2819
  2153  000CFA  EF83  F006         	
  2154                           l159:
  2155  000CFE                     	line	219
  2156                           	
  2157                           l2817:
  2158  000CFE                     ;Controle.c: 219:                 gira_horario();
  2159                           	call	_gira_horario	;wreg free
  2160  000CFE  ECE1  F013         	goto	l2819
  2161  000D02  EF83  F006         	
  2162                           l158:
  2163  000D06                     	line	217
  2164                           	
  2165                           l2819:
  2166  000D06                     ;Controle.c: 217:                 while (!PORTCbits.RC1)
  2167                           	btfss	((c:3970)),c,1	;volatile
  2168  000D06  A282               	goto	u2451
  2169  000D08  EF88  F006         	goto	u2450
  2170  000D0C  EF8A  F006         u2451:
  2171  000D10                     	goto	l2817
  2172  000D10  EF7F  F006         u2450:
  2173  000D14                     	goto	l156
  2174  000D14  EF8E  F006         	
  2175                           l160:
  2176  000D18                     	goto	l156
  2177  000D18  EF8E  F006         	line	220
  2178                           ;Controle.c: 220:             }
  2179                           	
  2180                           l157:
  2181  000D1C                     	line	221
  2182                           ;Controle.c: 221:         }
  2183                           	
  2184                           l156:
  2185  000D1C                     	line	223
  2186                           ;Controle.c: 223:         if(!PORTCbits.RC3){
  2187                           	btfsc	((c:3970)),c,3	;volatile
  2188  000D1C  B682               	goto	u2461
  2189  000D1E  EF93  F006         	goto	u2460
  2190  000D22  EF95  F006         u2461:
  2191  000D26                     	goto	l2829
  2192  000D26  EFBF  F006         u2460:
  2193  000D2A                     	line	224
  2194                           	
  2195                           l2821:
  2196  000D2A                     ;Controle.c: 224:             _delay((unsigned long)((55)*(4000000/4000.0)));
  2197                           	opt asmopt_push
  2198                           opt asmopt_off
  2199                           movlw	72
  2200  000D2A  0E48               	movlb	0	; () banked
  2201  000D2C  0100               movwf	(??_main+0+0)&0ffh,f
  2202  000D2E  6FF0               	movlw	108
  2203  000D30  0E6C               u2577:
  2204  000D32                     decfsz	wreg,f
  2205  000D32  2EE8               	bra	u2577
  2206  000D34  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  2207  000D36  2FF0               	bra	u2577
  2208  000D38  D7FC               	nop
  2209  000D3A  F000               opt asmopt_pop
  2210                           
  2211                           	line	225
  2212                           	
  2213                           l2823:
  2214  000D3C                     ;Controle.c: 225:             if(!PORTCbits.RC3){
  2215                           	btfsc	((c:3970)),c,3	;volatile
  2216  000D3C  B682               	goto	u2471
  2217  000D3E  EFA3  F006         	goto	u2470
  2218  000D42  EFA5  F006         u2471:
  2219  000D46                     	goto	l2829
  2220  000D46  EFBF  F006         u2470:
  2221  000D4A                     	line	226
  2222                           	
  2223                           l2825:
  2224  000D4A                     ;Controle.c: 226:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  2225                           	opt asmopt_push
  2226                           opt asmopt_off
  2227                           movlw	72
  2228  000D4A  0E48               	movlb	0	; () banked
  2229  000D4C  0100               movwf	(??_main+0+0)&0ffh,f
  2230  000D4E  6FF0               	movlw	108
  2231  000D50  0E6C               u2587:
  2232  000D52                     decfsz	wreg,f
  2233  000D52  2EE8               	bra	u2587
  2234  000D54  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  2235  000D56  2FF0               	bra	u2587
  2236  000D58  D7FC               	nop
  2237  000D5A  F000               opt asmopt_pop
  2238                           
  2239                           	line	227
  2240                           ;Controle.c: 227:                 while (!PORTCbits.RC3){}
  2241                           	goto	l163
  2242  000D5C  EFB0  F006         	
  2243                           l164:
  2244  000D60                     	
  2245                           l163:
  2246  000D60                     	btfss	((c:3970)),c,3	;volatile
  2247  000D60  A682               	goto	u2481
  2248  000D62  EFB5  F006         	goto	u2480
  2249  000D66  EFB7  F006         u2481:
  2250  000D6A                     	goto	l163
  2251  000D6A  EFB0  F006         u2480:
  2252  000D6E                     	goto	l2827
  2253  000D6E  EFB9  F006         	
  2254                           l165:
  2255  000D72                     	line	228
  2256                           	
  2257                           l2827:
  2258  000D72                     ;Controle.c: 228:                 gira_anti_horario();
  2259                           	call	_gira_anti_horario	;wreg free
  2260  000D72  EC6E  F013         	goto	l2829
  2261  000D76  EFBF  F006         	line	229
  2262                           ;Controle.c: 229:             }
  2263                           	
  2264                           l162:
  2265  000D7A                     	goto	l2829
  2266  000D7A  EFBF  F006         	line	230
  2267                           ;Controle.c: 230:         }
  2268                           	
  2269                           l161:
  2270  000D7E                     	line	232
  2271                           	
  2272                           l2829:
  2273  000D7E                     ;Controle.c: 232:         if (!PORTCbits.RC2)
  2274                           	btfsc	((c:3970)),c,2	;volatile
  2275  000D7E  B482               	goto	u2491
  2276  000D80  EFC4  F006         	goto	u2490
  2277  000D84  EFC6  F006         u2491:
  2278  000D88                     	goto	l2843
  2279  000D88  EFFD  F006         u2490:
  2280  000D8C                     	line	234
  2281                           	
  2282                           l2831:
  2283  000D8C                     ;Controle.c: 233:         {;Controle.c: 234:             _delay((unsigned long)((55)*(40
                                 00000/4000.0)));
  2284                           	opt asmopt_push
  2285                           opt asmopt_off
  2286                           movlw	72
  2287  000D8C  0E48               	movlb	0	; () banked
  2288  000D8E  0100               movwf	(??_main+0+0)&0ffh,f
  2289  000D90  6FF0               	movlw	108
  2290  000D92  0E6C               u2597:
  2291  000D94                     decfsz	wreg,f
  2292  000D94  2EE8               	bra	u2597
  2293  000D96  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  2294  000D98  2FF0               	bra	u2597
  2295  000D9A  D7FC               	nop
  2296  000D9C  F000               opt asmopt_pop
  2297                           
  2298                           	line	235
  2299                           	
  2300                           l2833:
  2301  000D9E                     ;Controle.c: 235:             if(!PORTCbits.RC2){
  2302                           	btfsc	((c:3970)),c,2	;volatile
  2303  000D9E  B482               	goto	u2501
  2304  000DA0  EFD4  F006         	goto	u2500
  2305  000DA4  EFD6  F006         u2501:
  2306  000DA8                     	goto	l2843
  2307  000DA8  EFFD  F006         u2500:
  2308  000DAC                     	line	236
  2309                           	
  2310                           l2835:
  2311  000DAC                     ;Controle.c: 236:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  2312                           	opt asmopt_push
  2313                           opt asmopt_off
  2314                           movlw	72
  2315  000DAC  0E48               	movlb	0	; () banked
  2316  000DAE  0100               movwf	(??_main+0+0)&0ffh,f
  2317  000DB0  6FF0               	movlw	108
  2318  000DB2  0E6C               u2607:
  2319  000DB4                     decfsz	wreg,f
  2320  000DB4  2EE8               	bra	u2607
  2321  000DB6  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  2322  000DB8  2FF0               	bra	u2607
  2323  000DBA  D7FC               	nop
  2324  000DBC  F000               opt asmopt_pop
  2325                           
  2326                           	line	237
  2327                           ;Controle.c: 237:                 while (!PORTCbits.RC2){};
  2328                           	goto	l168
  2329  000DBE  EFE1  F006         	
  2330                           l169:
  2331  000DC2                     	
  2332                           l168:
  2333  000DC2                     	btfss	((c:3970)),c,2	;volatile
  2334  000DC2  A482               	goto	u2511
  2335  000DC4  EFE6  F006         	goto	u2510
  2336  000DC8  EFE8  F006         u2511:
  2337  000DCC                     	goto	l168
  2338  000DCC  EFE1  F006         u2510:
  2339  000DD0                     	goto	l2837
  2340  000DD0  EFEA  F006         	
  2341                           l170:
  2342  000DD4                     	line	239
  2343                           	
  2344                           l2837:
  2345  000DD4                     ;Controle.c: 239:                 gira_anti_horario();
  2346                           	call	_gira_anti_horario	;wreg free
  2347  000DD4  EC6E  F013         	line	241
  2348                           	
  2349                           l2839:
  2350  000DD8                     ;Controle.c: 241:                 quant_pessoas = quant_pessoas - 1;
  2351                           	movlw	low(-1)
  2352  000DD8  0EFF               	movlb	0	; () banked
  2353  000DDA  0100               	addwf	((_quant_pessoas))&0ffh,w
  2354  000DDC  25FB               	movwf	((_quant_pessoas))&0ffh
  2355  000DDE  6FFB               	movlw	high(-1)
  2356  000DE0  0EFF               	addwfc	((_quant_pessoas+1))&0ffh,w
  2357  000DE2  21FC               	movwf	1+((_quant_pessoas))&0ffh
  2358  000DE4  6FFC               	line	243
  2359                           	
  2360                           l2841:; BSR set to: 0
  2361  000DE6                     
  2362                           ;Controle.c: 243:                 acende(quant_pessoas);
  2363                           	movff	(_quant_pessoas),(acende@quant_pessoas)
  2364  000DE6  C0FB  F080         	movff	(_quant_pessoas+1),(acende@quant_pessoas+1)
  2365  000DEA  C0FC  F081         	call	_acende	;wreg free
  2366  000DEE  EC1A  F012         	goto	l2843
  2367  000DF2  EFFD  F006         	line	244
  2368                           ;Controle.c: 244:             }
  2369                           	
  2370                           l167:
  2371  000DF6                     	goto	l2843
  2372  000DF6  EFFD  F006         	line	245
  2373                           ;Controle.c: 245:         }
  2374                           	
  2375                           l166:
  2376  000DFA                     	line	246
  2377                           	
  2378                           l2843:
  2379  000DFA                     ;Controle.c: 246:         if(!PORTCbits.RC0){
  2380                           	btfsc	((c:3970)),c,0	;volatile
  2381  000DFA  B082               	goto	u2521
  2382  000DFC  EF02  F007         	goto	u2520
  2383  000E00  EF04  F007         u2521:
  2384  000E04                     	goto	l2809
  2385  000E04  EF5D  F006         u2520:
  2386  000E08                     	line	247
  2387                           	
  2388                           l2845:
  2389  000E08                     ;Controle.c: 247:             _delay((unsigned long)((55)*(4000000/4000.0)));
  2390                           	opt asmopt_push
  2391                           opt asmopt_off
  2392                           movlw	72
  2393  000E08  0E48               	movlb	0	; () banked
  2394  000E0A  0100               movwf	(??_main+0+0)&0ffh,f
  2395  000E0C  6FF0               	movlw	108
  2396  000E0E  0E6C               u2617:
  2397  000E10                     decfsz	wreg,f
  2398  000E10  2EE8               	bra	u2617
  2399  000E12  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  2400  000E14  2FF0               	bra	u2617
  2401  000E16  D7FC               	nop
  2402  000E18  F000               opt asmopt_pop
  2403                           
  2404                           	line	248
  2405                           	
  2406                           l2847:
  2407  000E1A                     ;Controle.c: 248:             if(!PORTCbits.RC0){
  2408                           	btfsc	((c:3970)),c,0	;volatile
  2409  000E1A  B082               	goto	u2531
  2410  000E1C  EF12  F007         	goto	u2530
  2411  000E20  EF14  F007         u2531:
  2412  000E24                     	goto	l2809
  2413  000E24  EF5D  F006         u2530:
  2414  000E28                     	line	249
  2415                           	
  2416                           l2849:
  2417  000E28                     ;Controle.c: 249:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  2418                           	opt asmopt_push
  2419                           opt asmopt_off
  2420                           movlw	72
  2421  000E28  0E48               	movlb	0	; () banked
  2422  000E2A  0100               movwf	(??_main+0+0)&0ffh,f
  2423  000E2C  6FF0               	movlw	108
  2424  000E2E  0E6C               u2627:
  2425  000E30                     decfsz	wreg,f
  2426  000E30  2EE8               	bra	u2627
  2427  000E32  D7FE               	decfsz	(??_main+0+0)&0ffh,f
  2428  000E34  2FF0               	bra	u2627
  2429  000E36  D7FC               	nop
  2430  000E38  F000               opt asmopt_pop
  2431                           
  2432                           	line	250
  2433                           ;Controle.c: 250:                 while (!PORTCbits.RC0){}
  2434                           	goto	l173
  2435  000E3A  EF1F  F007         	
  2436                           l174:
  2437  000E3E                     	
  2438                           l173:
  2439  000E3E                     	btfss	((c:3970)),c,0	;volatile
  2440  000E3E  A082               	goto	u2541
  2441  000E40  EF24  F007         	goto	u2540
  2442  000E44  EF26  F007         u2541:
  2443  000E48                     	goto	l173
  2444  000E48  EF1F  F007         u2540:
  2445  000E4C                     	goto	l2851
  2446  000E4C  EF28  F007         	
  2447                           l175:
  2448  000E50                     	line	251
  2449                           	
  2450                           l2851:
  2451  000E50                     ;Controle.c: 251:                 gira_horarioF();
  2452                           	call	_gira_horarioF	;wreg free
  2453  000E50  EC09  F013         	goto	l2809
  2454  000E54  EF5D  F006         	line	252
  2455                           ;Controle.c: 252:             }
  2456                           	
  2457                           l172:
  2458  000E58                     	goto	l2809
  2459  000E58  EF5D  F006         	line	253
  2460                           ;Controle.c: 253:         }
  2461                           	
  2462                           l171:
  2463  000E5C                     	goto	l2809
  2464  000E5C  EF5D  F006         	line	255
  2465                           ;Controle.c: 255:     }
  2466                           	
  2467                           l176:
  2468  000E60                     	goto	l2809
  2469  000E60  EF5D  F006         	
  2470                           l177:
  2471  000E64                     	line	256
  2472                           	
  2473                           l178:
  2474  000E64                     	global	start
  2475                           	goto	start
  2476  000E64  EF07  F000         	opt stack 0
  2477                           GLOBAL	__end_of_main
  2478                           	__end_of_main:
  2479  000E68                     	signat	_main,8313
  2480                           	global	_gira_horarioF
  2481                           
  2482 ;; *************** function _gira_horarioF *****************
  2483 ;; Defined at:
  2484 ;;		line 121 in file "Controle.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2498 ;;      Params:         0       0       0       0       0       0       0
  2499 ;;      Locals:         0       0       0       0       0       0       0
  2500 ;;      Temps:          0       2       0       0       0       0       0
  2501 ;;      Totals:         0       2       0       0       0       0       0
  2502 ;;Total ram usage:        2 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:   14
  2505 ;; This function calls:
  2506 ;;		_lcd_clear
  2507 ;;		_lcd_goto
  2508 ;;		_lcd_puts
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           psect	text1,class=CODE,space=0,reloc=2,group=0
  2514                           	line	121
  2515                           global __ptext1
  2516                           __ptext1:
  2517  002612                     psect	text1
  2518                           	file	"Controle.c"
  2519                           	line	121
  2520                           	global	__size_of_gira_horarioF
  2521                           	__size_of_gira_horarioF	equ	__end_of_gira_horarioF-_gira_horarioF
  2522  0000                     	
  2523                           _gira_horarioF:
  2524  002612                     ;incstack = 0
  2525                           	opt	stack 16
  2526                           	line	124
  2527                           	
  2528                           l2693:
  2529  002612                     ;Controle.c: 124:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2530                           	opt asmopt_push
  2531                           opt asmopt_off
  2532                           movlw	7
  2533  002612  0E07               	movlb	0	; () banked
  2534  002614  0100               movwf	(??_gira_horarioF+0+0)&0ffh,f
  2535  002616  6F83               	movlw	125
  2536  002618  0E7D               u2637:
  2537  00261A                     decfsz	wreg,f
  2538  00261A  2EE8               	bra	u2637
  2539  00261C  D7FE               	decfsz	(??_gira_horarioF+0+0)&0ffh,f
  2540  00261E  2F83               	bra	u2637
  2541  002620  D7FC               opt asmopt_pop
  2542                           
  2543                           	line	125
  2544                           	
  2545                           l2695:
  2546  002622                     ;Controle.c: 125:     lcd_clear();
  2547                           	call	_lcd_clear	;wreg free
  2548  002622  ECFF  F013         	line	126
  2549                           	
  2550                           l2697:
  2551  002626                     ;Controle.c: 126:     lcd_goto(3);
  2552                           	movlw	(03h)&0ffh
  2553  002626  0E03               	
  2554                           	call	_lcd_goto
  2555  002628  EC2E  F014         	line	127
  2556                           	
  2557                           l2699:
  2558  00262C                     ;Controle.c: 127:     lcd_puts("Saindo");
  2559                           		movlw	low(STR_5)
  2560  00262C  0E44               	movlb	0	; () banked
  2561  00262E  0100               	movwf	((lcd_puts@s))&0ffh
  2562  002630  6F81               	movlw	high(STR_5)
  2563  002632  0E06               	movwf	((lcd_puts@s+1))&0ffh
  2564  002634  6F82               
  2565                           	call	_lcd_puts	;wreg free
  2566  002636  EC93  F010         	line	128
  2567                           	
  2568                           l2701:
  2569  00263A                     ;Controle.c: 128:      _delay((unsigned long)((5000)*(4000000/4000.0)));
  2570                           	opt asmopt_push
  2571                           opt asmopt_off
  2572                           movlw  26
  2573  00263A  0E1A               	movlb	0	; () banked
  2574  00263C  0100               movwf	(??_gira_horarioF+0+0+1)&0ffh,f
  2575  00263E  6F84               movlw	94
  2576  002640  0E5E               movwf	(??_gira_horarioF+0+0)&0ffh,f
  2577  002642  6F83               	movlw	110
  2578  002644  0E6E               u2647:
  2579  002646                     decfsz	wreg,f
  2580  002646  2EE8               	bra	u2647
  2581  002648  D7FE               	decfsz	(??_gira_horarioF+0+0)&0ffh,f
  2582  00264A  2F83               	bra	u2647
  2583  00264C  D7FC               	decfsz	(??_gira_horarioF+0+0+1)&0ffh,f
  2584  00264E  2F84               	bra	u2647
  2585  002650  D7FA               	nop
  2586  002652  F000               opt asmopt_pop
  2587                           
  2588                           	line	129
  2589                           	
  2590                           l129:
  2591  002654                     	return	;funcret
  2592  002654  0012               	opt stack 0
  2593                           GLOBAL	__end_of_gira_horarioF
  2594                           	__end_of_gira_horarioF:
  2595  002656                     	signat	_gira_horarioF,89
  2596                           	global	_gira_horario
  2597                           
  2598 ;; *************** function _gira_horario *****************
  2599 ;; Defined at:
  2600 ;;		line 111 in file "Controle.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;		None
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2614 ;;      Params:         0       0       0       0       0       0       0
  2615 ;;      Locals:         0       0       0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0
  2617 ;;      Totals:         0       0       0       0       0       0       0
  2618 ;;Total ram usage:        0 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:   22
  2621 ;; This function calls:
  2622 ;;		_atualza_entrada
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           psect	text2,class=CODE,space=0,reloc=2,group=0
  2628                           	line	111
  2629                           global __ptext2
  2630                           __ptext2:
  2631  0027C2                     psect	text2
  2632                           	file	"Controle.c"
  2633                           	line	111
  2634                           	global	__size_of_gira_horario
  2635                           	__size_of_gira_horario	equ	__end_of_gira_horario-_gira_horario
  2636  0000                     	
  2637                           _gira_horario:
  2638  0027C2                     ;incstack = 0
  2639                           	opt	stack 8
  2640                           	line	113
  2641                           	
  2642                           l2689:
  2643  0027C2                     ;Controle.c: 113:     if(estado != 1)
  2644                           	movlb	0	; () banked
  2645  0027C2  0100               		decf	((_estado))&0ffh,w
  2646  0027C4  05F9               iorwf	((_estado+1))&0ffh,w
  2647  0027C6  11FA               	btfsc	status,2
  2648  0027C8  B4D8               	goto	u2301
  2649  0027CA  EFE9  F013         	goto	u2300
  2650  0027CE  EFEB  F013         
  2651                           u2301:
  2652  0027D2                     	goto	l126
  2653  0027D2  EFEF  F013         u2300:
  2654  0027D6                     	line	118
  2655                           	
  2656                           l2691:; BSR set to: 0
  2657  0027D6                     
  2658                           ;Controle.c: 114:     {;Controle.c: 118:         atualza_entrada();
  2659                           	call	_atualza_entrada	;wreg free
  2660  0027D6  ECB9  F013         	goto	l126
  2661  0027DA  EFEF  F013         	line	119
  2662                           ;Controle.c: 119:     }
  2663                           	
  2664                           l125:
  2665  0027DE                     	line	120
  2666                           	
  2667                           l126:
  2668  0027DE                     	return	;funcret
  2669  0027DE  0012               	opt stack 0
  2670                           GLOBAL	__end_of_gira_horario
  2671                           	__end_of_gira_horario:
  2672  0027E0                     	signat	_gira_horario,89
  2673                           	global	_atualza_entrada
  2674                           
  2675 ;; *************** function _atualza_entrada *****************
  2676 ;; Defined at:
  2677 ;;		line 102 in file "Controle.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2691 ;;      Params:         0       0       0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:   21
  2698 ;; This function calls:
  2699 ;;		_acende
  2700 ;;		_mostra
  2701 ;; This function is called by:
  2702 ;;		_gira_horario
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           psect	text3,class=CODE,space=0,reloc=2,group=0
  2706                           	line	102
  2707                           global __ptext3
  2708                           __ptext3:
  2709  002772                     psect	text3
  2710                           	file	"Controle.c"
  2711                           	line	102
  2712                           	global	__size_of_atualza_entrada
  2713                           	__size_of_atualza_entrada	equ	__end_of_atualza_entrada-_atualza_entrada
  2714  0000                     	
  2715                           _atualza_entrada:
  2716  002772                     ;incstack = 0
  2717                           	opt	stack 8
  2718                           	line	105
  2719                           	
  2720                           l2667:
  2721  002772                     ;Controle.c: 105:     quant_pessoas = quant_pessoas + 1;
  2722                           	movlw	low(01h)
  2723  002772  0E01               	movlb	0	; () banked
  2724  002774  0100               	addwf	((_quant_pessoas))&0ffh,w
  2725  002776  25FB               	movwf	((_quant_pessoas))&0ffh
  2726  002778  6FFB               	movlw	high(01h)
  2727  00277A  0E00               	addwfc	((_quant_pessoas+1))&0ffh,w
  2728  00277C  21FC               	movwf	1+((_quant_pessoas))&0ffh
  2729  00277E  6FFC               	line	106
  2730                           	
  2731                           l2669:; BSR set to: 0
  2732  002780                     
  2733                           ;Controle.c: 106:     mostra(quant_pessoas);
  2734                           	movff	(_quant_pessoas),(mostra@quant_pessoas)
  2735  002780  C0FB  F0E7         	movff	(_quant_pessoas+1),(mostra@quant_pessoas+1)
  2736  002784  C0FC  F0E8         	call	_mostra	;wreg free
  2737  002788  ECFF  F00C         	line	108
  2738                           	
  2739                           l2671:
  2740  00278C                     ;Controle.c: 108:     acende(quant_pessoas);
  2741                           	movff	(_quant_pessoas),(acende@quant_pessoas)
  2742  00278C  C0FB  F080         	movff	(_quant_pessoas+1),(acende@quant_pessoas+1)
  2743  002790  C0FC  F081         	call	_acende	;wreg free
  2744  002794  EC1A  F012         	line	109
  2745                           	
  2746                           l122:
  2747  002798                     	return	;funcret
  2748  002798  0012               	opt stack 0
  2749                           GLOBAL	__end_of_atualza_entrada
  2750                           	__end_of_atualza_entrada:
  2751  00279A                     	signat	_atualza_entrada,89
  2752                           	global	_mostra
  2753                           
  2754 ;; *************** function _mostra *****************
  2755 ;; Defined at:
  2756 ;;		line 72 in file "Controle.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  quant_pessoa    2  103[BANK0 ] int 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2770 ;;      Params:         0       2       0       0       0       0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0
  2772 ;;      Temps:          0       2       0       0       0       0       0
  2773 ;;      Totals:         0       4       0       0       0       0       0
  2774 ;;Total ram usage:        4 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:   20
  2777 ;; This function calls:
  2778 ;;		_lcd_clear
  2779 ;;		_lcd_goto
  2780 ;;		_lcd_init
  2781 ;;		_lcd_puts
  2782 ;;		_sprintf
  2783 ;; This function is called by:
  2784 ;;		_atualza_entrada
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           psect	text4,class=CODE,space=0,reloc=2,group=0
  2788                           	line	72
  2789                           global __ptext4
  2790                           __ptext4:
  2791  0019FE                     psect	text4
  2792                           	file	"Controle.c"
  2793                           	line	72
  2794                           	global	__size_of_mostra
  2795                           	__size_of_mostra	equ	__end_of_mostra-_mostra
  2796  0000                     	
  2797                           _mostra:
  2798  0019FE                     ;incstack = 0
  2799                           	opt	stack 8
  2800                           	line	74
  2801                           	
  2802                           l2575:
  2803  0019FE                     ;Controle.c: 74:     lcd_init();
  2804                           	call	_lcd_init	;wreg free
  2805  0019FE  EC5D  F010         	line	76
  2806                           	
  2807                           l2577:
  2808  001A02                     ;Controle.c: 76:     if(num_mostra > quant_pessoas)
  2809                           	movlb	0	; () banked
  2810  001A02  0100               		movf	((_num_mostra))&0ffh,w
  2811  001A04  51F7               	subwf	((mostra@quant_pessoas))&0ffh,w
  2812  001A06  5DE7               	movf	((mostra@quant_pessoas+1))&0ffh,w
  2813  001A08  51E8               	xorlw	80h
  2814  001A0A  0A80               	movwf	(??_mostra+0+0)&0ffh
  2815  001A0C  6FE9               	movf	((_num_mostra+1))&0ffh,w
  2816  001A0E  51F8               	xorlw	80h
  2817  001A10  0A80               	subwfb	(??_mostra+0+0)&0ffh,w
  2818  001A12  59E9               	btfsc	status,0
  2819  001A14  B0D8               	goto	u2241
  2820  001A16  EF0F  F00D         	goto	u2240
  2821  001A1A  EF11  F00D         
  2822                           u2241:
  2823  001A1E                     	goto	l2597
  2824  001A1E  EF4F  F00D         u2240:
  2825  001A22                     	line	78
  2826                           	
  2827                           l2579:; BSR set to: 0
  2828  001A22                     
  2829                           ;Controle.c: 77:     {;Controle.c: 78:         _delay((unsigned long)((5)*(4000000/4000.
                                 0)));
  2830                           	opt asmopt_push
  2831                           opt asmopt_off
  2832                           movlw	7
  2833  001A22  0E07               	movlb	0	; () banked
  2834  001A24  0100               movwf	(??_mostra+0+0)&0ffh,f
  2835  001A26  6FE9               	movlw	125
  2836  001A28  0E7D               u2657:
  2837  001A2A                     decfsz	wreg,f
  2838  001A2A  2EE8               	bra	u2657
  2839  001A2C  D7FE               	decfsz	(??_mostra+0+0)&0ffh,f
  2840  001A2E  2FE9               	bra	u2657
  2841  001A30  D7FC               opt asmopt_pop
  2842                           
  2843                           	line	79
  2844                           	
  2845                           l2581:
  2846  001A32                     ;Controle.c: 79:         lcd_clear();
  2847                           	call	_lcd_clear	;wreg free
  2848  001A32  ECFF  F013         	line	80
  2849                           	
  2850                           l2583:
  2851  001A36                     ;Controle.c: 80:         lcd_goto(3);
  2852                           	movlw	(03h)&0ffh
  2853  001A36  0E03               	
  2854                           	call	_lcd_goto
  2855  001A38  EC2E  F014         	line	81
  2856                           	
  2857                           l2585:
  2858  001A3C                     ;Controle.c: 81:         lcd_puts("Entrando");
  2859                           		movlw	low(STR_1)
  2860  001A3C  0E3B               	movlb	0	; () banked
  2861  001A3E  0100               	movwf	((lcd_puts@s))&0ffh
  2862  001A40  6F81               	movlw	high(STR_1)
  2863  001A42  0E06               	movwf	((lcd_puts@s+1))&0ffh
  2864  001A44  6F82               
  2865                           	call	_lcd_puts	;wreg free
  2866  001A46  EC93  F010         	line	82
  2867                           	
  2868                           l2587:
  2869  001A4A                     ;Controle.c: 82:         _delay((unsigned long)((5000)*(4000000/4000.0)));
  2870                           	opt asmopt_push
  2871                           opt asmopt_off
  2872                           movlw  26
  2873  001A4A  0E1A               	movlb	0	; () banked
  2874  001A4C  0100               movwf	(??_mostra+0+0+1)&0ffh,f
  2875  001A4E  6FEA               movlw	94
  2876  001A50  0E5E               movwf	(??_mostra+0+0)&0ffh,f
  2877  001A52  6FE9               	movlw	110
  2878  001A54  0E6E               u2667:
  2879  001A56                     decfsz	wreg,f
  2880  001A56  2EE8               	bra	u2667
  2881  001A58  D7FE               	decfsz	(??_mostra+0+0)&0ffh,f
  2882  001A5A  2FE9               	bra	u2667
  2883  001A5C  D7FC               	decfsz	(??_mostra+0+0+1)&0ffh,f
  2884  001A5E  2FEA               	bra	u2667
  2885  001A60  D7FA               	nop
  2886  001A62  F000               opt asmopt_pop
  2887                           
  2888                           	line	83
  2889                           	
  2890                           l2589:
  2891  001A64                     ;Controle.c: 83:         lcd_clear();
  2892                           	call	_lcd_clear	;wreg free
  2893  001A64  ECFF  F013         	line	84
  2894                           	
  2895                           l2591:
  2896  001A68                     ;Controle.c: 84:         lcd_goto(3);
  2897                           	movlw	(03h)&0ffh
  2898  001A68  0E03               	
  2899                           	call	_lcd_goto
  2900  001A6A  EC2E  F014         	line	85
  2901                           	
  2902                           l2593:
  2903  001A6E                     ;Controle.c: 85:         sprintf(num, "%d", num_mostra);
  2904                           		movlw	low(_num)
  2905  001A6E  0EFD               	movlb	0	; () banked
  2906  001A70  0100               	movwf	((sprintf@s))&0ffh
  2907  001A72  6FD7               	movlw	high(_num)
  2908  001A74  0E00               	movwf	((sprintf@s+1))&0ffh
  2909  001A76  6FD8               
  2910                           		movlw	low(STR_2)
  2911  001A78  0E4B               	movwf	((sprintf@fmt))&0ffh
  2912  001A7A  6FD9               	movlw	high(STR_2)
  2913  001A7C  0E06               	movwf	((sprintf@fmt+1))&0ffh
  2914  001A7E  6FDA               
  2915                           	movff	(_num_mostra),0+(?_sprintf+04h)
  2916  001A80  C0F7  F0DB         	movff	(_num_mostra+1),1+(?_sprintf+04h)
  2917  001A84  C0F8  F0DC         	call	_sprintf	;wreg free
  2918  001A88  EC93  F011         	line	86
  2919                           	
  2920                           l2595:
  2921  001A8C                     ;Controle.c: 86:         lcd_puts(num);
  2922                           		movlw	low(_num)
  2923  001A8C  0EFD               	movlb	0	; () banked
  2924  001A8E  0100               	movwf	((lcd_puts@s))&0ffh
  2925  001A90  6F81               	movlw	high(_num)
  2926  001A92  0E00               	movwf	((lcd_puts@s+1))&0ffh
  2927  001A94  6F82               
  2928                           	call	_lcd_puts	;wreg free
  2929  001A96  EC93  F010         	goto	l2597
  2930  001A9A  EF4F  F00D         	line	87
  2931                           ;Controle.c: 87:     }
  2932                           	
  2933                           l117:
  2934  001A9E                     	line	88
  2935                           	
  2936                           l2597:
  2937  001A9E                     ;Controle.c: 88:     if(num_mostra < quant_pessoas)
  2938                           	movlb	0	; () banked
  2939  001A9E  0100               		movf	((mostra@quant_pessoas))&0ffh,w
  2940  001AA0  51E7               	subwf	((_num_mostra))&0ffh,w
  2941  001AA2  5DF7               	movf	((_num_mostra+1))&0ffh,w
  2942  001AA4  51F8               	xorlw	80h
  2943  001AA6  0A80               	movwf	(??_mostra+0+0)&0ffh
  2944  001AA8  6FE9               	movf	((mostra@quant_pessoas+1))&0ffh,w
  2945  001AAA  51E8               	xorlw	80h
  2946  001AAC  0A80               	subwfb	(??_mostra+0+0)&0ffh,w
  2947  001AAE  59E9               	btfsc	status,0
  2948  001AB0  B0D8               	goto	u2251
  2949  001AB2  EF5D  F00D         	goto	u2250
  2950  001AB6  EF5F  F00D         
  2951                           u2251:
  2952  001ABA                     	goto	l119
  2953  001ABA  EF9D  F00D         u2250:
  2954  001ABE                     	line	90
  2955                           	
  2956                           l2599:; BSR set to: 0
  2957  001ABE                     
  2958                           ;Controle.c: 89:     {;Controle.c: 90:         _delay((unsigned long)((5)*(4000000/4000.
                                 0)));
  2959                           	opt asmopt_push
  2960                           opt asmopt_off
  2961                           movlw	7
  2962  001ABE  0E07               	movlb	0	; () banked
  2963  001AC0  0100               movwf	(??_mostra+0+0)&0ffh,f
  2964  001AC2  6FE9               	movlw	125
  2965  001AC4  0E7D               u2677:
  2966  001AC6                     decfsz	wreg,f
  2967  001AC6  2EE8               	bra	u2677
  2968  001AC8  D7FE               	decfsz	(??_mostra+0+0)&0ffh,f
  2969  001ACA  2FE9               	bra	u2677
  2970  001ACC  D7FC               opt asmopt_pop
  2971                           
  2972                           	line	91
  2973                           	
  2974                           l2601:
  2975  001ACE                     ;Controle.c: 91:         lcd_clear();
  2976                           	call	_lcd_clear	;wreg free
  2977  001ACE  ECFF  F013         	line	92
  2978                           	
  2979                           l2603:
  2980  001AD2                     ;Controle.c: 92:         lcd_goto(3);
  2981                           	movlw	(03h)&0ffh
  2982  001AD2  0E03               	
  2983                           	call	_lcd_goto
  2984  001AD4  EC2E  F014         	line	93
  2985                           	
  2986                           l2605:
  2987  001AD8                     ;Controle.c: 93:         lcd_puts("Saindo");
  2988                           		movlw	low(STR_3)
  2989  001AD8  0E44               	movlb	0	; () banked
  2990  001ADA  0100               	movwf	((lcd_puts@s))&0ffh
  2991  001ADC  6F81               	movlw	high(STR_3)
  2992  001ADE  0E06               	movwf	((lcd_puts@s+1))&0ffh
  2993  001AE0  6F82               
  2994                           	call	_lcd_puts	;wreg free
  2995  001AE2  EC93  F010         	line	94
  2996                           	
  2997                           l2607:
  2998  001AE6                     ;Controle.c: 94:          _delay((unsigned long)((5000)*(4000000/4000.0)));
  2999                           	opt asmopt_push
  3000                           opt asmopt_off
  3001                           movlw  26
  3002  001AE6  0E1A               	movlb	0	; () banked
  3003  001AE8  0100               movwf	(??_mostra+0+0+1)&0ffh,f
  3004  001AEA  6FEA               movlw	94
  3005  001AEC  0E5E               movwf	(??_mostra+0+0)&0ffh,f
  3006  001AEE  6FE9               	movlw	110
  3007  001AF0  0E6E               u2687:
  3008  001AF2                     decfsz	wreg,f
  3009  001AF2  2EE8               	bra	u2687
  3010  001AF4  D7FE               	decfsz	(??_mostra+0+0)&0ffh,f
  3011  001AF6  2FE9               	bra	u2687
  3012  001AF8  D7FC               	decfsz	(??_mostra+0+0+1)&0ffh,f
  3013  001AFA  2FEA               	bra	u2687
  3014  001AFC  D7FA               	nop
  3015  001AFE  F000               opt asmopt_pop
  3016                           
  3017                           	line	95
  3018                           	
  3019                           l2609:
  3020  001B00                     ;Controle.c: 95:         lcd_clear();
  3021                           	call	_lcd_clear	;wreg free
  3022  001B00  ECFF  F013         	line	96
  3023                           	
  3024                           l2611:
  3025  001B04                     ;Controle.c: 96:         lcd_goto(3);
  3026                           	movlw	(03h)&0ffh
  3027  001B04  0E03               	
  3028                           	call	_lcd_goto
  3029  001B06  EC2E  F014         	line	97
  3030                           	
  3031                           l2613:
  3032  001B0A                     ;Controle.c: 97:         sprintf(num, "%d", num_mostra);
  3033                           		movlw	low(_num)
  3034  001B0A  0EFD               	movlb	0	; () banked
  3035  001B0C  0100               	movwf	((sprintf@s))&0ffh
  3036  001B0E  6FD7               	movlw	high(_num)
  3037  001B10  0E00               	movwf	((sprintf@s+1))&0ffh
  3038  001B12  6FD8               
  3039                           		movlw	low(STR_4)
  3040  001B14  0E4B               	movwf	((sprintf@fmt))&0ffh
  3041  001B16  6FD9               	movlw	high(STR_4)
  3042  001B18  0E06               	movwf	((sprintf@fmt+1))&0ffh
  3043  001B1A  6FDA               
  3044                           	movff	(_num_mostra),0+(?_sprintf+04h)
  3045  001B1C  C0F7  F0DB         	movff	(_num_mostra+1),1+(?_sprintf+04h)
  3046  001B20  C0F8  F0DC         	call	_sprintf	;wreg free
  3047  001B24  EC93  F011         	line	98
  3048                           	
  3049                           l2615:
  3050  001B28                     ;Controle.c: 98:         lcd_puts(num);
  3051                           		movlw	low(_num)
  3052  001B28  0EFD               	movlb	0	; () banked
  3053  001B2A  0100               	movwf	((lcd_puts@s))&0ffh
  3054  001B2C  6F81               	movlw	high(_num)
  3055  001B2E  0E00               	movwf	((lcd_puts@s+1))&0ffh
  3056  001B30  6F82               
  3057                           	call	_lcd_puts	;wreg free
  3058  001B32  EC93  F010         	goto	l119
  3059  001B36  EF9D  F00D         	line	99
  3060                           ;Controle.c: 99:     }
  3061                           	
  3062                           l118:
  3063  001B3A                     	line	100
  3064                           	
  3065                           l119:
  3066  001B3A                     	return	;funcret
  3067  001B3A  0012               	opt stack 0
  3068                           GLOBAL	__end_of_mostra
  3069                           	__end_of_mostra:
  3070  001B3C                     	signat	_mostra,4217
  3071                           	global	_sprintf
  3072                           
  3073 ;; *************** function _sprintf *****************
  3074 ;; Defined at:
  3075 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  s               2   87[BANK0 ] PTR unsigned char 
  3078 ;;		 -> num(3), 
  3079 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  3080 ;;		 -> STR_9(3), STR_7(3), STR_4(3), STR_2(3), 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  f               6   97[BANK0 ] struct _IO_FILE
  3083 ;;  ap              2   95[BANK0 ] PTR void [1]
  3084 ;;		 -> ?_sprintf(2), 
  3085 ;;  ret             2   93[BANK0 ] int 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  2   87[BANK0 ] int 
  3088 ;; Registers used:
  3089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3095 ;;      Params:         0       6       0       0       0       0       0
  3096 ;;      Locals:         0      10       0       0       0       0       0
  3097 ;;      Temps:          0       0       0       0       0       0       0
  3098 ;;      Totals:         0      16       0       0       0       0       0
  3099 ;;Total ram usage:       16 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:   19
  3102 ;; This function calls:
  3103 ;;		_vfprintf
  3104 ;; This function is called by:
  3105 ;;		_mostra
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           psect	text5,class=CODE,space=0,reloc=2,group=2
  3109                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  3110                           	line	9
  3111                           global __ptext5
  3112                           __ptext5:
  3113  002326                     psect	text5
  3114                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  3115                           	line	9
  3116                           	global	__size_of_sprintf
  3117                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  3118  0000                     	
  3119                           _sprintf:
  3120  002326                     ;incstack = 0
  3121                           	opt	stack 8
  3122                           	line	15
  3123                           	
  3124                           l2491:
  3125  002326                     		movlw	low(?_sprintf+04h)
  3126  002326  0EDB               	movlb	0	; () banked
  3127  002328  0100               	movwf	((sprintf@ap))&0ffh
  3128  00232A  6FDF               	movlw	high(?_sprintf+04h)
  3129  00232C  0E00               	movwf	((sprintf@ap+1))&0ffh
  3130  00232E  6FE0               
  3131                           	line	16
  3132                           		movff	(sprintf@s),(sprintf@f)
  3133  002330  C0D7  F0E1         	movff	(sprintf@s+1),(sprintf@f+1)
  3134  002334  C0D8  F0E2         
  3135                           	line	17
  3136                           	
  3137                           l2493:; BSR set to: 0
  3138  002338                     
  3139                           	movlw	high(0)
  3140  002338  0E00               	movwf	(1+(sprintf@f+02h))&0ffh
  3141  00233A  6FE4               	movlw	low(0)
  3142  00233C  0E00               	movwf	(0+(sprintf@f+02h))&0ffh
  3143  00233E  6FE3               	line	18
  3144                           	
  3145                           l2495:; BSR set to: 0
  3146  002340                     
  3147                           	movlw	high(0)
  3148  002340  0E00               	movwf	(1+(sprintf@f+04h))&0ffh
  3149  002342  6FE6               	movlw	low(0)
  3150  002344  0E00               	movwf	(0+(sprintf@f+04h))&0ffh
  3151  002346  6FE5               	line	19
  3152                           	
  3153                           l2497:; BSR set to: 0
  3154  002348                     
  3155                           		movlw	low(sprintf@f)
  3156  002348  0EE1               	movwf	((vfprintf@fp))&0ffh
  3157  00234A  6FCF               	movlw	high(sprintf@f)
  3158  00234C  0E00               	movwf	((vfprintf@fp+1))&0ffh
  3159  00234E  6FD0               
  3160                           		movff	(sprintf@fmt),(vfprintf@fmt)
  3161  002350  C0D9  F0D1         	movff	(sprintf@fmt+1),(vfprintf@fmt+1)
  3162  002354  C0DA  F0D2         
  3163                           		movlw	low(sprintf@ap)
  3164  002358  0EDF               	movwf	((vfprintf@ap))&0ffh
  3165  00235A  6FD3               	movlw	high(sprintf@ap)
  3166  00235C  0E00               	movwf	((vfprintf@ap+1))&0ffh
  3167  00235E  6FD4               
  3168                           	call	_vfprintf	;wreg free
  3169  002360  ECFC  F010         	movff	0+?_vfprintf,(sprintf@ret)
  3170  002364  C0CF  F0DD         	movff	1+?_vfprintf,(sprintf@ret+1)
  3171  002368  C0D0  F0DE         	line	20
  3172                           	
  3173                           l2499:
  3174  00236C                     	movlb	0	; () banked
  3175  00236C  0100               	movf	(0+(sprintf@f+02h))&0ffh,w
  3176  00236E  51E3               	addwf	((sprintf@s))&0ffh,w
  3177  002370  25D7               	movwf	c:fsr2l
  3178  002372  6ED9               	movf	(1+(sprintf@f+02h))&0ffh,w
  3179  002374  51E4               	addwfc	((sprintf@s+1))&0ffh,w
  3180  002376  21D8               	movwf	1+c:fsr2l
  3181  002378  6EDA               	movlw	low(0)
  3182  00237A  0E00               	movwf	indf2
  3183  00237C  6EDF               	goto	l958
  3184  00237E  EFC1  F011         	line	22
  3185                           	
  3186                           l2501:; BSR set to: 0
  3187  002382                     
  3188                           	line	23
  3189                           ;	Return value of _sprintf is never used
  3190                           	
  3191                           l958:; BSR set to: 0
  3192  002382                     
  3193                           	return	;funcret
  3194  002382  0012               	opt stack 0
  3195                           GLOBAL	__end_of_sprintf
  3196                           	__end_of_sprintf:
  3197  002384                     	signat	_sprintf,4698
  3198                           	global	_vfprintf
  3199                           
  3200 ;; *************** function _vfprintf *****************
  3201 ;; Defined at:
  3202 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  3205 ;;		 -> sprintf@f(6), 
  3206 ;;  fmt             2   81[BANK0 ] PTR const unsigned char 
  3207 ;;		 -> STR_9(3), STR_7(3), STR_4(3), STR_2(3), 
  3208 ;;  ap              2   83[BANK0 ] PTR PTR void 
  3209 ;;		 -> sprintf@ap(2), 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  cfmt            2   85[BANK0 ] PTR unsigned char 
  3212 ;;		 -> STR_9(3), STR_7(3), STR_4(3), STR_2(3), 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2   79[BANK0 ] int 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3222 ;;      Params:         0       6       0       0       0       0       0
  3223 ;;      Locals:         0       2       0       0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0
  3225 ;;      Totals:         0       8       0       0       0       0       0
  3226 ;;Total ram usage:        8 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:   18
  3229 ;; This function calls:
  3230 ;;		_vfpfcnvrt
  3231 ;; This function is called by:
  3232 ;;		_sprintf
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           psect	text6,class=CODE,space=0,reloc=2,group=0
  3236                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3237                           	line	1368
  3238                           global __ptext6
  3239                           __ptext6:
  3240  0021F8                     psect	text6
  3241                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3242                           	line	1368
  3243                           	global	__size_of_vfprintf
  3244                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  3245  0000                     	
  3246                           _vfprintf:; BSR set to: 0
  3247  0021F8                     
  3248                           ;incstack = 0
  3249                           	opt	stack 8
  3250                           	line	1373
  3251                           	
  3252                           l2417:
  3253  0021F8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3254                           		movff	(vfprintf@fmt),(vfprintf@cfmt)
  3255  0021F8  C0D1  F0D5         	movff	(vfprintf@fmt+1),(vfprintf@cfmt+1)
  3256  0021FC  C0D2  F0D6         
  3257                           	line	1374
  3258                           	
  3259                           l2419:
  3260  002200                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  3261                           	movlw	high(0)
  3262  002200  0E00               	movwf	((c:_nout+1)),c
  3263  002202  6E77               	movlw	low(0)
  3264  002204  0E00               	movwf	((c:_nout)),c
  3265  002206  6E76               	line	1375
  3266                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  3267                           	goto	l2423
  3268  002208  EF1C  F011         	
  3269                           l248:
  3270  00220C                     	line	1376
  3271                           	
  3272                           l2421:
  3273  00220C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  3274                           		movff	(vfprintf@fp),(vfpfcnvrt@fp)
  3275  00220C  C0CF  F0BF         	movff	(vfprintf@fp+1),(vfpfcnvrt@fp+1)
  3276  002210  C0D0  F0C0         
  3277                           		movlw	low(vfprintf@cfmt)
  3278  002214  0ED5               	movlb	0	; () banked
  3279  002216  0100               	movwf	((vfpfcnvrt@fmt))&0ffh
  3280  002218  6FC1               	movlw	high(vfprintf@cfmt)
  3281  00221A  0E00               	movwf	((vfpfcnvrt@fmt+1))&0ffh
  3282  00221C  6FC2               
  3283                           		movff	(vfprintf@ap),(vfpfcnvrt@ap)
  3284  00221E  C0D3  F0C3         	movff	(vfprintf@ap+1),(vfpfcnvrt@ap+1)
  3285  002222  C0D4  F0C4         
  3286                           	call	_vfpfcnvrt	;wreg free
  3287  002226  EC34  F007         	movlb	0	; () banked
  3288  00222A  0100               	movf	(0+?_vfpfcnvrt)&0ffh,w
  3289  00222C  51BF               	addwf	((c:_nout)),c
  3290  00222E  2676               	movf	(1+?_vfpfcnvrt)&0ffh,w
  3291  002230  51C0               	addwfc	((c:_nout+1)),c
  3292  002232  2277               
  3293                           	goto	l2423
  3294  002234  EF1C  F011         	line	1377
  3295                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  3296                           	
  3297                           l247:; BSR set to: 0
  3298  002238                     
  3299                           	line	1375
  3300                           	
  3301                           l2423:
  3302  002238                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  3303                           	movff	(vfprintf@cfmt),tblptrl
  3304  002238  C0D5  FFF6         	movff	(vfprintf@cfmt+1),tblptrh
  3305  00223C  C0D6  FFF7         	if	0	;tblptru may be non-zero
  3306  002240                     	clrf	tblptru
  3308  002240                     	if	0	;tblptru may be non-zero
  3309  002240                     	global __mediumconst
  3310                           movlw	low highword(__mediumconst)
  3313  002240                     	tblrd	*
  3314  002240  0008               	
  3315                           	movf	tablat,w
  3316  002242  50F5               	iorlw	0
  3317  002244  0900               	btfss	status,2
  3318  002246  A4D8               	goto	u2141
  3319  002248  EF28  F011         	goto	u2140
  3320  00224C  EF2A  F011         u2141:
  3321  002250                     	goto	l2421
  3322  002250  EF06  F011         u2140:
  3323  002254                     	
  3324                           l249:
  3325  002254                     	line	1378
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  3327                           	movff	(c:_nout),(?_vfprintf)
  3328  002254  C076  F0CF         	movff	(c:_nout+1),(?_vfprintf+1)
  3329  002258  C077  F0D0         	line	1382
  3330                           	
  3331                           l250:
  3332  00225C                     	return	;funcret
  3333  00225C  0012               	opt stack 0
  3334                           GLOBAL	__end_of_vfprintf
  3335                           	__end_of_vfprintf:
  3336  00225E                     	signat	_vfprintf,12410
  3337                           	global	_vfpfcnvrt
  3338                           
  3339 ;; *************** function _vfpfcnvrt *****************
  3340 ;; Defined at:
  3341 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  3344 ;;		 -> sprintf@f(6), 
  3345 ;;  fmt             2   65[BANK0 ] PTR PTR unsigned char 
  3346 ;;		 -> vfprintf@cfmt(2), 
  3347 ;;  ap              2   67[BANK0 ] PTR PTR void 
  3348 ;;		 -> sprintf@ap(2), 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  ll              8   71[BANK0 ] long long 
  3351 ;;  llu             8    0        unsigned long long 
  3352 ;;  f               4    0        unsigned long long 
  3353 ;;  vp              3    0        PTR void 
  3354 ;;  ct              3    0        unsigned char [3]
  3355 ;;  cp              3    0        PTR unsigned char 
  3356 ;;  i               2    0        int 
  3357 ;;  done            2    0        int 
  3358 ;;  c               1    0        unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  2   63[BANK0 ] int 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3368 ;;      Params:         0       6       0       0       0       0       0
  3369 ;;      Locals:         0       8       0       0       0       0       0
  3370 ;;      Temps:          0       2       0       0       0       0       0
  3371 ;;      Totals:         0      16       0       0       0       0       0
  3372 ;;Total ram usage:       16 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:   17
  3375 ;; This function calls:
  3376 ;;		_dtoa
  3377 ;;		_fputc
  3378 ;; This function is called by:
  3379 ;;		_vfprintf
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           psect	text7,class=CODE,space=0,reloc=2,group=0
  3383                           	line	670
  3384                           global __ptext7
  3385                           __ptext7:
  3386  000E68                     psect	text7
  3387                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3388                           	line	670
  3389                           	global	__size_of_vfpfcnvrt
  3390                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  3391  0000                     	
  3392                           _vfpfcnvrt:
  3393  000E68                     ;incstack = 0
  3394                           	opt	stack 8
  3395                           	line	680
  3396                           	
  3397                           l2319:
  3398  000E68                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3399                           	movff	(vfpfcnvrt@fmt),fsr2l
  3400  000E68  C0C1  FFD9         	movff	(vfpfcnvrt@fmt+1),fsr2h
  3401  000E6C  C0C2  FFDA         	movff	postinc2,tblptrl
  3402  000E70  CFDE FFF6          	movff	postdec2,tblptrh
  3403  000E74  CFDD FFF7          	if	0	;tblptru may be non-zero
  3404  000E78                     	clrf	tblptru
  3406  000E78                     	if	0	;tblptru may be non-zero
  3407  000E78                     	global __mediumconst
  3408                           movlw	low highword(__mediumconst)
  3411  000E78                     	tblrd	*
  3412  000E78  0008               	
  3413                           	movf	tablat,w
  3414  000E7A  50F5               	xorlw	025h
  3415  000E7C  0A25               	btfss	status,2
  3416  000E7E  A4D8               	goto	u2061
  3417  000E80  EF44  F007         	goto	u2060
  3418  000E84  EF46  F007         u2061:
  3419  000E88                     	goto	l2353
  3420  000E88  EFFD  F007         u2060:
  3421  000E8C                     	line	681
  3422                           	
  3423                           l2321:
  3424  000E8C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  3425                           	movff	(vfpfcnvrt@fmt),fsr2l
  3426  000E8C  C0C1  FFD9         	movff	(vfpfcnvrt@fmt+1),fsr2h
  3427  000E90  C0C2  FFDA         	incf	postinc2
  3428  000E94  2ADE               	movlw	0
  3429  000E96  0E00               	addwfc	postdec2
  3430  000E98  22DD               	line	683
  3431                           	
  3432                           l2323:
  3433  000E9A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  3434                           	movlw	high(0)
  3435  000E9A  0E00               	movlb	0	; () banked
  3436  000E9C  0100               	movwf	((_width+1))&0ffh
  3437  000E9E  6FF2               	movlw	low(0)
  3438  000EA0  0E00               	movwf	((_width))&0ffh
  3439  000EA2  6FF1               	movff	(_width),(_flags)
  3440  000EA4  C0F1  F0F5         	movff	(_width+1),(_flags+1)
  3441  000EA8  C0F2  F0F6         	line	684
  3442                           	
  3443                           l2325:; BSR set to: 0
  3444  000EAC                     
  3445                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  3446                           	setf	((_prec))&0ffh
  3447  000EAC  69F3               	setf	((_prec+1))&0ffh
  3448  000EAE  69F4               	line	825
  3449                           	
  3450                           l2327:; BSR set to: 0
  3451  000EB0                     
  3452                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 825:       
                                   if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3453                           	movff	(vfpfcnvrt@fmt),fsr2l
  3454  000EB0  C0C1  FFD9         	movff	(vfpfcnvrt@fmt+1),fsr2h
  3455  000EB4  C0C2  FFDA         	movff	postinc2,tblptrl
  3456  000EB8  CFDE FFF6          	movff	postdec2,tblptrh
  3457  000EBC  CFDD FFF7          	if	0	;tblptru may be non-zero
  3458  000EC0                     	clrf	tblptru
  3460  000EC0                     	if	0	;tblptru may be non-zero
  3461  000EC0                     	global __mediumconst
  3462                           movlw	low highword(__mediumconst)
  3465  000EC0                     	tblrd	*
  3466  000EC0  0008               	
  3467                           	movf	tablat,w
  3468  000EC2  50F5               	xorlw	064h
  3469  000EC4  0A64               	btfsc	status,2
  3470  000EC6  B4D8               	goto	u2071
  3471  000EC8  EF68  F007         	goto	u2070
  3472  000ECC  EF6A  F007         u2071:
  3473  000ED0                     	goto	l2331
  3474  000ED0  EF7E  F007         u2070:
  3475  000ED4                     	
  3476                           l2329:; BSR set to: 0
  3477  000ED4                     
  3478                           	movff	(vfpfcnvrt@fmt),fsr2l
  3479  000ED4  C0C1  FFD9         	movff	(vfpfcnvrt@fmt+1),fsr2h
  3480  000ED8  C0C2  FFDA         	movff	postinc2,tblptrl
  3481  000EDC  CFDE FFF6          	movff	postdec2,tblptrh
  3482  000EE0  CFDD FFF7          	if	0	;tblptru may be non-zero
  3483  000EE4                     	clrf	tblptru
  3485  000EE4                     	if	0	;tblptru may be non-zero
  3486  000EE4                     	global __mediumconst
  3487                           movlw	low highword(__mediumconst)
  3490  000EE4                     	tblrd	*
  3491  000EE4  0008               	
  3492                           	movf	tablat,w
  3493  000EE6  50F5               	xorlw	069h
  3494  000EE8  0A69               	btfss	status,2
  3495  000EEA  A4D8               	goto	u2081
  3496  000EEC  EF7A  F007         	goto	u2080
  3497  000EF0  EF7C  F007         u2081:
  3498  000EF4                     	goto	l2337
  3499  000EF4  EFC0  F007         u2080:
  3500  000EF8                     	goto	l2331
  3501  000EF8  EF7E  F007         	
  3502                           l242:; BSR set to: 0
  3503  000EFC                     
  3504                           	line	827
  3505                           	
  3506                           l2331:; BSR set to: 0
  3507  000EFC                     
  3508                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 827:       
                                       ++*fmt;
  3509                           	movff	(vfpfcnvrt@fmt),fsr2l
  3510  000EFC  C0C1  FFD9         	movff	(vfpfcnvrt@fmt+1),fsr2h
  3511  000F00  C0C2  FFDA         	incf	postinc2
  3512  000F04  2ADE               	movlw	0
  3513  000F06  0E00               	addwfc	postdec2
  3514  000F08  22DD               	line	828
  3515                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 828:       
                                       ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3516                           	movff	(vfpfcnvrt@ap),fsr2l
  3517  000F0A  C0C3  FFD9         	movff	(vfpfcnvrt@ap+1),fsr2h
  3518  000F0E  C0C4  FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  3519  000F12  CFDF F0C5          	movlw	low(02h)
  3520  000F16  0E02               	addwf	postinc2
  3521  000F18  26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  3522  000F1A  CFDF F0C6          	movlw	high(02h)
  3523  000F1E  0E00               	addwfc	postdec2
  3524  000F20  22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  3525  000F22  C0C5  FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  3526  000F26  C0C6  FFDA         	movff	postinc2,(vfpfcnvrt@ll)
  3527  000F2A  CFDE F0C7          	movff	postdec2,(vfpfcnvrt@ll+1)
  3528  000F2E  CFDD F0C8          	movlw	0
  3529  000F32  0E00               	btfsc	((vfpfcnvrt@ll+1))&0ffh,7
  3530  000F34  BFC8               	movlw	-1
  3531  000F36  0EFF               	movwf	((vfpfcnvrt@ll+2))&0ffh
  3532  000F38  6FC9               	movwf	((vfpfcnvrt@ll+3))&0ffh
  3533  000F3A  6FCA               	movwf	((vfpfcnvrt@ll+4))&0ffh
  3534  000F3C  6FCB               	movwf	((vfpfcnvrt@ll+5))&0ffh
  3535  000F3E  6FCC               	movwf	((vfpfcnvrt@ll+6))&0ffh
  3536  000F40  6FCD               	movwf	((vfpfcnvrt@ll+7))&0ffh
  3537  000F42  6FCE               	line	830
  3538                           	
  3539                           l2333:; BSR set to: 0
  3540  000F44                     
  3541                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 830:       
                                       return dtoa(fp, ll);
  3542                           		movff	(vfpfcnvrt@fp),(dtoa@fp)
  3543  000F44  C0BF  F09B         	movff	(vfpfcnvrt@fp+1),(dtoa@fp+1)
  3544  000F48  C0C0  F09C         
  3545                           	movff	(vfpfcnvrt@ll),(dtoa@d)
  3546  000F4C  C0C7  F09D         	movff	(vfpfcnvrt@ll+1),(dtoa@d+1)
  3547  000F50  C0C8  F09E         	movff	(vfpfcnvrt@ll+2),(dtoa@d+2)
  3548  000F54  C0C9  F09F         	movff	(vfpfcnvrt@ll+3),(dtoa@d+3)
  3549  000F58  C0CA  F0A0         	movff	(vfpfcnvrt@ll+4),(dtoa@d+4)
  3550  000F5C  C0CB  F0A1         	movff	(vfpfcnvrt@ll+5),(dtoa@d+5)
  3551  000F60  C0CC  F0A2         	movff	(vfpfcnvrt@ll+6),(dtoa@d+6)
  3552  000F64  C0CD  F0A3         	movff	(vfpfcnvrt@ll+7),(dtoa@d+7)
  3553  000F68  C0CE  F0A4         	call	_dtoa	;wreg free
  3554  000F6C  EC28  F003         	movff	0+?_dtoa,(?_vfpfcnvrt)
  3555  000F70  C09B  F0BF         	movff	1+?_dtoa,(?_vfpfcnvrt+1)
  3556  000F74  C09C  F0C0         	goto	l243
  3557  000F78  EF1E  F008         	
  3558                           l2335:
  3559  000F7C                     	goto	l243
  3560  000F7C  EF1E  F008         	line	831
  3561                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 831:       
                                   }
  3562                           	
  3563                           l240:
  3564  000F80                     	line	1350
  3565                           	
  3566                           l2337:
  3567  000F80                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  3568                           	movff	(vfpfcnvrt@fmt),fsr2l
  3569  000F80  C0C1  FFD9         	movff	(vfpfcnvrt@fmt+1),fsr2h
  3570  000F84  C0C2  FFDA         	movff	postinc2,tblptrl
  3571  000F88  CFDE FFF6          	movff	postdec2,tblptrh
  3572  000F8C  CFDD FFF7          	if	0	;tblptru may be non-zero
  3573  000F90                     	clrf	tblptru
  3575  000F90                     	if	0	;tblptru may be non-zero
  3576  000F90                     	global __mediumconst
  3577                           movlw	low highword(__mediumconst)
  3580  000F90                     	tblrd	*
  3581  000F90  0008               	
  3582                           	movf	tablat,w
  3583  000F92  50F5               	xorlw	025h
  3584  000F94  0A25               	btfss	status,2
  3585  000F96  A4D8               	goto	u2091
  3586  000F98  EFD0  F007         	goto	u2090
  3587  000F9C  EFD2  F007         u2091:
  3588  000FA0                     	goto	l2347
  3589  000FA0  EFED  F007         u2090:
  3590  000FA4                     	line	1351
  3591                           	
  3592                           l2339:
  3593  000FA4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  3594                           	movff	(vfpfcnvrt@fmt),fsr2l
  3595  000FA4  C0C1  FFD9         	movff	(vfpfcnvrt@fmt+1),fsr2h
  3596  000FA8  C0C2  FFDA         	incf	postinc2
  3597  000FAC  2ADE               	movlw	0
  3598  000FAE  0E00               	addwfc	postdec2
  3599  000FB0  22DD               	line	1352
  3600                           	
  3601                           l2341:
  3602  000FB2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  3603                           	movlw	high(025h)
  3604  000FB2  0E00               	movlb	0	; () banked
  3605  000FB4  0100               	movwf	((fputc@c+1))&0ffh
  3606  000FB6  6F81               	movlw	low(025h)
  3607  000FB8  0E25               	movwf	((fputc@c))&0ffh
  3608  000FBA  6F80               		movff	(vfpfcnvrt@fp),(fputc@fp)
  3609  000FBC  C0BF  F082         	movff	(vfpfcnvrt@fp+1),(fputc@fp+1)
  3610  000FC0  C0C0  F083         
  3611                           	call	_fputc	;wreg free
  3612  000FC4  EC35  F00E         	line	1353
  3613                           	
  3614                           l2343:
  3615  000FC8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  3616                           	movlw	high(01h)
  3617  000FC8  0E00               	movlb	0	; () banked
  3618  000FCA  0100               	movwf	((?_vfpfcnvrt+1))&0ffh
  3619  000FCC  6FC0               	movlw	low(01h)
  3620  000FCE  0E01               	movwf	((?_vfpfcnvrt))&0ffh
  3621  000FD0  6FBF               	goto	l243
  3622  000FD2  EF1E  F008         	
  3623                           l2345:; BSR set to: 0
  3624  000FD6                     
  3625                           	goto	l243
  3626  000FD6  EF1E  F008         	line	1354
  3627                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  3628                           	
  3629                           l244:; BSR set to: 0
  3630  000FDA                     
  3631                           	line	1357
  3632                           	
  3633                           l2347:
  3634  000FDA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  3635                           	movff	(vfpfcnvrt@fmt),fsr2l
  3636  000FDA  C0C1  FFD9         	movff	(vfpfcnvrt@fmt+1),fsr2h
  3637  000FDE  C0C2  FFDA         	incf	postinc2
  3638  000FE2  2ADE               	movlw	0
  3639  000FE4  0E00               	addwfc	postdec2
  3640  000FE6  22DD               	line	1358
  3641                           	
  3642                           l2349:
  3643  000FE8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  3644                           	movlw	high(0)
  3645  000FE8  0E00               	movlb	0	; () banked
  3646  000FEA  0100               	movwf	((?_vfpfcnvrt+1))&0ffh
  3647  000FEC  6FC0               	movlw	low(0)
  3648  000FEE  0E00               	movwf	((?_vfpfcnvrt))&0ffh
  3649  000FF0  6FBF               	goto	l243
  3650  000FF2  EF1E  F008         	
  3651                           l2351:; BSR set to: 0
  3652  000FF6                     
  3653                           	goto	l243
  3654  000FF6  EF1E  F008         	line	1359
  3655                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  3656                           	
  3657                           l239:; BSR set to: 0
  3658  000FFA                     
  3659                           	line	1362
  3660                           	
  3661                           l2353:
  3662  000FFA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  3663                           	movff	(vfpfcnvrt@fmt),fsr2l
  3664  000FFA  C0C1  FFD9         	movff	(vfpfcnvrt@fmt+1),fsr2h
  3665  000FFE  C0C2  FFDA         	movff	postinc2,tblptrl
  3666  001002  CFDE FFF6          	movff	postdec2,tblptrh
  3667  001006  CFDD FFF7          	if	0	;tblptru may be non-zero
  3668  00100A                     	clrf	tblptru
  3670  00100A                     	if	0	;tblptru may be non-zero
  3671  00100A                     	global __mediumconst
  3672                           movlw	low highword(__mediumconst)
  3675  00100A                     	tblrd	*
  3676  00100A  0008               	
  3677                           	movf	tablat,w
  3678  00100C  50F5               
  3679                           	movlb	0	; () banked
  3680  00100E  0100               	movwf	((fputc@c))&0ffh
  3681  001010  6F80               	clrf	((fputc@c+1))&0ffh
  3682  001012  6B81               		movff	(vfpfcnvrt@fp),(fputc@fp)
  3683  001014  C0BF  F082         	movff	(vfpfcnvrt@fp+1),(fputc@fp+1)
  3684  001018  C0C0  F083         
  3685                           	call	_fputc	;wreg free
  3686  00101C  EC35  F00E         	line	1363
  3687                           	
  3688                           l2355:
  3689  001020                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  3690                           	movff	(vfpfcnvrt@fmt),fsr2l
  3691  001020  C0C1  FFD9         	movff	(vfpfcnvrt@fmt+1),fsr2h
  3692  001024  C0C2  FFDA         	incf	postinc2
  3693  001028  2ADE               	movlw	0
  3694  00102A  0E00               	addwfc	postdec2
  3695  00102C  22DD               	line	1364
  3696                           	
  3697                           l2357:
  3698  00102E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  3699                           	movlw	high(01h)
  3700  00102E  0E00               	movlb	0	; () banked
  3701  001030  0100               	movwf	((?_vfpfcnvrt+1))&0ffh
  3702  001032  6FC0               	movlw	low(01h)
  3703  001034  0E01               	movwf	((?_vfpfcnvrt))&0ffh
  3704  001036  6FBF               	goto	l243
  3705  001038  EF1E  F008         	
  3706                           l2359:; BSR set to: 0
  3707  00103C                     
  3708                           	line	1365
  3709                           	
  3710                           l243:
  3711  00103C                     	return	;funcret
  3712  00103C  0012               	opt stack 0
  3713                           GLOBAL	__end_of_vfpfcnvrt
  3714                           	__end_of_vfpfcnvrt:
  3715  00103E                     	signat	_vfpfcnvrt,12410
  3716                           	global	_dtoa
  3717                           
  3718 ;; *************** function _dtoa *****************
  3719 ;; Defined at:
  3720 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  3723 ;;		 -> sprintf@f(6), 
  3724 ;;  d               8   29[BANK0 ] long long 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  n               8   53[BANK0 ] long long 
  3727 ;;  i               2   61[BANK0 ] int 
  3728 ;;  s               2   51[BANK0 ] int 
  3729 ;;  w               2   49[BANK0 ] int 
  3730 ;;  p               2   47[BANK0 ] int 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  2   27[BANK0 ] int 
  3733 ;; Registers used:
  3734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3740 ;;      Params:         0      10       0       0       0       0       0
  3741 ;;      Locals:         0      18       0       0       0       0       0
  3742 ;;      Temps:          0       8       0       0       0       0       0
  3743 ;;      Totals:         0      36       0       0       0       0       0
  3744 ;;Total ram usage:       36 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:   16
  3747 ;; This function calls:
  3748 ;;		___aodiv
  3749 ;;		___aomod
  3750 ;;		_abs
  3751 ;;		_pad
  3752 ;; This function is called by:
  3753 ;;		_vfpfcnvrt
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           psect	text8,class=CODE,space=0,reloc=2,group=0
  3757                           	line	274
  3758                           global __ptext8
  3759                           __ptext8:
  3760  000650                     psect	text8
  3761                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3762                           	line	274
  3763                           	global	__size_of_dtoa
  3764                           	__size_of_dtoa	equ	__end_of_dtoa-_dtoa
  3765  0000                     	
  3766                           _dtoa:
  3767  000650                     ;incstack = 0
  3768                           	opt	stack 8
  3769                           	line	280
  3770                           	
  3771                           l2187:
  3772  000650                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 274: static
                                  int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\
                                 c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\c
                                 ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\
                                 sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
                                 v2.00\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3773                           	movff	(dtoa@d),(dtoa@n)
  3774  000650  C09D  F0B5         	movff	(dtoa@d+1),(dtoa@n+1)
  3775  000654  C09E  F0B6         	movff	(dtoa@d+2),(dtoa@n+2)
  3776  000658  C09F  F0B7         	movff	(dtoa@d+3),(dtoa@n+3)
  3777  00065C  C0A0  F0B8         	movff	(dtoa@d+4),(dtoa@n+4)
  3778  000660  C0A1  F0B9         	movff	(dtoa@d+5),(dtoa@n+5)
  3779  000664  C0A2  F0BA         	movff	(dtoa@d+6),(dtoa@n+6)
  3780  000668  C0A3  F0BB         	movff	(dtoa@d+7),(dtoa@n+7)
  3781  00066C  C0A4  F0BC         	line	281
  3782                           	
  3783                           l2189:
  3784  000670                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 281:     s 
                                 = n < 0 ? 1 : 0;
  3785                           	movlb	0	; () banked
  3786  000670  0100               	btfsc	((dtoa@n+7))&0ffh,7
  3787  000672  BFBC               	goto	u1761
  3788  000674  EF3E  F003         	goto	u1760
  3789  000678  EF41  F003         
  3790                           u1761:
  3791  00067C                     	movlw	1
  3792  00067C  0E01               	goto	u1770
  3793  00067E  EF42  F003         u1760:
  3794  000682                     	movlw	0
  3795  000682  0E00               u1770:
  3796  000684                     	movwf	((dtoa@s))&0ffh
  3797  000684  6FB3               	clrf	((dtoa@s+1))&0ffh
  3798  000686  6BB4               	line	282
  3799                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 282:     if
                                  (s) {
  3800                           	movf	((dtoa@s))&0ffh,w
  3801  000688  51B3               iorwf	((dtoa@s+1))&0ffh,w
  3802  00068A  11B4               	btfsc	status,2
  3803  00068C  B4D8               	goto	u1781
  3804  00068E  EF4B  F003         	goto	u1780
  3805  000692  EF4D  F003         
  3806                           u1781:
  3807  000696                     	goto	l2193
  3808  000696  EF5F  F003         u1780:
  3809  00069A                     	line	283
  3810                           	
  3811                           l2191:; BSR set to: 0
  3812  00069A                     
  3813                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 283:       
                                   n = -n;
  3814                           	comf	((dtoa@n+7))&0ffh
  3815  00069A  1FBC               	comf	((dtoa@n+6))&0ffh
  3816  00069C  1FBB               	comf	((dtoa@n+5))&0ffh
  3817  00069E  1FBA               	comf	((dtoa@n+4))&0ffh
  3818  0006A0  1FB9               	comf	((dtoa@n+3))&0ffh
  3819  0006A2  1FB8               	comf	((dtoa@n+2))&0ffh
  3820  0006A4  1FB7               	comf	((dtoa@n+1))&0ffh
  3821  0006A6  1FB6               	negf	((dtoa@n))&0ffh
  3822  0006A8  6DB5               	movlw	0
  3823  0006AA  0E00               	addwfc	((dtoa@n+1))&0ffh
  3824  0006AC  23B6               	addwfc	((dtoa@n+2))&0ffh
  3825  0006AE  23B7               	addwfc	((dtoa@n+3))&0ffh
  3826  0006B0  23B8               	addwfc	((dtoa@n+4))&0ffh
  3827  0006B2  23B9               	addwfc	((dtoa@n+5))&0ffh
  3828  0006B4  23BA               	addwfc	((dtoa@n+6))&0ffh
  3829  0006B6  23BB               	addwfc	((dtoa@n+7))&0ffh
  3830  0006B8  23BC               	goto	l2193
  3831  0006BA  EF5F  F003         	line	284
  3832                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 284:     }

  3833                           	
  3834                           l213:; BSR set to: 0
  3835  0006BE                     
  3836                           	line	287
  3837                           	
  3838                           l2193:; BSR set to: 0
  3839  0006BE                     
  3840                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 287:     if
                                  (!(prec < 0)) {
  3841                           	btfsc	((_prec+1))&0ffh,7
  3842  0006BE  BFF4               	goto	u1791
  3843  0006C0  EF64  F003         	goto	u1790
  3844  0006C4  EF66  F003         
  3845                           u1791:
  3846  0006C8                     	goto	l2197
  3847  0006C8  EF69  F003         u1790:
  3848  0006CC                     	line	288
  3849                           	
  3850                           l2195:; BSR set to: 0
  3851  0006CC                     
  3852                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 288:       
                                   flags &= ~(1 << 1);
  3853                           	bcf	(0+(1/8)+(_flags))&0ffh,(1)&7
  3854  0006CC  93F5               	goto	l2197
  3855  0006CE  EF69  F003         	line	289
  3856                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 289:     }

  3857                           	
  3858                           l214:; BSR set to: 0
  3859  0006D2                     
  3860                           	line	290
  3861                           	
  3862                           l2197:; BSR set to: 0
  3863  0006D2                     
  3864                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 290:     p 
                                 = (0 < prec) ? prec : 1;
  3865                           	btfsc	((_prec+1))&0ffh,7
  3866  0006D2  BFF4               	goto	u1800
  3867  0006D4  EF76  F003         	movf	((_prec+1))&0ffh,w
  3868  0006D8  51F4               	bnz	u1801
  3869  0006DA  E106               	decf	((_prec))&0ffh,w
  3870  0006DC  05F3               	btfsc	status,0
  3871  0006DE  B0D8               	goto	u1801
  3872  0006E0  EF74  F003         	goto	u1800
  3873  0006E4  EF76  F003         
  3874                           u1801:
  3875  0006E8                     	goto	l216
  3876  0006E8  EF7C  F003         u1800:
  3877  0006EC                     	
  3878                           l2199:; BSR set to: 0
  3879  0006EC                     
  3880                           	movlw	high(01h)
  3881  0006EC  0E00               	movwf	((dtoa@p+1))&0ffh
  3882  0006EE  6FB0               	movlw	low(01h)
  3883  0006F0  0E01               	movwf	((dtoa@p))&0ffh
  3884  0006F2  6FAF               	goto	l218
  3885  0006F4  EF80  F003         	
  3886                           l216:; BSR set to: 0
  3887  0006F8                     
  3888                           	movff	(_prec),(dtoa@p)
  3889  0006F8  C0F3  F0AF         	movff	(_prec+1),(dtoa@p+1)
  3890  0006FC  C0F4  F0B0         	
  3891                           l218:; BSR set to: 0
  3892  000700                     
  3893                           	line	291
  3894                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 291:     w 
                                 = width;
  3895                           	movff	(_width),(dtoa@w)
  3896  000700  C0F1  F0B1         	movff	(_width+1),(dtoa@w+1)
  3897  000704  C0F2  F0B2         	line	292
  3898                           	
  3899                           l2201:; BSR set to: 0
  3900  000708                     
  3901                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 292:     if
                                  (s || (flags & (1 << 2))) {
  3902                           	movf	((dtoa@s))&0ffh,w
  3903  000708  51B3               iorwf	((dtoa@s+1))&0ffh,w
  3904  00070A  11B4               	btfss	status,2
  3905  00070C  A4D8               	goto	u1811
  3906  00070E  EF8B  F003         	goto	u1810
  3907  000712  EF8D  F003         
  3908                           u1811:
  3909  000716                     	goto	l2205
  3910  000716  EF96  F003         u1810:
  3911  00071A                     	
  3912                           l2203:; BSR set to: 0
  3913  00071A                     
  3914                           	
  3915                           	btfss	((_flags))&0ffh,(2)&7
  3916  00071A  A5F5               	goto	u1821
  3917  00071C  EF92  F003         	goto	u1820
  3918  000720  EF94  F003         u1821:
  3919  000724                     	goto	l2207
  3920  000724  EF9B  F003         u1820:
  3921  000728                     	goto	l2205
  3922  000728  EF96  F003         	
  3923                           l221:; BSR set to: 0
  3924  00072C                     
  3925                           	line	293
  3926                           	
  3927                           l2205:; BSR set to: 0
  3928  00072C                     
  3929                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 293:       
                                   --w;
  3930                           	decf	((dtoa@w))&0ffh
  3931  00072C  07B1               	btfss	status,0
  3932  00072E  A0D8               	decf	((dtoa@w+1))&0ffh
  3933  000730  07B2               	goto	l2207
  3934  000732  EF9B  F003         	line	294
  3935                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 294:     }

  3936                           	
  3937                           l219:; BSR set to: 0
  3938  000736                     
  3939                           	line	297
  3940                           	
  3941                           l2207:; BSR set to: 0
  3942  000736                     
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 297:     i 
                                 = sizeof(dbuf) - 1;
  3944                           	movlw	high(01Fh)
  3945  000736  0E00               	movwf	((dtoa@i+1))&0ffh
  3946  000738  6FBE               	movlw	low(01Fh)
  3947  00073A  0E1F               	movwf	((dtoa@i))&0ffh
  3948  00073C  6FBD               	line	298
  3949                           	
  3950                           l2209:; BSR set to: 0
  3951  00073E                     
  3952                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 298:     db
                                 uf[i] = '\0';
  3953                           	movlw	low(_dbuf)
  3954  00073E  0E00               	addwf	((dtoa@i))&0ffh,w
  3955  000740  25BD               	movwf	c:fsr2l
  3956  000742  6ED9               	movlw	high(_dbuf)
  3957  000744  0E01               	addwfc	((dtoa@i+1))&0ffh,w
  3958  000746  21BE               	movwf	1+c:fsr2l
  3959  000748  6EDA               	movlw	low(0)
  3960  00074A  0E00               	movwf	indf2
  3961  00074C  6EDF               	line	299
  3962                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3963                           	goto	l2221
  3964  00074E  EF28  F004         	
  3965                           l223:; BSR set to: 0
  3966  000752                     
  3967                           	line	300
  3968                           	
  3969                           l2211:; BSR set to: 0
  3970  000752                     
  3971                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 300:       
                                   --i;
  3972                           	decf	((dtoa@i))&0ffh
  3973  000752  07BD               	btfss	status,0
  3974  000754  A0D8               	decf	((dtoa@i+1))&0ffh
  3975  000756  07BE               	line	301
  3976                           	
  3977                           l2213:; BSR set to: 0
  3978  000758                     
  3979                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 301:       
                                   dbuf[i] = '0' + abs(n % 10);
  3980                           	movlw	low(_dbuf)
  3981  000758  0E00               	addwf	((dtoa@i))&0ffh,w
  3982  00075A  25BD               	movwf	c:fsr2l
  3983  00075C  6ED9               	movlw	high(_dbuf)
  3984  00075E  0E01               	addwfc	((dtoa@i+1))&0ffh,w
  3985  000760  21BE               	movwf	1+c:fsr2l
  3986  000762  6EDA               	movff	(dtoa@n),(___aomod@dividend)
  3987  000764  C0B5  F080         	movff	(dtoa@n+1),(___aomod@dividend+1)
  3988  000768  C0B6  F081         	movff	(dtoa@n+2),(___aomod@dividend+2)
  3989  00076C  C0B7  F082         	movff	(dtoa@n+3),(___aomod@dividend+3)
  3990  000770  C0B8  F083         	movff	(dtoa@n+4),(___aomod@dividend+4)
  3991  000774  C0B9  F084         	movff	(dtoa@n+5),(___aomod@dividend+5)
  3992  000778  C0BA  F085         	movff	(dtoa@n+6),(___aomod@dividend+6)
  3993  00077C  C0BB  F086         	movff	(dtoa@n+7),(___aomod@dividend+7)
  3994  000780  C0BC  F087         	movlw	byte0(0Ah)
  3995  000784  0E0A               	movwf	((___aomod@divisor))&0ffh
  3996  000786  6F88               	movlw	byte1(0Ah)
  3997  000788  0E00               	movwf	((___aomod@divisor+1))&0ffh
  3998  00078A  6F89               	movlw	byte2(0Ah)
  3999  00078C  0E00               	movwf	((___aomod@divisor+2))&0ffh
  4000  00078E  6F8A               	movlw	byte3(0Ah)
  4001  000790  0E00               	movwf	((___aomod@divisor+3))&0ffh
  4002  000792  6F8B               	movlw	byte4(0Ah)
  4003  000794  0E00               	movwf	((___aomod@divisor+4))&0ffh
  4004  000796  6F8C               	movlw	byte5(0Ah)
  4005  000798  0E00               	movwf	((___aomod@divisor+5))&0ffh
  4006  00079A  6F8D               	movlw	byte6(0Ah)
  4007  00079C  0E00               	movwf	((___aomod@divisor+6))&0ffh
  4008  00079E  6F8E               	movlw	byte7(0Ah)
  4009  0007A0  0E00               	movwf	((___aomod@divisor+7))&0ffh
  4010  0007A2  6F8F               	call	___aomod	;wreg free
  4011  0007A4  ECB6  F00A         	movff	0+?___aomod,??_dtoa+0+0
  4012  0007A8  C080  F0A5         	movff	1+?___aomod,??_dtoa+0+0+1
  4013  0007AC  C081  F0A6         	movff	2+?___aomod,??_dtoa+0+0+2
  4014  0007B0  C082  F0A7         	movff	3+?___aomod,??_dtoa+0+0+3
  4015  0007B4  C083  F0A8         	movff	4+?___aomod,??_dtoa+0+0+4
  4016  0007B8  C084  F0A9         	movff	5+?___aomod,??_dtoa+0+0+5
  4017  0007BC  C085  F0AA         	movff	6+?___aomod,??_dtoa+0+0+6
  4018  0007C0  C086  F0AB         	movff	7+?___aomod,??_dtoa+0+0+7
  4019  0007C4  C087  F0AC         	
  4020                           	movff	??_dtoa+0+0,(abs@a)
  4021  0007C8  C0A5  F092         	movff	??_dtoa+0+2,(abs@a+1)
  4022  0007CC  C0A7  F093         	call	_abs	;wreg free
  4023  0007D0  ECE6  F012         	movlb	0	; () banked
  4024  0007D4  0100               	movf	(0+?_abs)&0ffh,w
  4025  0007D6  5192               	addlw	low(030h)
  4026  0007D8  0F30               	movwf	indf2,c
  4027  0007DA  6EDF               
  4028                           	line	302
  4029                           	
  4030                           l2215:; BSR set to: 0
  4031  0007DC                     
  4032                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 302:       
                                   --p;
  4033                           	decf	((dtoa@p))&0ffh
  4034  0007DC  07AF               	btfss	status,0
  4035  0007DE  A0D8               	decf	((dtoa@p+1))&0ffh
  4036  0007E0  07B0               	line	303
  4037                           	
  4038                           l2217:; BSR set to: 0
  4039  0007E2                     
  4040                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 303:       
                                   --w;
  4041                           	decf	((dtoa@w))&0ffh
  4042  0007E2  07B1               	btfss	status,0
  4043  0007E4  A0D8               	decf	((dtoa@w+1))&0ffh
  4044  0007E6  07B2               	line	304
  4045                           	
  4046                           l2219:; BSR set to: 0
  4047  0007E8                     
  4048                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 304:       
                                   n = n / 10;
  4049                           	movff	(dtoa@n),(___aodiv@dividend)
  4050  0007E8  C0B5  F080         	movff	(dtoa@n+1),(___aodiv@dividend+1)
  4051  0007EC  C0B6  F081         	movff	(dtoa@n+2),(___aodiv@dividend+2)
  4052  0007F0  C0B7  F082         	movff	(dtoa@n+3),(___aodiv@dividend+3)
  4053  0007F4  C0B8  F083         	movff	(dtoa@n+4),(___aodiv@dividend+4)
  4054  0007F8  C0B9  F084         	movff	(dtoa@n+5),(___aodiv@dividend+5)
  4055  0007FC  C0BA  F085         	movff	(dtoa@n+6),(___aodiv@dividend+6)
  4056  000800  C0BB  F086         	movff	(dtoa@n+7),(___aodiv@dividend+7)
  4057  000804  C0BC  F087         	movlw	byte0(0Ah)
  4058  000808  0E0A               	movwf	((___aodiv@divisor))&0ffh
  4059  00080A  6F88               	movlw	byte1(0Ah)
  4060  00080C  0E00               	movwf	((___aodiv@divisor+1))&0ffh
  4061  00080E  6F89               	movlw	byte2(0Ah)
  4062  000810  0E00               	movwf	((___aodiv@divisor+2))&0ffh
  4063  000812  6F8A               	movlw	byte3(0Ah)
  4064  000814  0E00               	movwf	((___aodiv@divisor+3))&0ffh
  4065  000816  6F8B               	movlw	byte4(0Ah)
  4066  000818  0E00               	movwf	((___aodiv@divisor+4))&0ffh
  4067  00081A  6F8C               	movlw	byte5(0Ah)
  4068  00081C  0E00               	movwf	((___aodiv@divisor+5))&0ffh
  4069  00081E  6F8D               	movlw	byte6(0Ah)
  4070  000820  0E00               	movwf	((___aodiv@divisor+6))&0ffh
  4071  000822  6F8E               	movlw	byte7(0Ah)
  4072  000824  0E00               	movwf	((___aodiv@divisor+7))&0ffh
  4073  000826  6F8F               	call	___aodiv	;wreg free
  4074  000828  EC05  F009         	movff	0+?___aodiv,(dtoa@n)
  4075  00082C  C080  F0B5         	movff	1+?___aodiv,(dtoa@n+1)
  4076  000830  C081  F0B6         	movff	2+?___aodiv,(dtoa@n+2)
  4077  000834  C082  F0B7         	movff	3+?___aodiv,(dtoa@n+3)
  4078  000838  C083  F0B8         	movff	4+?___aodiv,(dtoa@n+4)
  4079  00083C  C084  F0B9         	movff	5+?___aodiv,(dtoa@n+5)
  4080  000840  C085  F0BA         	movff	6+?___aodiv,(dtoa@n+6)
  4081  000844  C086  F0BB         	movff	7+?___aodiv,(dtoa@n+7)
  4082  000848  C087  F0BC         	
  4083                           	goto	l2221
  4084  00084C  EF28  F004         	line	305
  4085                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 305:     }

  4086                           	
  4087                           l222:
  4088  000850                     	line	299
  4089                           	
  4090                           l2221:
  4091  000850                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4092                           	movlb	0	; () banked
  4093  000850  0100               	btfsc	((dtoa@i+1))&0ffh,7
  4094  000852  BFBE               	goto	u1831
  4095  000854  EF34  F004         	movf	((dtoa@i+1))&0ffh,w
  4096  000858  51BE               	bnz	u1830
  4097  00085A  E108               	decf	((dtoa@i))&0ffh,w
  4098  00085C  05BD               	btfss	status,0
  4099  00085E  A0D8               	goto	u1831
  4100  000860  EF34  F004         	goto	u1830
  4101  000864  EF36  F004         
  4102                           u1831:
  4103  000868                     	goto	l2231
  4104  000868  EF6C  F004         u1830:
  4105  00086C                     	
  4106                           l2223:; BSR set to: 0
  4107  00086C                     
  4108                           	movf	((dtoa@n))&0ffh,w
  4109  00086C  51B5               iorwf	((dtoa@n+1))&0ffh,w
  4110  00086E  11B6               iorwf	((dtoa@n+2))&0ffh,w
  4111  000870  11B7               iorwf	((dtoa@n+3))&0ffh,w
  4112  000872  11B8               iorwf	((dtoa@n+4))&0ffh,w
  4113  000874  11B9               iorwf	((dtoa@n+5))&0ffh,w
  4114  000876  11BA               iorwf	((dtoa@n+6))&0ffh,w
  4115  000878  11BB               iorwf	((dtoa@n+7))&0ffh,w
  4116  00087A  11BC               	btfss	status,2
  4117  00087C  A4D8               	goto	u1841
  4118  00087E  EF43  F004         	goto	u1840
  4119  000882  EF45  F004         
  4120                           u1841:
  4121  000886                     	goto	l2211
  4122  000886  EFA9  F003         u1840:
  4123  00088A                     	
  4124                           l2225:; BSR set to: 0
  4125  00088A                     
  4126                           	btfsc	((dtoa@p+1))&0ffh,7
  4127  00088A  BFB0               	goto	u1850
  4128  00088C  EF52  F004         	movf	((dtoa@p+1))&0ffh,w
  4129  000890  51B0               	bnz	u1851
  4130  000892  E106               	decf	((dtoa@p))&0ffh,w
  4131  000894  05AF               	btfsc	status,0
  4132  000896  B0D8               	goto	u1851
  4133  000898  EF50  F004         	goto	u1850
  4134  00089C  EF52  F004         
  4135                           u1851:
  4136  0008A0                     	goto	l2211
  4137  0008A0  EFA9  F003         u1850:
  4138  0008A4                     	
  4139                           l2227:; BSR set to: 0
  4140  0008A4                     
  4141                           	btfsc	((dtoa@w+1))&0ffh,7
  4142  0008A4  BFB2               	goto	u1861
  4143  0008A6  EF5D  F004         	movf	((dtoa@w+1))&0ffh,w
  4144  0008AA  51B2               	bnz	u1860
  4145  0008AC  E108               	decf	((dtoa@w))&0ffh,w
  4146  0008AE  05B1               	btfss	status,0
  4147  0008B0  A0D8               	goto	u1861
  4148  0008B2  EF5D  F004         	goto	u1860
  4149  0008B6  EF5F  F004         
  4150                           u1861:
  4151  0008BA                     	goto	l2231
  4152  0008BA  EF6C  F004         u1860:
  4153  0008BE                     	
  4154                           l2229:; BSR set to: 0
  4155  0008BE                     
  4156                           	
  4157                           	btfsc	((_flags))&0ffh,(1)&7
  4158  0008BE  B3F5               	goto	u1871
  4159  0008C0  EF64  F004         	goto	u1870
  4160  0008C4  EF66  F004         u1871:
  4161  0008C8                     	goto	l2211
  4162  0008C8  EFA9  F003         u1870:
  4163  0008CC                     	goto	l2231
  4164  0008CC  EF6C  F004         	
  4165                           l227:; BSR set to: 0
  4166  0008D0                     
  4167                           	goto	l2231
  4168  0008D0  EF6C  F004         	
  4169                           l225:; BSR set to: 0
  4170  0008D4                     
  4171                           	goto	l2231
  4172  0008D4  EF6C  F004         	
  4173                           l228:; BSR set to: 0
  4174  0008D8                     
  4175                           	line	308
  4176                           	
  4177                           l2231:; BSR set to: 0
  4178  0008D8                     
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 308:     if
                                  (s || (flags & (1 << 2))) {
  4180                           	movf	((dtoa@s))&0ffh,w
  4181  0008D8  51B3               iorwf	((dtoa@s+1))&0ffh,w
  4182  0008DA  11B4               	btfss	status,2
  4183  0008DC  A4D8               	goto	u1881
  4184  0008DE  EF73  F004         	goto	u1880
  4185  0008E2  EF75  F004         
  4186                           u1881:
  4187  0008E6                     	goto	l2235
  4188  0008E6  EF7E  F004         u1880:
  4189  0008EA                     	
  4190                           l2233:; BSR set to: 0
  4191  0008EA                     
  4192                           	
  4193                           	btfss	((_flags))&0ffh,(2)&7
  4194  0008EA  A5F5               	goto	u1891
  4195  0008EC  EF7A  F004         	goto	u1890
  4196  0008F0  EF7C  F004         u1891:
  4197  0008F4                     	goto	l2245
  4198  0008F4  EFA0  F004         u1890:
  4199  0008F8                     	goto	l2235
  4200  0008F8  EF7E  F004         	
  4201                           l231:; BSR set to: 0
  4202  0008FC                     
  4203                           	line	309
  4204                           	
  4205                           l2235:; BSR set to: 0
  4206  0008FC                     
  4207                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 309:       
                                   --i;
  4208                           	decf	((dtoa@i))&0ffh
  4209  0008FC  07BD               	btfss	status,0
  4210  0008FE  A0D8               	decf	((dtoa@i+1))&0ffh
  4211  000900  07BE               	line	310
  4212                           	
  4213                           l2237:; BSR set to: 0
  4214  000902                     
  4215                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 310:       
                                   dbuf[i] = s ? '-' : '+';
  4216                           	movf	((dtoa@s))&0ffh,w
  4217  000902  51B3               iorwf	((dtoa@s+1))&0ffh,w
  4218  000904  11B4               	btfss	status,2
  4219  000906  A4D8               	goto	u1901
  4220  000908  EF88  F004         	goto	u1900
  4221  00090C  EF8A  F004         
  4222                           u1901:
  4223  000910                     	goto	l2241
  4224  000910  EF90  F004         u1900:
  4225  000914                     	
  4226                           l2239:; BSR set to: 0
  4227  000914                     
  4228                           	movlw	high(02Bh)
  4229  000914  0E00               	movwf	((_dtoa$344+1))&0ffh
  4230  000916  6FAE               	movlw	low(02Bh)
  4231  000918  0E2B               	movwf	((_dtoa$344))&0ffh
  4232  00091A  6FAD               	goto	l2243
  4233  00091C  EF96  F004         	
  4234                           l233:; BSR set to: 0
  4235  000920                     
  4236                           	
  4237                           l2241:; BSR set to: 0
  4238  000920                     
  4239                           	movlw	high(02Dh)
  4240  000920  0E00               	movwf	((_dtoa$344+1))&0ffh
  4241  000922  6FAE               	movlw	low(02Dh)
  4242  000924  0E2D               	movwf	((_dtoa$344))&0ffh
  4243  000926  6FAD               	goto	l2243
  4244  000928  EF96  F004         	
  4245                           l235:; BSR set to: 0
  4246  00092C                     
  4247                           	
  4248                           l2243:; BSR set to: 0
  4249  00092C                     
  4250                           	movlw	low(_dbuf)
  4251  00092C  0E00               	addwf	((dtoa@i))&0ffh,w
  4252  00092E  25BD               	movwf	c:fsr2l
  4253  000930  6ED9               	movlw	high(_dbuf)
  4254  000932  0E01               	addwfc	((dtoa@i+1))&0ffh,w
  4255  000934  21BE               	movwf	1+c:fsr2l
  4256  000936  6EDA               	movff	(_dtoa$344),indf2
  4257  000938  C0AD  FFDF         
  4258                           	goto	l2245
  4259  00093C  EFA0  F004         	line	311
  4260                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 311:     }

  4261                           	
  4262                           l229:; BSR set to: 0
  4263  000940                     
  4264                           	line	314
  4265                           	
  4266                           l2245:; BSR set to: 0
  4267  000940                     
  4268                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 314:     re
                                 turn pad(fp, &dbuf[i], w);
  4269                           		movff	(dtoa@fp),(pad@fp)
  4270  000940  C09B  F090         	movff	(dtoa@fp+1),(pad@fp+1)
  4271  000944  C09C  F091         
  4272                           	movlw	low(_dbuf)
  4273  000948  0E00               	addwf	((dtoa@i))&0ffh,w
  4274  00094A  25BD               	movwf	((pad@buf))&0ffh
  4275  00094C  6F92               	movlw	high(_dbuf)
  4276  00094E  0E01               	addwfc	((dtoa@i+1))&0ffh,w
  4277  000950  21BE               	movwf	1+((pad@buf))&0ffh
  4278  000952  6F93               	movff	(dtoa@w),(pad@p)
  4279  000954  C0B1  F094         	movff	(dtoa@w+1),(pad@p+1)
  4280  000958  C0B2  F095         	call	_pad	;wreg free
  4281  00095C  EC85  F00F         	movff	0+?_pad,(?_dtoa)
  4282  000960  C090  F09B         	movff	1+?_pad,(?_dtoa+1)
  4283  000964  C091  F09C         	goto	l236
  4284  000968  EFB6  F004         	
  4285                           l2247:
  4286  00096C                     	line	315
  4287                           	
  4288                           l236:
  4289  00096C                     	return	;funcret
  4290  00096C  0012               	opt stack 0
  4291                           GLOBAL	__end_of_dtoa
  4292                           	__end_of_dtoa:
  4293  00096E                     	signat	_dtoa,8314
  4294                           	global	_pad
  4295                           
  4296 ;; *************** function _pad *****************
  4297 ;; Defined at:
  4298 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  4301 ;;		 -> sprintf@f(6), 
  4302 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  4303 ;;		 -> dbuf(32), 
  4304 ;;  p               2   20[BANK0 ] int 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  w               2   25[BANK0 ] int 
  4307 ;;  i               2   23[BANK0 ] int 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  2   16[BANK0 ] int 
  4310 ;; Registers used:
  4311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4317 ;;      Params:         0       6       0       0       0       0       0
  4318 ;;      Locals:         0       4       0       0       0       0       0
  4319 ;;      Temps:          0       1       0       0       0       0       0
  4320 ;;      Totals:         0      11       0       0       0       0       0
  4321 ;;Total ram usage:       11 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:   15
  4324 ;; This function calls:
  4325 ;;		_fputc
  4326 ;;		_fputs
  4327 ;;		_strlen
  4328 ;; This function is called by:
  4329 ;;		_dtoa
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           psect	text9,class=CODE,space=0,reloc=2,group=0
  4333                           	line	72
  4334                           global __ptext9
  4335                           __ptext9:
  4336  001F0A                     psect	text9
  4337                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4338                           	line	72
  4339                           	global	__size_of_pad
  4340                           	__size_of_pad	equ	__end_of_pad-_pad
  4341  0000                     	
  4342                           _pad:
  4343  001F0A                     ;incstack = 0
  4344                           	opt	stack 8
  4345                           	line	77
  4346                           	
  4347                           l1975:
  4348  001F0A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4349                           	movlb	0	; () banked
  4350  001F0A  0100               	
  4351                           	btfss	((_flags))&0ffh,(0)&7
  4352  001F0C  A1F5               	goto	u1401
  4353  001F0E  EF8B  F00F         	goto	u1400
  4354  001F12  EF8D  F00F         u1401:
  4355  001F16                     	goto	l1979
  4356  001F16  EF99  F00F         u1400:
  4357  001F1A                     	line	78
  4358                           	
  4359                           l1977:; BSR set to: 0
  4360  001F1A                     
  4361                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
  4362                           		movff	(pad@buf),(fputs@s)
  4363  001F1A  C092  F089         	movff	(pad@buf+1),(fputs@s+1)
  4364  001F1E  C093  F08A         
  4365                           		movff	(pad@fp),(fputs@fp)
  4366  001F22  C090  F08B         	movff	(pad@fp+1),(fputs@fp+1)
  4367  001F26  C091  F08C         
  4368                           	call	_fputs	;wreg free
  4369  001F2A  EC98  F012         	goto	l1979
  4370  001F2E  EF99  F00F         	line	79
  4371                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  4372                           	
  4373                           l201:
  4374  001F32                     	line	82
  4375                           	
  4376                           l1979:
  4377  001F32                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
  4378                           	movlb	0	; () banked
  4379  001F32  0100               	btfsc	((pad@p+1))&0ffh,7
  4380  001F34  BF95               	goto	u1411
  4381  001F36  EF9F  F00F         	goto	u1410
  4382  001F3A  EFA1  F00F         
  4383                           u1411:
  4384  001F3E                     	goto	l1983
  4385  001F3E  EFA7  F00F         u1410:
  4386  001F42                     	
  4387                           l1981:; BSR set to: 0
  4388  001F42                     
  4389                           	movff	(pad@p),(pad@w)
  4390  001F42  C094  F099         	movff	(pad@p+1),(pad@w+1)
  4391  001F46  C095  F09A         	goto	l205
  4392  001F4A  EFAB  F00F         	
  4393                           l203:; BSR set to: 0
  4394  001F4E                     
  4395                           	
  4396                           l1983:; BSR set to: 0
  4397  001F4E                     
  4398                           	movlw	high(0)
  4399  001F4E  0E00               	movwf	((pad@w+1))&0ffh
  4400  001F50  6F9A               	movlw	low(0)
  4401  001F52  0E00               	movwf	((pad@w))&0ffh
  4402  001F54  6F99               	
  4403                           l205:; BSR set to: 0
  4404  001F56                     
  4405                           	line	83
  4406                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
  4407                           	movlw	high(0)
  4408  001F56  0E00               	movwf	((pad@i+1))&0ffh
  4409  001F58  6F98               	movlw	low(0)
  4410  001F5A  0E00               	movwf	((pad@i))&0ffh
  4411  001F5C  6F97               	line	84
  4412                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  4413                           	goto	l1989
  4414  001F5E  EFC0  F00F         	
  4415                           l207:; BSR set to: 0
  4416  001F62                     
  4417                           	line	85
  4418                           	
  4419                           l1985:; BSR set to: 0
  4420  001F62                     
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
  4422                           	movlw	high(020h)
  4423  001F62  0E00               	movwf	((fputc@c+1))&0ffh
  4424  001F64  6F81               	movlw	low(020h)
  4425  001F66  0E20               	movwf	((fputc@c))&0ffh
  4426  001F68  6F80               		movff	(pad@fp),(fputc@fp)
  4427  001F6A  C090  F082         	movff	(pad@fp+1),(fputc@fp+1)
  4428  001F6E  C091  F083         
  4429                           	call	_fputc	;wreg free
  4430  001F72  EC35  F00E         	line	86
  4431                           	
  4432                           l1987:
  4433  001F76                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
  4434                           	movlb	0	; () banked
  4435  001F76  0100               	infsnz	((pad@i))&0ffh
  4436  001F78  4B97               	incf	((pad@i+1))&0ffh
  4437  001F7A  2B98               	goto	l1989
  4438  001F7C  EFC0  F00F         	line	87
  4439                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  4440                           	
  4441                           l206:; BSR set to: 0
  4442  001F80                     
  4443                           	line	84
  4444                           	
  4445                           l1989:; BSR set to: 0
  4446  001F80                     
  4447                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  4448                           		movf	((pad@w))&0ffh,w
  4449  001F80  5199               	subwf	((pad@i))&0ffh,w
  4450  001F82  5D97               	movf	((pad@i+1))&0ffh,w
  4451  001F84  5198               	xorlw	80h
  4452  001F86  0A80               	movwf	(??_pad+0+0)&0ffh
  4453  001F88  6F96               	movf	((pad@w+1))&0ffh,w
  4454  001F8A  519A               	xorlw	80h
  4455  001F8C  0A80               	subwfb	(??_pad+0+0)&0ffh,w
  4456  001F8E  5996               	btfss	status,0
  4457  001F90  A0D8               	goto	u1421
  4458  001F92  EFCD  F00F         	goto	u1420
  4459  001F96  EFCF  F00F         
  4460                           u1421:
  4461  001F9A                     	goto	l1985
  4462  001F9A  EFB1  F00F         u1420:
  4463  001F9E                     	
  4464                           l208:; BSR set to: 0
  4465  001F9E                     
  4466                           	line	90
  4467                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
  4468                           	
  4469                           	btfsc	((_flags))&0ffh,(0)&7
  4470  001F9E  B1F5               	goto	u1431
  4471  001FA0  EFD4  F00F         	goto	u1430
  4472  001FA4  EFD6  F00F         u1431:
  4473  001FA8                     	goto	l1993
  4474  001FA8  EFE2  F00F         u1430:
  4475  001FAC                     	line	91
  4476                           	
  4477                           l1991:; BSR set to: 0
  4478  001FAC                     
  4479                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
  4480                           		movff	(pad@buf),(fputs@s)
  4481  001FAC  C092  F089         	movff	(pad@buf+1),(fputs@s+1)
  4482  001FB0  C093  F08A         
  4483                           		movff	(pad@fp),(fputs@fp)
  4484  001FB4  C090  F08B         	movff	(pad@fp+1),(fputs@fp+1)
  4485  001FB8  C091  F08C         
  4486                           	call	_fputs	;wreg free
  4487  001FBC  EC98  F012         	goto	l1993
  4488  001FC0  EFE2  F00F         	line	92
  4489                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  4490                           	
  4491                           l209:
  4492  001FC4                     	line	94
  4493                           	
  4494                           l1993:
  4495  001FC4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
  4496                           		movff	(pad@buf),(strlen@s)
  4497  001FC4  C092  F080         	movff	(pad@buf+1),(strlen@s+1)
  4498  001FC8  C093  F081         
  4499                           	call	_strlen	;wreg free
  4500  001FCC  ECEF  F011         	movlb	0	; () banked
  4501  001FD0  0100               	movf	((pad@w))&0ffh,w
  4502  001FD2  5199               	addwf	(0+?_strlen)&0ffh,w
  4503  001FD4  2580               	movwf	((?_pad))&0ffh
  4504  001FD6  6F90               	movf	((pad@w+1))&0ffh,w
  4505  001FD8  519A               	addwfc	(1+?_strlen)&0ffh,w
  4506  001FDA  2181               	movwf	1+((?_pad))&0ffh
  4507  001FDC  6F91               	goto	l210
  4508  001FDE  EFF1  F00F         	
  4509                           l1995:; BSR set to: 0
  4510  001FE2                     
  4511                           	line	95
  4512                           	
  4513                           l210:; BSR set to: 0
  4514  001FE2                     
  4515                           	return	;funcret
  4516  001FE2  0012               	opt stack 0
  4517                           GLOBAL	__end_of_pad
  4518                           	__end_of_pad:
  4519  001FE4                     	signat	_pad,12410
  4520                           	global	_strlen
  4521                           
  4522 ;; *************** function _strlen *****************
  4523 ;; Defined at:
  4524 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4527 ;;		 -> dbuf(32), 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  a               2    4[BANK0 ] PTR const unsigned char 
  4530 ;;		 -> dbuf(32), 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  2    0[BANK0 ] unsigned int 
  4533 ;; Registers used:
  4534 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4540 ;;      Params:         0       2       0       0       0       0       0
  4541 ;;      Locals:         0       2       0       0       0       0       0
  4542 ;;      Temps:          0       2       0       0       0       0       0
  4543 ;;      Totals:         0       6       0       0       0       0       0
  4544 ;;Total ram usage:        6 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:   12
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_pad
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           psect	text10,class=CODE,space=0,reloc=2,group=2
  4554                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4555                           	line	12
  4556                           global __ptext10
  4557                           __ptext10:
  4558  0023DE                     psect	text10
  4559                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4560                           	line	12
  4561                           	global	__size_of_strlen
  4562                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  4563  0000                     	
  4564                           _strlen:; BSR set to: 0
  4565  0023DE                     
  4566                           ;incstack = 0
  4567                           	opt	stack 10
  4568                           	line	14
  4569                           	
  4570                           l1947:
  4571  0023DE                     		movff	(strlen@s),(strlen@a)
  4572  0023DE  C080  F084         	movff	(strlen@s+1),(strlen@a+1)
  4573  0023E2  C081  F085         
  4574                           	line	16
  4575                           	goto	l1951
  4576  0023E6  EFFA  F011         	
  4577                           l965:
  4578  0023EA                     	line	17
  4579                           	
  4580                           l1949:
  4581  0023EA                     	movlb	0	; () banked
  4582  0023EA  0100               	infsnz	((strlen@s))&0ffh
  4583  0023EC  4B80               	incf	((strlen@s+1))&0ffh
  4584  0023EE  2B81               	goto	l1951
  4585  0023F0  EFFA  F011         	line	18
  4586                           	
  4587                           l964:; BSR set to: 0
  4588  0023F4                     
  4589                           	line	16
  4590                           	
  4591                           l1951:
  4592  0023F4                     	movff	(strlen@s),fsr2l
  4593  0023F4  C080  FFD9         	movff	(strlen@s+1),fsr2h
  4594  0023F8  C081  FFDA         	movf	indf2,w
  4595  0023FC  50DF               	btfss	status,2
  4596  0023FE  A4D8               	goto	u1371
  4597  002400  EF04  F012         	goto	u1370
  4598  002404  EF06  F012         u1371:
  4599  002408                     	goto	l1949
  4600  002408  EFF5  F011         u1370:
  4601  00240C                     	goto	l1953
  4602  00240C  EF08  F012         	
  4603                           l966:
  4604  002410                     	line	25
  4605                           	
  4606                           l1953:
  4607  002410                     	movff	(strlen@a),??_strlen+0+0
  4608  002410  C084  F082         	movff	(strlen@a+1),??_strlen+0+0+1
  4609  002414  C085  F083         	movlb	0	; () banked
  4610  002418  0100               	comf	(??_strlen+0+0)&0ffh
  4611  00241A  1F82               	comf	(??_strlen+0+1)&0ffh
  4612  00241C  1F83               	infsnz	(??_strlen+0+0)&0ffh
  4613  00241E  4B82               	incf	(??_strlen+0+1)&0ffh
  4614  002420  2B83               	movf	((strlen@s))&0ffh,w
  4615  002422  5180               	addwf	(??_strlen+0+0)&0ffh,w
  4616  002424  2582               	movwf	((?_strlen))&0ffh
  4617  002426  6F80               	movf	((strlen@s+1))&0ffh,w
  4618  002428  5181               	addwfc	(??_strlen+0+1)&0ffh,w
  4619  00242A  2183               	movwf	1+((?_strlen))&0ffh
  4620  00242C  6F81               	goto	l967
  4621  00242E  EF19  F012         	
  4622                           l1955:; BSR set to: 0
  4623  002432                     
  4624                           	line	26
  4625                           	
  4626                           l967:; BSR set to: 0
  4627  002432                     
  4628                           	return	;funcret
  4629  002432  0012               	opt stack 0
  4630                           GLOBAL	__end_of_strlen
  4631                           	__end_of_strlen:
  4632  002434                     	signat	_strlen,4218
  4633                           	global	_fputs
  4634                           
  4635 ;; *************** function _fputs *****************
  4636 ;; Defined at:
  4637 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4640 ;;		 -> dbuf(32), 
  4641 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4642 ;;		 -> sprintf@f(6), 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  i               2   14[BANK0 ] int 
  4645 ;;  c               1   13[BANK0 ] unsigned char 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  2    9[BANK0 ] int 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4655 ;;      Params:         0       4       0       0       0       0       0
  4656 ;;      Locals:         0       3       0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0
  4658 ;;      Totals:         0       7       0       0       0       0       0
  4659 ;;Total ram usage:        7 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:   14
  4662 ;; This function calls:
  4663 ;;		_fputc
  4664 ;; This function is called by:
  4665 ;;		_pad
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           psect	text11,class=CODE,space=0,reloc=2,group=2
  4669                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  4670                           	line	8
  4671                           global __ptext11
  4672                           __ptext11:
  4673  002530                     psect	text11
  4674                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  4675                           	line	8
  4676                           	global	__size_of_fputs
  4677                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  4678  0000                     	
  4679                           _fputs:; BSR set to: 0
  4680  002530                     
  4681                           ;incstack = 0
  4682                           	opt	stack 8
  4683                           	line	13
  4684                           	
  4685                           l1939:
  4686  002530                     	movlw	high(0)
  4687  002530  0E00               	movlb	0	; () banked
  4688  002532  0100               	movwf	((fputs@i+1))&0ffh
  4689  002534  6F8F               	movlw	low(0)
  4690  002536  0E00               	movwf	((fputs@i))&0ffh
  4691  002538  6F8E               	line	14
  4692                           	goto	l1945
  4693  00253A  EFAD  F012         	
  4694                           l949:; BSR set to: 0
  4695  00253E                     
  4696                           	line	15
  4697                           	
  4698                           l1941:; BSR set to: 0
  4699  00253E                     
  4700                           	movff	(fputs@c),(fputc@c)
  4701  00253E  C08D  F080         	clrf	((fputc@c+1))&0ffh
  4702  002542  6B81               		movff	(fputs@fp),(fputc@fp)
  4703  002544  C08B  F082         	movff	(fputs@fp+1),(fputc@fp+1)
  4704  002548  C08C  F083         
  4705                           	call	_fputc	;wreg free
  4706  00254C  EC35  F00E         	line	16
  4707                           	
  4708                           l1943:
  4709  002550                     	movlb	0	; () banked
  4710  002550  0100               	infsnz	((fputs@i))&0ffh
  4711  002552  4B8E               	incf	((fputs@i+1))&0ffh
  4712  002554  2B8F               	goto	l1945
  4713  002556  EFAD  F012         	line	17
  4714                           	
  4715                           l948:; BSR set to: 0
  4716  00255A                     
  4717                           	line	14
  4718                           	
  4719                           l1945:; BSR set to: 0
  4720  00255A                     
  4721                           	movf	((fputs@i))&0ffh,w
  4722  00255A  518E               	addwf	((fputs@s))&0ffh,w
  4723  00255C  2589               	movwf	c:fsr2l
  4724  00255E  6ED9               	movf	((fputs@i+1))&0ffh,w
  4725  002560  518F               	addwfc	((fputs@s+1))&0ffh,w
  4726  002562  218A               	movwf	1+c:fsr2l
  4727  002564  6EDA               	movf	indf2,w
  4728  002566  50DF               	movwf	((fputs@c))&0ffh
  4729  002568  6F8D               	movf	((fputs@c))&0ffh,w
  4730  00256A  518D               	btfss	status,2
  4731  00256C  A4D8               	goto	u1361
  4732  00256E  EFBB  F012         	goto	u1360
  4733  002572  EFBD  F012         u1361:
  4734  002576                     	goto	l1941
  4735  002576  EF9F  F012         u1360:
  4736  00257A                     	goto	l951
  4737  00257A  EFBF  F012         	
  4738                           l950:; BSR set to: 0
  4739  00257E                     
  4740                           	line	19
  4741                           ;	Return value of _fputs is never used
  4742                           	
  4743                           l951:; BSR set to: 0
  4744  00257E                     
  4745                           	return	;funcret
  4746  00257E  0012               	opt stack 0
  4747                           GLOBAL	__end_of_fputs
  4748                           	__end_of_fputs:
  4749  002580                     	signat	_fputs,8314
  4750                           	global	_fputc
  4751                           
  4752 ;; *************** function _fputc *****************
  4753 ;; Defined at:
  4754 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  c               2    0[BANK0 ] int 
  4757 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4758 ;;		 -> sprintf@f(6), 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  2    0[BANK0 ] int 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4770 ;;      Params:         0       4       0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0
  4772 ;;      Temps:          0       5       0       0       0       0       0
  4773 ;;      Totals:         0       9       0       0       0       0       0
  4774 ;;Total ram usage:        9 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:   13
  4777 ;; This function calls:
  4778 ;;		_putch
  4779 ;; This function is called by:
  4780 ;;		_pad
  4781 ;;		_vfpfcnvrt
  4782 ;;		_fputs
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           psect	text12,class=CODE,space=0,reloc=2,group=2
  4786                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  4787                           	line	8
  4788                           global __ptext12
  4789                           __ptext12:
  4790  001C6A                     psect	text12
  4791                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  4792                           	line	8
  4793                           	global	__size_of_fputc
  4794                           	__size_of_fputc	equ	__end_of_fputc-_fputc
  4795  0000                     	
  4796                           _fputc:; BSR set to: 0
  4797  001C6A                     
  4798                           ;incstack = 0
  4799                           	opt	stack 11
  4800                           	line	12
  4801                           	
  4802                           l1911:
  4803  001C6A                     	movlb	0	; () banked
  4804  001C6A  0100               	movf	((fputc@fp))&0ffh,w
  4805  001C6C  5182               iorwf	((fputc@fp+1))&0ffh,w
  4806  001C6E  1183               	btfsc	status,2
  4807  001C70  B4D8               	goto	u1281
  4808  001C72  EF3D  F00E         	goto	u1280
  4809  001C76  EF3F  F00E         
  4810                           u1281:
  4811  001C7A                     	goto	l1915
  4812  001C7A  EF4A  F00E         u1280:
  4813  001C7E                     	
  4814                           l1913:; BSR set to: 0
  4815  001C7E                     
  4816                           	movf	((fputc@fp))&0ffh,w
  4817  001C7E  5182               iorwf	((fputc@fp+1))&0ffh,w
  4818  001C80  1183               	btfss	status,2
  4819  001C82  A4D8               	goto	u1291
  4820  001C84  EF46  F00E         	goto	u1290
  4821  001C88  EF48  F00E         
  4822                           u1291:
  4823  001C8C                     	goto	l1917
  4824  001C8C  EF4F  F00E         u1290:
  4825  001C90                     	goto	l1915
  4826  001C90  EF4A  F00E         	
  4827                           l938:; BSR set to: 0
  4828  001C94                     
  4829                           	line	13
  4830                           	
  4831                           l1915:; BSR set to: 0
  4832  001C94                     
  4833                           	movf	((fputc@c))&0ffh,w
  4834  001C94  5180               	
  4835                           	call	_putch
  4836  001C96  EC3E  F014         	line	14
  4837                           	goto	l943
  4838  001C9A  EFA5  F00E         	
  4839                           l936:
  4840  001C9E                     	line	15
  4841                           	
  4842                           l1917:
  4843  001C9E                     	movlb	0	; () banked
  4844  001C9E  0100               	lfsr	2,04h
  4845  001CA0  EE20 F004          	movf	((fputc@fp))&0ffh,w
  4846  001CA4  5182               	addwf	fsr2l
  4847  001CA6  26D9               	movf	((fputc@fp+1))&0ffh,w
  4848  001CA8  5183               	addwfc	fsr2h
  4849  001CAA  22DA               	movf	postinc2,w
  4850  001CAC  50DE               iorwf	postinc2,w
  4851  001CAE  10DE               	btfsc	status,2
  4852  001CB0  B4D8               	goto	u1301
  4853  001CB2  EF5D  F00E         	goto	u1300
  4854  001CB6  EF5F  F00E         
  4855                           u1301:
  4856  001CBA                     	goto	l1921
  4857  001CBA  EF7C  F00E         u1300:
  4858  001CBE                     	
  4859                           l1919:; BSR set to: 0
  4860  001CBE                     
  4861                           	lfsr	2,04h
  4862  001CBE  EE20 F004          	movf	((fputc@fp))&0ffh,w
  4863  001CC2  5182               	addwf	fsr2l
  4864  001CC4  26D9               	movf	((fputc@fp+1))&0ffh,w
  4865  001CC6  5183               	addwfc	fsr2h
  4866  001CC8  22DA               	lfsr	1,02h
  4867  001CCA  EE10 F002          	movf	((fputc@fp))&0ffh,w
  4868  001CCE  5182               	addwf	fsr1l
  4869  001CD0  26E1               	movf	((fputc@fp+1))&0ffh,w
  4870  001CD2  5183               	addwfc	fsr1h
  4871  001CD4  22E2               		movf	postinc2,w
  4872  001CD6  50DE               	subwf	postinc1,w
  4873  001CD8  5CE6               	movf	postinc1,w
  4874  001CDA  50E6               	xorlw	80h
  4875  001CDC  0A80               	movwf	(??_fputc+4+0)&0ffh
  4876  001CDE  6F88               	movf	postinc2,w
  4877  001CE0  50DE               	xorlw	80h
  4878  001CE2  0A80               	subwfb	(??_fputc+4+0)&0ffh,w
  4879  001CE4  5988               	btfsc	status,0
  4880  001CE6  B0D8               	goto	u1311
  4881  001CE8  EF78  F00E         	goto	u1310
  4882  001CEC  EF7A  F00E         
  4883                           u1311:
  4884  001CF0                     	goto	l943
  4885  001CF0  EFA5  F00E         u1310:
  4886  001CF4                     	goto	l1921
  4887  001CF4  EF7C  F00E         	
  4888                           l942:; BSR set to: 0
  4889  001CF8                     
  4890                           	line	16
  4891                           	
  4892                           l1921:; BSR set to: 0
  4893  001CF8                     
  4894                           	lfsr	2,02h
  4895  001CF8  EE20 F002          	movf	((fputc@fp))&0ffh,w
  4896  001CFC  5182               	addwf	fsr2l
  4897  001CFE  26D9               	movf	((fputc@fp+1))&0ffh,w
  4898  001D00  5183               	addwfc	fsr2h
  4899  001D02  22DA               	movff	postinc2,??_fputc+0+0
  4900  001D04  CFDE F084          	movff	postdec2,??_fputc+0+0+1
  4901  001D08  CFDD F085          	movff	(fputc@fp),fsr2l
  4902  001D0C  C082  FFD9         	movff	(fputc@fp+1),fsr2h
  4903  001D10  C083  FFDA         	movff	postinc2,??_fputc+2+0
  4904  001D14  CFDE F086          	movff	postdec2,??_fputc+2+0+1
  4905  001D18  CFDD F087          	movf	(??_fputc+0+0)&0ffh,w
  4906  001D1C  5184               	addwf	(??_fputc+2+0)&0ffh,w
  4907  001D1E  2586               	movwf	c:fsr2l
  4908  001D20  6ED9               	movf	(??_fputc+0+1)&0ffh,w
  4909  001D22  5185               	addwfc	(??_fputc+2+1)&0ffh,w
  4910  001D24  2187               	movwf	1+c:fsr2l
  4911  001D26  6EDA               	movff	(fputc@c),indf2
  4912  001D28  C080  FFDF         
  4913                           	line	17
  4914                           	lfsr	2,02h
  4915  001D2C  EE20 F002          	movf	((fputc@fp))&0ffh,w
  4916  001D30  5182               	addwf	fsr2l
  4917  001D32  26D9               	movf	((fputc@fp+1))&0ffh,w
  4918  001D34  5183               	addwfc	fsr2h
  4919  001D36  22DA               	incf	postinc2
  4920  001D38  2ADE               	movlw	0
  4921  001D3A  0E00               	addwfc	postdec2
  4922  001D3C  22DD               	goto	l943
  4923  001D3E  EFA5  F00E         	line	18
  4924                           	
  4925                           l940:; BSR set to: 0
  4926  001D42                     
  4927                           	goto	l943
  4928  001D42  EFA5  F00E         	line	19
  4929                           	
  4930                           l939:; BSR set to: 0
  4931  001D46                     
  4932                           	goto	l943
  4933  001D46  EFA5  F00E         	line	20
  4934                           	
  4935                           l1923:; BSR set to: 0
  4936  001D4A                     
  4937                           	line	21
  4938                           ;	Return value of _fputc is never used
  4939                           	
  4940                           l943:
  4941  001D4A                     	return	;funcret
  4942  001D4A  0012               	opt stack 0
  4943                           GLOBAL	__end_of_fputc
  4944                           	__end_of_fputc:
  4945  001D4C                     	signat	_fputc,8314
  4946                           	global	_putch
  4947                           
  4948 ;; *************** function _putch *****************
  4949 ;; Defined at:
  4950 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  c               1    wreg     unsigned char 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  c               1    0[COMRAM] unsigned char 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4964 ;;      Params:         0       0       0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0
  4967 ;;      Totals:         0       0       0       0       0       0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:   12
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_fputc
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           psect	text13,class=CODE,space=0,reloc=2,group=2
  4978                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  4979                           	line	7
  4980                           global __ptext13
  4981                           __ptext13:
  4982  00287C                     psect	text13
  4983                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  4984                           	line	7
  4985                           	global	__size_of_putch
  4986                           	__size_of_putch	equ	__end_of_putch-_putch
  4987  0000                     	
  4988                           _putch:
  4989  00287C                     ;incstack = 0
  4990                           	opt	stack 11
  4991                           	line	9
  4992                           	
  4993                           l961:
  4994  00287C                     	return	;funcret
  4995  00287C  0012               	opt stack 0
  4996                           GLOBAL	__end_of_putch
  4997                           	__end_of_putch:
  4998  00287E                     	signat	_putch,4217
  4999                           	global	_abs
  5000                           
  5001 ;; *************** function _abs *****************
  5002 ;; Defined at:
  5003 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  a               2   18[BANK0 ] int 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  2   18[BANK0 ] int 
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5017 ;;      Params:         0       2       0       0       0       0       0
  5018 ;;      Locals:         0       0       0       0       0       0       0
  5019 ;;      Temps:          0       2       0       0       0       0       0
  5020 ;;      Totals:         0       4       0       0       0       0       0
  5021 ;;Total ram usage:        4 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:   12
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_dtoa
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           psect	text14,class=CODE,space=0,reloc=2,group=2
  5031                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5032                           	line	1
  5033                           global __ptext14
  5034                           __ptext14:
  5035  0025CC                     psect	text14
  5036                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5037                           	line	1
  5038                           	global	__size_of_abs
  5039                           	__size_of_abs	equ	__end_of_abs-_abs
  5040  0000                     	
  5041                           _abs:
  5042  0025CC                     ;incstack = 0
  5043                           	opt	stack 11
  5044                           	line	3
  5045                           	
  5046                           l1997:
  5047  0025CC                     	movlb	0	; () banked
  5048  0025CC  0100               	btfsc	((abs@a+1))&0ffh,7
  5049  0025CE  BF93               	goto	u1440
  5050  0025D0  EFF4  F012         	movf	((abs@a+1))&0ffh,w
  5051  0025D4  5193               	bnz	u1441
  5052  0025D6  E106               	decf	((abs@a))&0ffh,w
  5053  0025D8  0592               	btfsc	status,0
  5054  0025DA  B0D8               	goto	u1441
  5055  0025DC  EFF2  F012         	goto	u1440
  5056  0025E0  EFF4  F012         
  5057                           u1441:
  5058  0025E4                     	goto	l928
  5059  0025E4  EF02  F013         u1440:
  5060  0025E8                     	
  5061                           l1999:; BSR set to: 0
  5062  0025E8                     
  5063                           	movff	(abs@a),??_abs+0+0
  5064  0025E8  C092  F094         	movff	(abs@a+1),??_abs+0+0+1
  5065  0025EC  C093  F095         	comf	(??_abs+0+0)&0ffh
  5066  0025F0  1F94               	comf	(??_abs+0+1)&0ffh
  5067  0025F2  1F95               	infsnz	(??_abs+0+0)&0ffh
  5068  0025F4  4B94               	incf	(??_abs+0+1)&0ffh
  5069  0025F6  2B95               	movff	??_abs+0+0,(?_abs)
  5070  0025F8  C094  F092         	movff	??_abs+0+1,(?_abs+1)
  5071  0025FC  C095  F093         	goto	l931
  5072  002600  EF08  F013         	
  5073                           l928:; BSR set to: 0
  5074  002604                     
  5075                           	movff	(abs@a),(?_abs)
  5076  002604  C092  F092         	movff	(abs@a+1),(?_abs+1)
  5077  002608  C093  F093         	goto	l931
  5078  00260C  EF08  F013         	
  5079                           l930:; BSR set to: 0
  5080  002610                     
  5081                           	line	4
  5082                           	
  5083                           l931:; BSR set to: 0
  5084  002610                     
  5085                           	return	;funcret
  5086  002610  0012               	opt stack 0
  5087                           GLOBAL	__end_of_abs
  5088                           	__end_of_abs:
  5089  002612                     	signat	_abs,4218
  5090                           	global	___aomod
  5091                           
  5092 ;; *************** function ___aomod *****************
  5093 ;; Defined at:
  5094 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  dividend        8    0[BANK0 ] long long 
  5097 ;;  divisor         8    8[BANK0 ] long long 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  sign            1   17[BANK0 ] unsigned char 
  5100 ;;  counter         1   16[BANK0 ] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  8    0[BANK0 ] long long 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5110 ;;      Params:         0      16       0       0       0       0       0
  5111 ;;      Locals:         0       2       0       0       0       0       0
  5112 ;;      Temps:          0       0       0       0       0       0       0
  5113 ;;      Totals:         0      18       0       0       0       0       0
  5114 ;;Total ram usage:       18 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:   12
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_dtoa
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           psect	text15,class=CODE,space=0,reloc=2,group=1
  5124                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
  5125                           	line	9
  5126                           global __ptext15
  5127                           __ptext15:
  5128  00156C                     psect	text15
  5129                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
  5130                           	line	9
  5131                           	global	__size_of___aomod
  5132                           	__size_of___aomod	equ	__end_of___aomod-___aomod
  5133  0000                     	
  5134                           ___aomod:; BSR set to: 0
  5135  00156C                     
  5136                           ;incstack = 0
  5137                           	opt	stack 11
  5138                           	line	14
  5139                           	
  5140                           l2045:
  5141  00156C                     	movlw	low(0)
  5142  00156C  0E00               	movlb	0	; () banked
  5143  00156E  0100               	movwf	((___aomod@sign))&0ffh
  5144  001570  6F91               	line	15
  5145                           	
  5146                           l2047:; BSR set to: 0
  5147  001572                     
  5148                           	btfsc	((___aomod@dividend+7))&0ffh,7
  5149  001572  BF87               	goto	u1520
  5150  001574  EFC0  F00A         	goto	u1521
  5151  001578  EFBE  F00A         
  5152                           u1521:
  5153  00157C                     	goto	l2053
  5154  00157C  EFD4  F00A         u1520:
  5155  001580                     	line	16
  5156                           	
  5157                           l2049:; BSR set to: 0
  5158  001580                     
  5159                           	comf	((___aomod@dividend+7))&0ffh
  5160  001580  1F87               	comf	((___aomod@dividend+6))&0ffh
  5161  001582  1F86               	comf	((___aomod@dividend+5))&0ffh
  5162  001584  1F85               	comf	((___aomod@dividend+4))&0ffh
  5163  001586  1F84               	comf	((___aomod@dividend+3))&0ffh
  5164  001588  1F83               	comf	((___aomod@dividend+2))&0ffh
  5165  00158A  1F82               	comf	((___aomod@dividend+1))&0ffh
  5166  00158C  1F81               	negf	((___aomod@dividend))&0ffh
  5167  00158E  6D80               	movlw	0
  5168  001590  0E00               	addwfc	((___aomod@dividend+1))&0ffh
  5169  001592  2381               	addwfc	((___aomod@dividend+2))&0ffh
  5170  001594  2382               	addwfc	((___aomod@dividend+3))&0ffh
  5171  001596  2383               	addwfc	((___aomod@dividend+4))&0ffh
  5172  001598  2384               	addwfc	((___aomod@dividend+5))&0ffh
  5173  00159A  2385               	addwfc	((___aomod@dividend+6))&0ffh
  5174  00159C  2386               	addwfc	((___aomod@dividend+7))&0ffh
  5175  00159E  2387               	line	17
  5176                           	
  5177                           l2051:; BSR set to: 0
  5178  0015A0                     
  5179                           	movlw	low(01h)
  5180  0015A0  0E01               	movwf	((___aomod@sign))&0ffh
  5181  0015A2  6F91               	goto	l2053
  5182  0015A4  EFD4  F00A         	line	18
  5183                           	
  5184                           l370:; BSR set to: 0
  5185  0015A8                     
  5186                           	line	19
  5187                           	
  5188                           l2053:; BSR set to: 0
  5189  0015A8                     
  5190                           	btfsc	((___aomod@divisor+7))&0ffh,7
  5191  0015A8  BF8F               	goto	u1530
  5192  0015AA  EFDB  F00A         	goto	u1531
  5193  0015AE  EFD9  F00A         
  5194                           u1531:
  5195  0015B2                     	goto	l2057
  5196  0015B2  EFED  F00A         u1530:
  5197  0015B6                     	line	20
  5198                           	
  5199                           l2055:; BSR set to: 0
  5200  0015B6                     
  5201                           	comf	((___aomod@divisor+7))&0ffh
  5202  0015B6  1F8F               	comf	((___aomod@divisor+6))&0ffh
  5203  0015B8  1F8E               	comf	((___aomod@divisor+5))&0ffh
  5204  0015BA  1F8D               	comf	((___aomod@divisor+4))&0ffh
  5205  0015BC  1F8C               	comf	((___aomod@divisor+3))&0ffh
  5206  0015BE  1F8B               	comf	((___aomod@divisor+2))&0ffh
  5207  0015C0  1F8A               	comf	((___aomod@divisor+1))&0ffh
  5208  0015C2  1F89               	negf	((___aomod@divisor))&0ffh
  5209  0015C4  6D88               	movlw	0
  5210  0015C6  0E00               	addwfc	((___aomod@divisor+1))&0ffh
  5211  0015C8  2389               	addwfc	((___aomod@divisor+2))&0ffh
  5212  0015CA  238A               	addwfc	((___aomod@divisor+3))&0ffh
  5213  0015CC  238B               	addwfc	((___aomod@divisor+4))&0ffh
  5214  0015CE  238C               	addwfc	((___aomod@divisor+5))&0ffh
  5215  0015D0  238D               	addwfc	((___aomod@divisor+6))&0ffh
  5216  0015D2  238E               	addwfc	((___aomod@divisor+7))&0ffh
  5217  0015D4  238F               	goto	l2057
  5218  0015D6  EFED  F00A         	
  5219                           l371:; BSR set to: 0
  5220  0015DA                     
  5221                           	line	21
  5222                           	
  5223                           l2057:; BSR set to: 0
  5224  0015DA                     
  5225                           	movf	((___aomod@divisor))&0ffh,w
  5226  0015DA  5188               iorwf	((___aomod@divisor+1))&0ffh,w
  5227  0015DC  1189               iorwf	((___aomod@divisor+2))&0ffh,w
  5228  0015DE  118A               iorwf	((___aomod@divisor+3))&0ffh,w
  5229  0015E0  118B               iorwf	((___aomod@divisor+4))&0ffh,w
  5230  0015E2  118C               iorwf	((___aomod@divisor+5))&0ffh,w
  5231  0015E4  118D               iorwf	((___aomod@divisor+6))&0ffh,w
  5232  0015E6  118E               iorwf	((___aomod@divisor+7))&0ffh,w
  5233  0015E8  118F               	btfsc	status,2
  5234  0015EA  B4D8               	goto	u1541
  5235  0015EC  EFFA  F00A         	goto	u1540
  5236  0015F0  EFFC  F00A         
  5237                           u1541:
  5238  0015F4                     	goto	l2073
  5239  0015F4  EF50  F00B         u1540:
  5240  0015F8                     	line	22
  5241                           	
  5242                           l2059:; BSR set to: 0
  5243  0015F8                     
  5244                           	movlw	low(01h)
  5245  0015F8  0E01               	movwf	((___aomod@counter))&0ffh
  5246  0015FA  6F90               	line	23
  5247                           	goto	l2063
  5248  0015FC  EF0C  F00B         	
  5249                           l374:; BSR set to: 0
  5250  001600                     
  5251                           	line	24
  5252                           	
  5253                           l2061:; BSR set to: 0
  5254  001600                     
  5255                           	bcf	status,0
  5256  001600  90D8               	rlcf	((___aomod@divisor))&0ffh
  5257  001602  3788               	rlcf	((___aomod@divisor+1))&0ffh
  5258  001604  3789               	rlcf	((___aomod@divisor+2))&0ffh
  5259  001606  378A               	rlcf	((___aomod@divisor+3))&0ffh
  5260  001608  378B               	rlcf	((___aomod@divisor+4))&0ffh
  5261  00160A  378C               	rlcf	((___aomod@divisor+5))&0ffh
  5262  00160C  378D               	rlcf	((___aomod@divisor+6))&0ffh
  5263  00160E  378E               	rlcf	((___aomod@divisor+7))&0ffh
  5264  001610  378F               	line	25
  5265                           	incf	((___aomod@counter))&0ffh
  5266  001612  2B90               	goto	l2063
  5267  001614  EF0C  F00B         	line	26
  5268                           	
  5269                           l373:; BSR set to: 0
  5270  001618                     
  5271                           	line	23
  5272                           	
  5273                           l2063:; BSR set to: 0
  5274  001618                     
  5275                           	
  5276                           	btfss	((___aomod@divisor+7))&0ffh,(63)&7
  5277  001618  AF8F               	goto	u1551
  5278  00161A  EF11  F00B         	goto	u1550
  5279  00161E  EF13  F00B         u1551:
  5280  001622                     	goto	l2061
  5281  001622  EF00  F00B         u1550:
  5282  001626                     	goto	l2065
  5283  001626  EF17  F00B         	
  5284                           l375:; BSR set to: 0
  5285  00162A                     
  5286                           	goto	l2065
  5287  00162A  EF17  F00B         	line	27
  5288                           	
  5289                           l376:; BSR set to: 0
  5290  00162E                     
  5291                           	line	28
  5292                           	
  5293                           l2065:; BSR set to: 0
  5294  00162E                     
  5295                           		movf	((___aomod@divisor))&0ffh,w
  5296  00162E  5188               	subwf	((___aomod@dividend))&0ffh,w
  5297  001630  5D80               	movf	((___aomod@divisor+1))&0ffh,w
  5298  001632  5189               	subwfb	((___aomod@dividend+1))&0ffh,w
  5299  001634  5981               	movf	((___aomod@divisor+2))&0ffh,w
  5300  001636  518A               	subwfb	((___aomod@dividend+2))&0ffh,w
  5301  001638  5982               	movf	((___aomod@divisor+3))&0ffh,w
  5302  00163A  518B               	subwfb	((___aomod@dividend+3))&0ffh,w
  5303  00163C  5983               	movf	((___aomod@divisor+4))&0ffh,w
  5304  00163E  518C               	subwfb	((___aomod@dividend+4))&0ffh,w
  5305  001640  5984               	movf	((___aomod@divisor+5))&0ffh,w
  5306  001642  518D               	subwfb	((___aomod@dividend+5))&0ffh,w
  5307  001644  5985               	movf	((___aomod@divisor+6))&0ffh,w
  5308  001646  518E               	subwfb	((___aomod@dividend+6))&0ffh,w
  5309  001648  5986               	movf	((___aomod@divisor+7))&0ffh,w
  5310  00164A  518F               	subwfb	((___aomod@dividend+7))&0ffh,w
  5311  00164C  5987               	btfss	status,0
  5312  00164E  A0D8               	goto	u1561
  5313  001650  EF2C  F00B         	goto	u1560
  5314  001654  EF2E  F00B         
  5315                           u1561:
  5316  001658                     	goto	l2069
  5317  001658  EF40  F00B         u1560:
  5318  00165C                     	line	29
  5319                           	
  5320                           l2067:; BSR set to: 0
  5321  00165C                     
  5322                           	movf	((___aomod@divisor))&0ffh,w
  5323  00165C  5188               	subwf	((___aomod@dividend))&0ffh
  5324  00165E  5F80               	movf	((___aomod@divisor+1))&0ffh,w
  5325  001660  5189               	subwfb	((___aomod@dividend+1))&0ffh
  5326  001662  5B81               	movf	((___aomod@divisor+2))&0ffh,w
  5327  001664  518A               	subwfb	((___aomod@dividend+2))&0ffh
  5328  001666  5B82               	movf	((___aomod@divisor+3))&0ffh,w
  5329  001668  518B               	subwfb	((___aomod@dividend+3))&0ffh
  5330  00166A  5B83               	movf	((___aomod@divisor+4))&0ffh,w
  5331  00166C  518C               	subwfb	((___aomod@dividend+4))&0ffh
  5332  00166E  5B84               	movf	((___aomod@divisor+5))&0ffh,w
  5333  001670  518D               	subwfb	((___aomod@dividend+5))&0ffh
  5334  001672  5B85               	movf	((___aomod@divisor+6))&0ffh,w
  5335  001674  518E               	subwfb	((___aomod@dividend+6))&0ffh
  5336  001676  5B86               	movf	((___aomod@divisor+7))&0ffh,w
  5337  001678  518F               	subwfb	((___aomod@dividend+7))&0ffh
  5338  00167A  5B87               	goto	l2069
  5339  00167C  EF40  F00B         	
  5340                           l377:; BSR set to: 0
  5341  001680                     
  5342                           	line	30
  5343                           	
  5344                           l2069:; BSR set to: 0
  5345  001680                     
  5346                           	bcf	status,0
  5347  001680  90D8               	rrcf	((___aomod@divisor+7))&0ffh
  5348  001682  338F               	rrcf	((___aomod@divisor+6))&0ffh
  5349  001684  338E               	rrcf	((___aomod@divisor+5))&0ffh
  5350  001686  338D               	rrcf	((___aomod@divisor+4))&0ffh
  5351  001688  338C               	rrcf	((___aomod@divisor+3))&0ffh
  5352  00168A  338B               	rrcf	((___aomod@divisor+2))&0ffh
  5353  00168C  338A               	rrcf	((___aomod@divisor+1))&0ffh
  5354  00168E  3389               	rrcf	((___aomod@divisor))&0ffh
  5355  001690  3388               	line	31
  5356                           	
  5357                           l2071:; BSR set to: 0
  5358  001692                     
  5359                           	decfsz	((___aomod@counter))&0ffh
  5360  001692  2F90               	
  5361                           	goto	l2065
  5362  001694  EF17  F00B         	goto	l2073
  5363  001698  EF50  F00B         	
  5364                           l378:; BSR set to: 0
  5365  00169C                     
  5366                           	goto	l2073
  5367  00169C  EF50  F00B         	line	32
  5368                           	
  5369                           l372:; BSR set to: 0
  5370  0016A0                     
  5371                           	line	33
  5372                           	
  5373                           l2073:; BSR set to: 0
  5374  0016A0                     
  5375                           	movf	((___aomod@sign))&0ffh,w
  5376  0016A0  5191               	btfsc	status,2
  5377  0016A2  B4D8               	goto	u1571
  5378  0016A4  EF56  F00B         	goto	u1570
  5379  0016A8  EF58  F00B         u1571:
  5380  0016AC                     	goto	l2077
  5381  0016AC  EF6A  F00B         u1570:
  5382  0016B0                     	line	34
  5383                           	
  5384                           l2075:; BSR set to: 0
  5385  0016B0                     
  5386                           	comf	((___aomod@dividend+7))&0ffh
  5387  0016B0  1F87               	comf	((___aomod@dividend+6))&0ffh
  5388  0016B2  1F86               	comf	((___aomod@dividend+5))&0ffh
  5389  0016B4  1F85               	comf	((___aomod@dividend+4))&0ffh
  5390  0016B6  1F84               	comf	((___aomod@dividend+3))&0ffh
  5391  0016B8  1F83               	comf	((___aomod@dividend+2))&0ffh
  5392  0016BA  1F82               	comf	((___aomod@dividend+1))&0ffh
  5393  0016BC  1F81               	negf	((___aomod@dividend))&0ffh
  5394  0016BE  6D80               	movlw	0
  5395  0016C0  0E00               	addwfc	((___aomod@dividend+1))&0ffh
  5396  0016C2  2381               	addwfc	((___aomod@dividend+2))&0ffh
  5397  0016C4  2382               	addwfc	((___aomod@dividend+3))&0ffh
  5398  0016C6  2383               	addwfc	((___aomod@dividend+4))&0ffh
  5399  0016C8  2384               	addwfc	((___aomod@dividend+5))&0ffh
  5400  0016CA  2385               	addwfc	((___aomod@dividend+6))&0ffh
  5401  0016CC  2386               	addwfc	((___aomod@dividend+7))&0ffh
  5402  0016CE  2387               	goto	l2077
  5403  0016D0  EF6A  F00B         	
  5404                           l379:; BSR set to: 0
  5405  0016D4                     
  5406                           	line	35
  5407                           	
  5408                           l2077:; BSR set to: 0
  5409  0016D4                     
  5410                           	movff	(___aomod@dividend),(?___aomod)
  5411  0016D4  C080  F080         	movff	(___aomod@dividend+1),(?___aomod+1)
  5412  0016D8  C081  F081         	movff	(___aomod@dividend+2),(?___aomod+2)
  5413  0016DC  C082  F082         	movff	(___aomod@dividend+3),(?___aomod+3)
  5414  0016E0  C083  F083         	movff	(___aomod@dividend+4),(?___aomod+4)
  5415  0016E4  C084  F084         	movff	(___aomod@dividend+5),(?___aomod+5)
  5416  0016E8  C085  F085         	movff	(___aomod@dividend+6),(?___aomod+6)
  5417  0016EC  C086  F086         	movff	(___aomod@dividend+7),(?___aomod+7)
  5418  0016F0  C087  F087         	goto	l380
  5419  0016F4  EF7C  F00B         	
  5420                           l2079:; BSR set to: 0
  5421  0016F8                     
  5422                           	line	36
  5423                           	
  5424                           l380:; BSR set to: 0
  5425  0016F8                     
  5426                           	return	;funcret
  5427  0016F8  0012               	opt stack 0
  5428                           GLOBAL	__end_of___aomod
  5429                           	__end_of___aomod:
  5430  0016FA                     	signat	___aomod,8319
  5431                           	global	___aodiv
  5432                           
  5433 ;; *************** function ___aodiv *****************
  5434 ;; Defined at:
  5435 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  dividend        8    0[BANK0 ] long long 
  5438 ;;  divisor         8    8[BANK0 ] long long 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  quotient        8   18[BANK0 ] long long 
  5441 ;;  sign            1   17[BANK0 ] unsigned char 
  5442 ;;  counter         1   16[BANK0 ] unsigned char 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  8    0[BANK0 ] long long 
  5445 ;; Registers used:
  5446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5452 ;;      Params:         0      16       0       0       0       0       0
  5453 ;;      Locals:         0      10       0       0       0       0       0
  5454 ;;      Temps:          0       0       0       0       0       0       0
  5455 ;;      Totals:         0      26       0       0       0       0       0
  5456 ;;Total ram usage:       26 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:   12
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		_dtoa
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           psect	text16,class=CODE,space=0,reloc=2,group=1
  5466                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
  5467                           	line	9
  5468                           global __ptext16
  5469                           __ptext16:
  5470  00120A                     psect	text16
  5471                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
  5472                           	line	9
  5473                           	global	__size_of___aodiv
  5474                           	__size_of___aodiv	equ	__end_of___aodiv-___aodiv
  5475  0000                     	
  5476                           ___aodiv:; BSR set to: 0
  5477  00120A                     
  5478                           ;incstack = 0
  5479                           	opt	stack 11
  5480                           	line	15
  5481                           	
  5482                           l2001:
  5483  00120A                     	movlw	low(0)
  5484  00120A  0E00               	movlb	0	; () banked
  5485  00120C  0100               	movwf	((___aodiv@sign))&0ffh
  5486  00120E  6F91               	line	16
  5487                           	
  5488                           l2003:; BSR set to: 0
  5489  001210                     
  5490                           	btfsc	((___aodiv@divisor+7))&0ffh,7
  5491  001210  BF8F               	goto	u1450
  5492  001212  EF0F  F009         	goto	u1451
  5493  001216  EF0D  F009         
  5494                           u1451:
  5495  00121A                     	goto	l2009
  5496  00121A  EF23  F009         u1450:
  5497  00121E                     	line	17
  5498                           	
  5499                           l2005:; BSR set to: 0
  5500  00121E                     
  5501                           	comf	((___aodiv@divisor+7))&0ffh
  5502  00121E  1F8F               	comf	((___aodiv@divisor+6))&0ffh
  5503  001220  1F8E               	comf	((___aodiv@divisor+5))&0ffh
  5504  001222  1F8D               	comf	((___aodiv@divisor+4))&0ffh
  5505  001224  1F8C               	comf	((___aodiv@divisor+3))&0ffh
  5506  001226  1F8B               	comf	((___aodiv@divisor+2))&0ffh
  5507  001228  1F8A               	comf	((___aodiv@divisor+1))&0ffh
  5508  00122A  1F89               	negf	((___aodiv@divisor))&0ffh
  5509  00122C  6D88               	movlw	0
  5510  00122E  0E00               	addwfc	((___aodiv@divisor+1))&0ffh
  5511  001230  2389               	addwfc	((___aodiv@divisor+2))&0ffh
  5512  001232  238A               	addwfc	((___aodiv@divisor+3))&0ffh
  5513  001234  238B               	addwfc	((___aodiv@divisor+4))&0ffh
  5514  001236  238C               	addwfc	((___aodiv@divisor+5))&0ffh
  5515  001238  238D               	addwfc	((___aodiv@divisor+6))&0ffh
  5516  00123A  238E               	addwfc	((___aodiv@divisor+7))&0ffh
  5517  00123C  238F               	line	18
  5518                           	
  5519                           l2007:; BSR set to: 0
  5520  00123E                     
  5521                           	movlw	low(01h)
  5522  00123E  0E01               	movwf	((___aodiv@sign))&0ffh
  5523  001240  6F91               	goto	l2009
  5524  001242  EF23  F009         	line	19
  5525                           	
  5526                           l357:; BSR set to: 0
  5527  001246                     
  5528                           	line	20
  5529                           	
  5530                           l2009:; BSR set to: 0
  5531  001246                     
  5532                           	btfsc	((___aodiv@dividend+7))&0ffh,7
  5533  001246  BF87               	goto	u1460
  5534  001248  EF2A  F009         	goto	u1461
  5535  00124C  EF28  F009         
  5536                           u1461:
  5537  001250                     	goto	l2015
  5538  001250  EF3E  F009         u1460:
  5539  001254                     	line	21
  5540                           	
  5541                           l2011:; BSR set to: 0
  5542  001254                     
  5543                           	comf	((___aodiv@dividend+7))&0ffh
  5544  001254  1F87               	comf	((___aodiv@dividend+6))&0ffh
  5545  001256  1F86               	comf	((___aodiv@dividend+5))&0ffh
  5546  001258  1F85               	comf	((___aodiv@dividend+4))&0ffh
  5547  00125A  1F84               	comf	((___aodiv@dividend+3))&0ffh
  5548  00125C  1F83               	comf	((___aodiv@dividend+2))&0ffh
  5549  00125E  1F82               	comf	((___aodiv@dividend+1))&0ffh
  5550  001260  1F81               	negf	((___aodiv@dividend))&0ffh
  5551  001262  6D80               	movlw	0
  5552  001264  0E00               	addwfc	((___aodiv@dividend+1))&0ffh
  5553  001266  2381               	addwfc	((___aodiv@dividend+2))&0ffh
  5554  001268  2382               	addwfc	((___aodiv@dividend+3))&0ffh
  5555  00126A  2383               	addwfc	((___aodiv@dividend+4))&0ffh
  5556  00126C  2384               	addwfc	((___aodiv@dividend+5))&0ffh
  5557  00126E  2385               	addwfc	((___aodiv@dividend+6))&0ffh
  5558  001270  2386               	addwfc	((___aodiv@dividend+7))&0ffh
  5559  001272  2387               	line	22
  5560                           	
  5561                           l2013:; BSR set to: 0
  5562  001274                     
  5563                           	movlw	(01h)&0ffh
  5564  001274  0E01               	xorwf	((___aodiv@sign))&0ffh
  5565  001276  1B91               	goto	l2015
  5566  001278  EF3E  F009         	line	23
  5567                           	
  5568                           l358:; BSR set to: 0
  5569  00127C                     
  5570                           	line	24
  5571                           	
  5572                           l2015:; BSR set to: 0
  5573  00127C                     
  5574                           	lfsr	2,(___aodiv@quotient)
  5575  00127C  EE20  F092         	movlw	8-1
  5576  001280  0E07               u1471:
  5577  001282                     	clrf	postinc2
  5578  001282  6ADE               	decf	wreg
  5579  001284  06E8               	bc	u1471
  5580  001286  E2FD               	line	25
  5581                           	
  5582                           l2017:; BSR set to: 0
  5583  001288                     
  5584                           	movf	((___aodiv@divisor))&0ffh,w
  5585  001288  5188               iorwf	((___aodiv@divisor+1))&0ffh,w
  5586  00128A  1189               iorwf	((___aodiv@divisor+2))&0ffh,w
  5587  00128C  118A               iorwf	((___aodiv@divisor+3))&0ffh,w
  5588  00128E  118B               iorwf	((___aodiv@divisor+4))&0ffh,w
  5589  001290  118C               iorwf	((___aodiv@divisor+5))&0ffh,w
  5590  001292  118D               iorwf	((___aodiv@divisor+6))&0ffh,w
  5591  001294  118E               iorwf	((___aodiv@divisor+7))&0ffh,w
  5592  001296  118F               	btfsc	status,2
  5593  001298  B4D8               	goto	u1481
  5594  00129A  EF51  F009         	goto	u1480
  5595  00129E  EF53  F009         
  5596                           u1481:
  5597  0012A2                     	goto	l2037
  5598  0012A2  EFB1  F009         u1480:
  5599  0012A6                     	line	26
  5600                           	
  5601                           l2019:; BSR set to: 0
  5602  0012A6                     
  5603                           	movlw	low(01h)
  5604  0012A6  0E01               	movwf	((___aodiv@counter))&0ffh
  5605  0012A8  6F90               	line	27
  5606                           	goto	l2023
  5607  0012AA  EF63  F009         	
  5608                           l361:; BSR set to: 0
  5609  0012AE                     
  5610                           	line	28
  5611                           	
  5612                           l2021:; BSR set to: 0
  5613  0012AE                     
  5614                           	bcf	status,0
  5615  0012AE  90D8               	rlcf	((___aodiv@divisor))&0ffh
  5616  0012B0  3788               	rlcf	((___aodiv@divisor+1))&0ffh
  5617  0012B2  3789               	rlcf	((___aodiv@divisor+2))&0ffh
  5618  0012B4  378A               	rlcf	((___aodiv@divisor+3))&0ffh
  5619  0012B6  378B               	rlcf	((___aodiv@divisor+4))&0ffh
  5620  0012B8  378C               	rlcf	((___aodiv@divisor+5))&0ffh
  5621  0012BA  378D               	rlcf	((___aodiv@divisor+6))&0ffh
  5622  0012BC  378E               	rlcf	((___aodiv@divisor+7))&0ffh
  5623  0012BE  378F               	line	29
  5624                           	incf	((___aodiv@counter))&0ffh
  5625  0012C0  2B90               	goto	l2023
  5626  0012C2  EF63  F009         	line	30
  5627                           	
  5628                           l360:; BSR set to: 0
  5629  0012C6                     
  5630                           	line	27
  5631                           	
  5632                           l2023:; BSR set to: 0
  5633  0012C6                     
  5634                           	
  5635                           	btfss	((___aodiv@divisor+7))&0ffh,(63)&7
  5636  0012C6  AF8F               	goto	u1491
  5637  0012C8  EF68  F009         	goto	u1490
  5638  0012CC  EF6A  F009         u1491:
  5639  0012D0                     	goto	l2021
  5640  0012D0  EF57  F009         u1490:
  5641  0012D4                     	goto	l2025
  5642  0012D4  EF6E  F009         	
  5643                           l362:; BSR set to: 0
  5644  0012D8                     
  5645                           	goto	l2025
  5646  0012D8  EF6E  F009         	line	31
  5647                           	
  5648                           l363:; BSR set to: 0
  5649  0012DC                     
  5650                           	line	32
  5651                           	
  5652                           l2025:; BSR set to: 0
  5653  0012DC                     
  5654                           	bcf	status,0
  5655  0012DC  90D8               	rlcf	((___aodiv@quotient))&0ffh
  5656  0012DE  3792               	rlcf	((___aodiv@quotient+1))&0ffh
  5657  0012E0  3793               	rlcf	((___aodiv@quotient+2))&0ffh
  5658  0012E2  3794               	rlcf	((___aodiv@quotient+3))&0ffh
  5659  0012E4  3795               	rlcf	((___aodiv@quotient+4))&0ffh
  5660  0012E6  3796               	rlcf	((___aodiv@quotient+5))&0ffh
  5661  0012E8  3797               	rlcf	((___aodiv@quotient+6))&0ffh
  5662  0012EA  3798               	rlcf	((___aodiv@quotient+7))&0ffh
  5663  0012EC  3799               	line	33
  5664                           	
  5665                           l2027:; BSR set to: 0
  5666  0012EE                     
  5667                           		movf	((___aodiv@divisor))&0ffh,w
  5668  0012EE  5188               	subwf	((___aodiv@dividend))&0ffh,w
  5669  0012F0  5D80               	movf	((___aodiv@divisor+1))&0ffh,w
  5670  0012F2  5189               	subwfb	((___aodiv@dividend+1))&0ffh,w
  5671  0012F4  5981               	movf	((___aodiv@divisor+2))&0ffh,w
  5672  0012F6  518A               	subwfb	((___aodiv@dividend+2))&0ffh,w
  5673  0012F8  5982               	movf	((___aodiv@divisor+3))&0ffh,w
  5674  0012FA  518B               	subwfb	((___aodiv@dividend+3))&0ffh,w
  5675  0012FC  5983               	movf	((___aodiv@divisor+4))&0ffh,w
  5676  0012FE  518C               	subwfb	((___aodiv@dividend+4))&0ffh,w
  5677  001300  5984               	movf	((___aodiv@divisor+5))&0ffh,w
  5678  001302  518D               	subwfb	((___aodiv@dividend+5))&0ffh,w
  5679  001304  5985               	movf	((___aodiv@divisor+6))&0ffh,w
  5680  001306  518E               	subwfb	((___aodiv@dividend+6))&0ffh,w
  5681  001308  5986               	movf	((___aodiv@divisor+7))&0ffh,w
  5682  00130A  518F               	subwfb	((___aodiv@dividend+7))&0ffh,w
  5683  00130C  5987               	btfss	status,0
  5684  00130E  A0D8               	goto	u1501
  5685  001310  EF8C  F009         	goto	u1500
  5686  001314  EF8E  F009         
  5687                           u1501:
  5688  001318                     	goto	l2033
  5689  001318  EFA1  F009         u1500:
  5690  00131C                     	line	34
  5691                           	
  5692                           l2029:; BSR set to: 0
  5693  00131C                     
  5694                           	movf	((___aodiv@divisor))&0ffh,w
  5695  00131C  5188               	subwf	((___aodiv@dividend))&0ffh
  5696  00131E  5F80               	movf	((___aodiv@divisor+1))&0ffh,w
  5697  001320  5189               	subwfb	((___aodiv@dividend+1))&0ffh
  5698  001322  5B81               	movf	((___aodiv@divisor+2))&0ffh,w
  5699  001324  518A               	subwfb	((___aodiv@dividend+2))&0ffh
  5700  001326  5B82               	movf	((___aodiv@divisor+3))&0ffh,w
  5701  001328  518B               	subwfb	((___aodiv@dividend+3))&0ffh
  5702  00132A  5B83               	movf	((___aodiv@divisor+4))&0ffh,w
  5703  00132C  518C               	subwfb	((___aodiv@dividend+4))&0ffh
  5704  00132E  5B84               	movf	((___aodiv@divisor+5))&0ffh,w
  5705  001330  518D               	subwfb	((___aodiv@dividend+5))&0ffh
  5706  001332  5B85               	movf	((___aodiv@divisor+6))&0ffh,w
  5707  001334  518E               	subwfb	((___aodiv@dividend+6))&0ffh
  5708  001336  5B86               	movf	((___aodiv@divisor+7))&0ffh,w
  5709  001338  518F               	subwfb	((___aodiv@dividend+7))&0ffh
  5710  00133A  5B87               	line	35
  5711                           	
  5712                           l2031:; BSR set to: 0
  5713  00133C                     
  5714                           	bsf	(0+(0/8)+(___aodiv@quotient))&0ffh,(0)&7
  5715  00133C  8192               	goto	l2033
  5716  00133E  EFA1  F009         	line	36
  5717                           	
  5718                           l364:; BSR set to: 0
  5719  001342                     
  5720                           	line	37
  5721                           	
  5722                           l2033:; BSR set to: 0
  5723  001342                     
  5724                           	bcf	status,0
  5725  001342  90D8               	rrcf	((___aodiv@divisor+7))&0ffh
  5726  001344  338F               	rrcf	((___aodiv@divisor+6))&0ffh
  5727  001346  338E               	rrcf	((___aodiv@divisor+5))&0ffh
  5728  001348  338D               	rrcf	((___aodiv@divisor+4))&0ffh
  5729  00134A  338C               	rrcf	((___aodiv@divisor+3))&0ffh
  5730  00134C  338B               	rrcf	((___aodiv@divisor+2))&0ffh
  5731  00134E  338A               	rrcf	((___aodiv@divisor+1))&0ffh
  5732  001350  3389               	rrcf	((___aodiv@divisor))&0ffh
  5733  001352  3388               	line	38
  5734                           	
  5735                           l2035:; BSR set to: 0
  5736  001354                     
  5737                           	decfsz	((___aodiv@counter))&0ffh
  5738  001354  2F90               	
  5739                           	goto	l2025
  5740  001356  EF6E  F009         	goto	l2037
  5741  00135A  EFB1  F009         	
  5742                           l365:; BSR set to: 0
  5743  00135E                     
  5744                           	goto	l2037
  5745  00135E  EFB1  F009         	line	39
  5746                           	
  5747                           l359:; BSR set to: 0
  5748  001362                     
  5749                           	line	40
  5750                           	
  5751                           l2037:; BSR set to: 0
  5752  001362                     
  5753                           	movf	((___aodiv@sign))&0ffh,w
  5754  001362  5191               	btfsc	status,2
  5755  001364  B4D8               	goto	u1511
  5756  001366  EFB7  F009         	goto	u1510
  5757  00136A  EFB9  F009         u1511:
  5758  00136E                     	goto	l2041
  5759  00136E  EFCB  F009         u1510:
  5760  001372                     	line	41
  5761                           	
  5762                           l2039:; BSR set to: 0
  5763  001372                     
  5764                           	comf	((___aodiv@quotient+7))&0ffh
  5765  001372  1F99               	comf	((___aodiv@quotient+6))&0ffh
  5766  001374  1F98               	comf	((___aodiv@quotient+5))&0ffh
  5767  001376  1F97               	comf	((___aodiv@quotient+4))&0ffh
  5768  001378  1F96               	comf	((___aodiv@quotient+3))&0ffh
  5769  00137A  1F95               	comf	((___aodiv@quotient+2))&0ffh
  5770  00137C  1F94               	comf	((___aodiv@quotient+1))&0ffh
  5771  00137E  1F93               	negf	((___aodiv@quotient))&0ffh
  5772  001380  6D92               	movlw	0
  5773  001382  0E00               	addwfc	((___aodiv@quotient+1))&0ffh
  5774  001384  2393               	addwfc	((___aodiv@quotient+2))&0ffh
  5775  001386  2394               	addwfc	((___aodiv@quotient+3))&0ffh
  5776  001388  2395               	addwfc	((___aodiv@quotient+4))&0ffh
  5777  00138A  2396               	addwfc	((___aodiv@quotient+5))&0ffh
  5778  00138C  2397               	addwfc	((___aodiv@quotient+6))&0ffh
  5779  00138E  2398               	addwfc	((___aodiv@quotient+7))&0ffh
  5780  001390  2399               	goto	l2041
  5781  001392  EFCB  F009         	
  5782                           l366:; BSR set to: 0
  5783  001396                     
  5784                           	line	42
  5785                           	
  5786                           l2041:; BSR set to: 0
  5787  001396                     
  5788                           	movff	(___aodiv@quotient),(?___aodiv)
  5789  001396  C092  F080         	movff	(___aodiv@quotient+1),(?___aodiv+1)
  5790  00139A  C093  F081         	movff	(___aodiv@quotient+2),(?___aodiv+2)
  5791  00139E  C094  F082         	movff	(___aodiv@quotient+3),(?___aodiv+3)
  5792  0013A2  C095  F083         	movff	(___aodiv@quotient+4),(?___aodiv+4)
  5793  0013A6  C096  F084         	movff	(___aodiv@quotient+5),(?___aodiv+5)
  5794  0013AA  C097  F085         	movff	(___aodiv@quotient+6),(?___aodiv+6)
  5795  0013AE  C098  F086         	movff	(___aodiv@quotient+7),(?___aodiv+7)
  5796  0013B2  C099  F087         	goto	l367
  5797  0013B6  EFDD  F009         	
  5798                           l2043:; BSR set to: 0
  5799  0013BA                     
  5800                           	line	43
  5801                           	
  5802                           l367:; BSR set to: 0
  5803  0013BA                     
  5804                           	return	;funcret
  5805  0013BA  0012               	opt stack 0
  5806                           GLOBAL	__end_of___aodiv
  5807                           	__end_of___aodiv:
  5808  0013BC                     	signat	___aodiv,8319
  5809                           	global	_lcd_puts
  5810                           
  5811 ;; *************** function _lcd_puts *****************
  5812 ;; Defined at:
  5813 ;;		line 62 in file "lcd.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  s               2    1[BANK0 ] PTR const unsigned char 
  5816 ;;		 -> STR_11(10), STR_10(14), STR_8(16), STR_6(18), 
  5817 ;;		 -> STR_5(7), STR_3(7), num(3), STR_1(9), 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;		None
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  1    wreg      void 
  5822 ;; Registers used:
  5823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5829 ;;      Params:         0       2       0       0       0       0       0
  5830 ;;      Locals:         0       0       0       0       0       0       0
  5831 ;;      Temps:          0       0       0       0       0       0       0
  5832 ;;      Totals:         0       2       0       0       0       0       0
  5833 ;;Total ram usage:        2 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:   13
  5836 ;; This function calls:
  5837 ;;		_lcd_write
  5838 ;; This function is called by:
  5839 ;;		_mostra
  5840 ;;		_gira_horarioF
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           psect	text17,class=CODE,space=0,reloc=2,group=0
  5844                           	file	"lcd.c"
  5845                           	line	62
  5846                           global __ptext17
  5847                           __ptext17:
  5848  002126                     psect	text17
  5849                           	file	"lcd.c"
  5850                           	line	62
  5851                           	global	__size_of_lcd_puts
  5852                           	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  5853  0000                     	
  5854                           _lcd_puts:; BSR set to: 0
  5855  002126                     
  5856                           ;incstack = 0
  5857                           	opt	stack 16
  5858                           	line	64
  5859                           	
  5860                           l2439:
  5861  002126                     ;lcd.c: 62: lcd_puts(const char * s);lcd.c: 63: {;lcd.c: 64:  LE0 = 1;
  5862                           	bsf	c:(31848/8),(31848)&7	;volatile
  5863  002126  808D               	line	65
  5864                           ;lcd.c: 65:  while(*s)
  5865                           	goto	l2445
  5866  002128  EFAD  F010         	
  5867                           l18:
  5868  00212C                     	line	66
  5869                           	
  5870                           l2441:
  5871  00212C                     ;lcd.c: 66:   lcd_write(*s++);
  5872                           	movff	(lcd_puts@s),tblptrl
  5873  00212C  C081  FFF6         	movff	(lcd_puts@s+1),tblptrh
  5874  002130  C082  FFF7         	clrf	tblptru
  5875  002134  6AF8               	
  5876                           	movlw	high __ramtop-1
  5877  002136  0E05               	cpfsgt	tblptrh
  5878  002138  64F7               	bra	u2167
  5879  00213A  D003               	tblrd	*
  5880  00213C  0008               	
  5881                           	movf	tablat,w
  5882  00213E  50F5               	bra	u2160
  5883  002140  D005               u2167:
  5884  002142                     	movff	tblptrl,fsr1l
  5885  002142  CFF6 FFE1          	movff	tblptrh,fsr1h
  5886  002146  CFF7 FFE2          	movf	indf1,w
  5887  00214A  50E7               u2160:
  5888  00214C                     	
  5889                           	call	_lcd_write
  5890  00214C  EC19  F014         	
  5891                           l2443:
  5892  002150                     	movlb	0	; () banked
  5893  002150  0100               	infsnz	((lcd_puts@s))&0ffh
  5894  002152  4B81               	incf	((lcd_puts@s+1))&0ffh
  5895  002154  2B82               	goto	l2445
  5896  002156  EFAD  F010         	
  5897                           l17:; BSR set to: 0
  5898  00215A                     
  5899                           	line	65
  5900                           	
  5901                           l2445:
  5902  00215A                     ;lcd.c: 65:  while(*s)
  5903                           	movff	(lcd_puts@s),tblptrl
  5904  00215A  C081  FFF6         	movff	(lcd_puts@s+1),tblptrh
  5905  00215E  C082  FFF7         	clrf	tblptru
  5906  002162  6AF8               	
  5907                           	movlw	high __ramtop-1
  5908  002164  0E05               	cpfsgt	tblptrh
  5909  002166  64F7               	bra	u2177
  5910  002168  D003               	tblrd	*
  5911  00216A  0008               	
  5912                           	movf	tablat,w
  5913  00216C  50F5               	bra	u2170
  5914  00216E  D005               u2177:
  5915  002170                     	movff	tblptrl,fsr1l
  5916  002170  CFF6 FFE1          	movff	tblptrh,fsr1h
  5917  002174  CFF7 FFE2          	movf	indf1,w
  5918  002178  50E7               u2170:
  5919  00217A                     	iorlw	0
  5920  00217A  0900               	btfss	status,2
  5921  00217C  A4D8               	goto	u2181
  5922  00217E  EFC3  F010         	goto	u2180
  5923  002182  EFC5  F010         u2181:
  5924  002186                     	goto	l2441
  5925  002186  EF96  F010         u2180:
  5926  00218A                     	goto	l20
  5927  00218A  EFC7  F010         	
  5928                           l19:
  5929  00218E                     	line	67
  5930                           	
  5931                           l20:
  5932  00218E                     	return	;funcret
  5933  00218E  0012               	opt stack 0
  5934                           GLOBAL	__end_of_lcd_puts
  5935                           	__end_of_lcd_puts:
  5936  002190                     	signat	_lcd_puts,4217
  5937                           	global	_lcd_init
  5938                           
  5939 ;; *************** function _lcd_init *****************
  5940 ;; Defined at:
  5941 ;;		line 92 in file "lcd.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;		None
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;  init_value      1    3[BANK0 ] unsigned char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      void 
  5948 ;; Registers used:
  5949 ;;		wreg, status,2, cstack
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5955 ;;      Params:         0       0       0       0       0       0       0
  5956 ;;      Locals:         0       1       0       0       0       0       0
  5957 ;;      Temps:          0       1       0       0       0       0       0
  5958 ;;      Totals:         0       2       0       0       0       0       0
  5959 ;;Total ram usage:        2 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:   14
  5962 ;; This function calls:
  5963 ;;		_lcd_clear
  5964 ;;		_lcd_write
  5965 ;; This function is called by:
  5966 ;;		_mostra
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           psect	text18,class=CODE,space=0,reloc=2,group=0
  5970                           	line	92
  5971                           global __ptext18
  5972                           __ptext18:
  5973  0020BA                     psect	text18
  5974                           	file	"lcd.c"
  5975                           	line	92
  5976                           	global	__size_of_lcd_init
  5977                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5978  0000                     	
  5979                           _lcd_init:
  5980  0020BA                     ;incstack = 0
  5981                           	opt	stack 13
  5982                           	line	97
  5983                           	
  5984                           l2451:
  5985  0020BA                     ;lcd.c: 94:  char init_value;;lcd.c: 97:  init_value = 0x03;
  5986                           	movlw	low(03h)
  5987  0020BA  0E03               	movlb	0	; () banked
  5988  0020BC  0100               	movwf	((lcd_init@init_value))&0ffh
  5989  0020BE  6F83               	line	98
  5990                           	
  5991                           l2453:; BSR set to: 0
  5992  0020C0                     
  5993                           ;lcd.c: 98:  LE0 = 0;
  5994                           	bcf	c:(31848/8),(31848)&7	;volatile
  5995  0020C0  908D               	line	99
  5996                           	
  5997                           l2455:; BSR set to: 0
  5998  0020C2                     
  5999                           ;lcd.c: 99:  LE1 = 0;
  6000                           	bcf	c:(31849/8),(31849)&7	;volatile
  6001  0020C2  928D               	line	102
  6002                           	
  6003                           l2457:; BSR set to: 0
  6004  0020C4                     
  6005                           ;lcd.c: 102:  _delay((unsigned long)((15)*(4000000/4000.0)));
  6006                           	opt asmopt_push
  6007                           opt asmopt_off
  6008                           movlw	20
  6009  0020C4  0E14               	movlb	0	; () banked
  6010  0020C6  0100               movwf	(??_lcd_init+0+0)&0ffh,f
  6011  0020C8  6F82               	movlw	121
  6012  0020CA  0E79               u2697:
  6013  0020CC                     decfsz	wreg,f
  6014  0020CC  2EE8               	bra	u2697
  6015  0020CE  D7FE               	decfsz	(??_lcd_init+0+0)&0ffh,f
  6016  0020D0  2F82               	bra	u2697
  6017  0020D2  D7FC               	nop2
  6018  0020D4  D000               opt asmopt_pop
  6019                           
  6020                           	line	103
  6021                           	
  6022                           l2459:
  6023  0020D6                     ;lcd.c: 103:  PORTD = init_value;
  6024                           	movff	(lcd_init@init_value),(c:3971)	;volatile
  6025  0020D6  C083  FF83         	line	104
  6026                           	
  6027                           l2461:
  6028  0020DA                     ;lcd.c: 104:  ((LE1 = 1),(LE1=0));
  6029                           	bsf	c:(31849/8),(31849)&7	;volatile
  6030  0020DA  828D               	
  6031                           l2463:
  6032  0020DC                     	bcf	c:(31849/8),(31849)&7	;volatile
  6033  0020DC  928D               	line	105
  6034                           	
  6035                           l2465:
  6036  0020DE                     ;lcd.c: 105:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6037                           	opt asmopt_push
  6038                           opt asmopt_off
  6039                           movlw	7
  6040  0020DE  0E07               	movlb	0	; () banked
  6041  0020E0  0100               movwf	(??_lcd_init+0+0)&0ffh,f
  6042  0020E2  6F82               	movlw	125
  6043  0020E4  0E7D               u2707:
  6044  0020E6                     decfsz	wreg,f
  6045  0020E6  2EE8               	bra	u2707
  6046  0020E8  D7FE               	decfsz	(??_lcd_init+0+0)&0ffh,f
  6047  0020EA  2F82               	bra	u2707
  6048  0020EC  D7FC               opt asmopt_pop
  6049                           
  6050                           	line	106
  6051                           	
  6052                           l2467:
  6053  0020EE                     ;lcd.c: 106:  ((LE1 = 1),(LE1=0));
  6054                           	bsf	c:(31849/8),(31849)&7	;volatile
  6055  0020EE  828D               	
  6056                           l2469:
  6057  0020F0                     	bcf	c:(31849/8),(31849)&7	;volatile
  6058  0020F0  928D               	line	107
  6059                           	
  6060                           l2471:
  6061  0020F2                     ;lcd.c: 107:  _delay((unsigned long)((200)*(4000000/4000000.0)));
  6062                           	opt asmopt_push
  6063                           opt asmopt_off
  6064                           	movlw	66
  6065  0020F2  0E42               u2717:
  6066  0020F4                     decfsz	wreg,f
  6067  0020F4  2EE8               	bra	u2717
  6068  0020F6  D7FE               	nop2
  6069  0020F8  D000               opt asmopt_pop
  6070                           
  6071                           	line	108
  6072                           	
  6073                           l2473:
  6074  0020FA                     ;lcd.c: 108:  ((LE1 = 1),(LE1=0));
  6075                           	bsf	c:(31849/8),(31849)&7	;volatile
  6076  0020FA  828D               	
  6077                           l2475:
  6078  0020FC                     	bcf	c:(31849/8),(31849)&7	;volatile
  6079  0020FC  928D               	line	109
  6080                           	
  6081                           l2477:
  6082  0020FE                     ;lcd.c: 109:  _delay((unsigned long)((200)*(4000000/4000000.0)));
  6083                           	opt asmopt_push
  6084                           opt asmopt_off
  6085                           	movlw	66
  6086  0020FE  0E42               u2727:
  6087  002100                     decfsz	wreg,f
  6088  002100  2EE8               	bra	u2727
  6089  002102  D7FE               	nop2
  6090  002104  D000               opt asmopt_pop
  6091                           
  6092                           	line	110
  6093                           ;lcd.c: 110:  PORTD = 2;
  6094                           	movlw	low(02h)
  6095  002106  0E02               	movwf	((c:3971)),c	;volatile
  6096  002108  6E83               	line	111
  6097                           	
  6098                           l2479:
  6099  00210A                     ;lcd.c: 111:  ((LE1 = 1),(LE1=0));
  6100                           	bsf	c:(31849/8),(31849)&7	;volatile
  6101  00210A  828D               	
  6102                           l2481:
  6103  00210C                     	bcf	c:(31849/8),(31849)&7	;volatile
  6104  00210C  928D               	line	113
  6105                           	
  6106                           l2483:
  6107  00210E                     ;lcd.c: 113:  lcd_write(0x38);
  6108                           	movlw	(038h)&0ffh
  6109  00210E  0E38               	
  6110                           	call	_lcd_write
  6111  002110  EC19  F014         	line	114
  6112                           	
  6113                           l2485:
  6114  002114                     ;lcd.c: 114:  lcd_write(0x06);
  6115                           	movlw	(06h)&0ffh
  6116  002114  0E06               	
  6117                           	call	_lcd_write
  6118  002116  EC19  F014         	line	115
  6119                           	
  6120                           l2487:
  6121  00211A                     ;lcd.c: 115:  lcd_write(0x0C);
  6122                           	movlw	(0Ch)&0ffh
  6123  00211A  0E0C               	
  6124                           	call	_lcd_write
  6125  00211C  EC19  F014         	line	116
  6126                           	
  6127                           l2489:
  6128  002120                     ;lcd.c: 116:  lcd_clear();
  6129                           	call	_lcd_clear	;wreg free
  6130  002120  ECFF  F013         	line	118
  6131                           	
  6132                           l29:
  6133  002124                     	return	;funcret
  6134  002124  0012               	opt stack 0
  6135                           GLOBAL	__end_of_lcd_init
  6136                           	__end_of_lcd_init:
  6137  002126                     	signat	_lcd_init,89
  6138                           	global	_lcd_clear
  6139                           
  6140 ;; *************** function _lcd_clear *****************
  6141 ;; Defined at:
  6142 ;;		line 52 in file "lcd.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;		None
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      void 
  6149 ;; Registers used:
  6150 ;;		wreg, status,2, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6156 ;;      Params:         0       0       0       0       0       0       0
  6157 ;;      Locals:         0       0       0       0       0       0       0
  6158 ;;      Temps:          0       1       0       0       0       0       0
  6159 ;;      Totals:         0       1       0       0       0       0       0
  6160 ;;Total ram usage:        1 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:   13
  6163 ;; This function calls:
  6164 ;;		_lcd_write
  6165 ;; This function is called by:
  6166 ;;		_lcd_init
  6167 ;;		_mostra
  6168 ;;		_gira_horarioF
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           psect	text19,class=CODE,space=0,reloc=2,group=0
  6172                           	line	52
  6173                           global __ptext19
  6174                           __ptext19:
  6175  0027FE                     psect	text19
  6176                           	file	"lcd.c"
  6177                           	line	52
  6178                           	global	__size_of_lcd_clear
  6179                           	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  6180  0000                     	
  6181                           _lcd_clear:
  6182  0027FE                     ;incstack = 0
  6183                           	opt	stack 16
  6184                           	line	54
  6185                           	
  6186                           l2411:
  6187  0027FE                     ;lcd.c: 54:  LE0 = 0;
  6188                           	bcf	c:(31848/8),(31848)&7	;volatile
  6189  0027FE  908D               	line	55
  6190                           	
  6191                           l2413:
  6192  002800                     ;lcd.c: 55:  lcd_write(0x01);
  6193                           	movlw	(01h)&0ffh
  6194  002800  0E01               	
  6195                           	call	_lcd_write
  6196  002802  EC19  F014         	line	56
  6197                           	
  6198                           l2415:
  6199  002806                     ;lcd.c: 56:  _delay((unsigned long)((2)*(4000000/4000.0)));
  6200                           	opt asmopt_push
  6201                           opt asmopt_off
  6202                           movlw	3
  6203  002806  0E03               	movlb	0	; () banked
  6204  002808  0100               movwf	(??_lcd_clear+0+0)&0ffh,f
  6205  00280A  6F81               	movlw	151
  6206  00280C  0E97               u2737:
  6207  00280E                     decfsz	wreg,f
  6208  00280E  2EE8               	bra	u2737
  6209  002810  D7FE               	decfsz	(??_lcd_clear+0+0)&0ffh,f
  6210  002812  2F81               	bra	u2737
  6211  002814  D7FC               	nop2
  6212  002816  D000               opt asmopt_pop
  6213                           
  6214                           	line	57
  6215                           	
  6216                           l14:
  6217  002818                     	return	;funcret
  6218  002818  0012               	opt stack 0
  6219                           GLOBAL	__end_of_lcd_clear
  6220                           	__end_of_lcd_clear:
  6221  00281A                     	signat	_lcd_clear,89
  6222                           	global	_lcd_goto
  6223                           
  6224 ;; *************** function _lcd_goto *****************
  6225 ;; Defined at:
  6226 ;;		line 84 in file "lcd.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;  pos             1    wreg     unsigned char 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;  pos             1    1[BANK0 ] unsigned char 
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      void 
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0, cstack
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6240 ;;      Params:         0       0       0       0       0       0       0
  6241 ;;      Locals:         0       1       0       0       0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0
  6243 ;;      Totals:         0       1       0       0       0       0       0
  6244 ;;Total ram usage:        1 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:   13
  6247 ;; This function calls:
  6248 ;;		_lcd_write
  6249 ;; This function is called by:
  6250 ;;		_mostra
  6251 ;;		_gira_horarioF
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           psect	text20,class=CODE,space=0,reloc=2,group=0
  6255                           	line	84
  6256                           global __ptext20
  6257                           __ptext20:
  6258  00285C                     psect	text20
  6259                           	file	"lcd.c"
  6260                           	line	84
  6261                           	global	__size_of_lcd_goto
  6262                           	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  6263  0000                     	
  6264                           _lcd_goto:
  6265  00285C                     ;incstack = 0
  6266                           	opt	stack 16
  6267                           ;lcd_goto@pos stored from wreg
  6268                           	movlb	0	; () banked
  6269  00285C  0100               	movwf	((lcd_goto@pos))&0ffh
  6270  00285E  6F81               	line	86
  6271                           	
  6272                           l2447:
  6273  002860                     ;lcd.c: 84: lcd_goto(unsigned char pos);lcd.c: 85: {;lcd.c: 86:  LE0 = 0;
  6274                           	bcf	c:(31848/8),(31848)&7	;volatile
  6275  002860  908D               	line	87
  6276                           	
  6277                           l2449:
  6278  002862                     ;lcd.c: 87:  lcd_write(0x80+pos);
  6279                           	movlb	0	; () banked
  6280  002862  0100               	movf	((lcd_goto@pos))&0ffh,w
  6281  002864  5181               	addlw	low(080h)
  6282  002866  0F80               	
  6283                           	call	_lcd_write
  6284  002868  EC19  F014         	line	88
  6285                           	
  6286                           l26:
  6287  00286C                     	return	;funcret
  6288  00286C  0012               	opt stack 0
  6289                           GLOBAL	__end_of_lcd_goto
  6290                           	__end_of_lcd_goto:
  6291  00286E                     	signat	_lcd_goto,4217
  6292                           	global	_lcd_write
  6293                           
  6294 ;; *************** function _lcd_write *****************
  6295 ;; Defined at:
  6296 ;;		line 38 in file "lcd.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  c               1    wreg     unsigned char 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  c               1    0[BANK0 ] unsigned char 
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  1    wreg      void 
  6303 ;; Registers used:
  6304 ;;		wreg, status,2, cstack
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6310 ;;      Params:         0       0       0       0       0       0       0
  6311 ;;      Locals:         0       1       0       0       0       0       0
  6312 ;;      Temps:          0       0       0       0       0       0       0
  6313 ;;      Totals:         0       1       0       0       0       0       0
  6314 ;;Total ram usage:        1 bytes
  6315 ;; Hardware stack levels used:    1
  6316 ;; Hardware stack levels required when called:   12
  6317 ;; This function calls:
  6318 ;;		Nothing
  6319 ;; This function is called by:
  6320 ;;		_lcd_clear
  6321 ;;		_lcd_puts
  6322 ;;		_lcd_goto
  6323 ;;		_lcd_init
  6324 ;;		_lcd_putch
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           psect	text21,class=CODE,space=0,reloc=2,group=0
  6328                           	line	38
  6329                           global __ptext21
  6330                           __ptext21:
  6331  002832                     psect	text21
  6332                           	file	"lcd.c"
  6333                           	line	38
  6334                           	global	__size_of_lcd_write
  6335                           	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  6336  0000                     	
  6337                           _lcd_write:
  6338  002832                     ;incstack = 0
  6339                           	opt	stack 16
  6340                           ;lcd_write@c stored from wreg
  6341                           	movlb	0	; () banked
  6342  002832  0100               	movwf	((lcd_write@c))&0ffh
  6343  002834  6F80               	line	40
  6344                           	
  6345                           l2311:
  6346  002836                     ;lcd.c: 38: lcd_write(unsigned char c);lcd.c: 39: {;lcd.c: 40:  _delay((unsigned long)((
                                 1)*(4000000/4000.0)));
  6347                           	opt asmopt_push
  6348                           opt asmopt_off
  6349                           	movlw	200
  6350  002836  0EC8               u2747:
  6351  002838                     	nop2
  6352  002838  D000               decfsz	wreg,f
  6353  00283A  2EE8               	bra	u2747
  6354  00283C  D7FD               opt asmopt_pop
  6355                           
  6356                           	line	41
  6357                           	
  6358                           l2313:
  6359  00283E                     ;lcd.c: 41:     PORTD = ( c );
  6360                           	movff	(lcd_write@c),(c:3971)	;volatile
  6361  00283E  C080  FF83         	line	42
  6362                           	
  6363                           l2315:
  6364  002842                     ;lcd.c: 42:  ((LE1 = 1),(LE1=0));
  6365                           	bsf	c:(31849/8),(31849)&7	;volatile
  6366  002842  828D               	
  6367                           l2317:
  6368  002844                     	bcf	c:(31849/8),(31849)&7	;volatile
  6369  002844  928D               	line	45
  6370                           	
  6371                           l11:
  6372  002846                     	return	;funcret
  6373  002846  0012               	opt stack 0
  6374                           GLOBAL	__end_of_lcd_write
  6375                           	__end_of_lcd_write:
  6376  002848                     	signat	_lcd_write,4217
  6377                           	global	_acende
  6378                           
  6379 ;; *************** function _acende *****************
  6380 ;; Defined at:
  6381 ;;		line 34 in file "Controle.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  quant_pessoa    2    0[BANK0 ] int 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;		None
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  1    wreg      void 
  6388 ;; Registers used:
  6389 ;;		wreg, status,2, status,0
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6395 ;;      Params:         0       2       0       0       0       0       0
  6396 ;;      Locals:         0       0       0       0       0       0       0
  6397 ;;      Temps:          0       0       0       0       0       0       0
  6398 ;;      Totals:         0       2       0       0       0       0       0
  6399 ;;Total ram usage:        2 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:   12
  6402 ;; This function calls:
  6403 ;;		Nothing
  6404 ;; This function is called by:
  6405 ;;		_atualza_entrada
  6406 ;;		_main
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           psect	text22,class=CODE,space=0,reloc=2,group=0
  6410                           	file	"Controle.c"
  6411                           	line	34
  6412                           global __ptext22
  6413                           __ptext22:
  6414  002434                     psect	text22
  6415                           	file	"Controle.c"
  6416                           	line	34
  6417                           	global	__size_of_acende
  6418                           	__size_of_acende	equ	__end_of_acende-_acende
  6419  0000                     	
  6420                           _acende:
  6421  002434                     ;incstack = 0
  6422                           	opt	stack 16
  6423                           	line	36
  6424                           	
  6425                           l2567:
  6426  002434                     ;Controle.c: 36:     if(quant_pessoas == 0)
  6427                           	movlb	0	; () banked
  6428  002434  0100               	movf	((acende@quant_pessoas))&0ffh,w
  6429  002436  5180               iorwf	((acende@quant_pessoas+1))&0ffh,w
  6430  002438  1181               	btfss	status,2
  6431  00243A  A4D8               	goto	u2221
  6432  00243C  EF22  F012         	goto	u2220
  6433  002440  EF24  F012         
  6434                           u2221:
  6435  002444                     	goto	l109
  6436  002444  EF28  F012         u2220:
  6437  002448                     	line	39
  6438                           	
  6439                           l2569:; BSR set to: 0
  6440  002448                     
  6441                           ;Controle.c: 37:     {;Controle.c: 39:         PORTBbits.RB7 = 0;
  6442                           	bcf	((c:3969)),c,7	;volatile
  6443  002448  9E81               	line	40
  6444                           ;Controle.c: 40:         PORTBbits.RB6 = 0;
  6445                           	bcf	((c:3969)),c,6	;volatile
  6446  00244A  9C81               	line	41
  6447                           ;Controle.c: 41:         PORTBbits.RB5 = 0;
  6448                           	bcf	((c:3969)),c,5	;volatile
  6449  00244C  9A81               	line	42
  6450                           ;Controle.c: 42:         PORTBbits.RB0 = 0;
  6451                           	bcf	((c:3969)),c,0	;volatile
  6452  00244E  9081               	line	43
  6453                           ;Controle.c: 44:     if(quant_pessoas > 0 && quant_pessoas <= 100*0,25)
  6454                           	
  6455                           l109:; BSR set to: 0
  6456  002450                     
  6457                           	line	47
  6458                           ;Controle.c: 45:     {;Controle.c: 47:         PORTBbits.RB7 = 1;
  6459                           	bsf	((c:3969)),c,7	;volatile
  6460  002450  8E81               	line	48
  6461                           ;Controle.c: 49:     if(quant_pessoas > 100*0,25 && quant_pessoas <= 100*0,5)
  6462                           	
  6463                           l110:; BSR set to: 0
  6464  002452                     
  6465                           	line	52
  6466                           ;Controle.c: 50:     {;Controle.c: 52:         PORTBbits.RB7 = 1;
  6467                           	bsf	((c:3969)),c,7	;volatile
  6468  002452  8E81               	line	53
  6469                           ;Controle.c: 53:         PORTBbits.RB6 = 1;
  6470                           	bsf	((c:3969)),c,6	;volatile
  6471  002454  8C81               	line	54
  6472                           ;Controle.c: 55:     if(quant_pessoas > 100*0,5 && quant_pessoas <= 100*0,75)
  6473                           	
  6474                           l111:; BSR set to: 0
  6475  002456                     
  6476                           	line	58
  6477                           ;Controle.c: 56:     {;Controle.c: 58:         PORTBbits.RB7 = 1;
  6478                           	bsf	((c:3969)),c,7	;volatile
  6479  002456  8E81               	line	59
  6480                           ;Controle.c: 59:         PORTBbits.RB6 = 1;
  6481                           	bsf	((c:3969)),c,6	;volatile
  6482  002458  8C81               	line	60
  6483                           ;Controle.c: 60:         PORTBbits.RB5 = 1;
  6484                           	bsf	((c:3969)),c,5	;volatile
  6485  00245A  8A81               	goto	l2571
  6486  00245C  EF30  F012         	line	61
  6487                           ;Controle.c: 62:     if(quant_pessoas > 100*0,75 && quant_pessoas <= 100)
  6488                           	
  6489                           l112:; BSR set to: 0
  6490  002460                     
  6491                           	line	62
  6492                           	
  6493                           l2571:; BSR set to: 0
  6494  002460                     
  6495                           	btfsc	((acende@quant_pessoas+1))&0ffh,7
  6496  002460  BF81               	goto	u2230
  6497  002462  EF3E  F012         	movf	((acende@quant_pessoas+1))&0ffh,w
  6498  002466  5181               	bnz	u2231
  6499  002468  E107               	movlw	101
  6500  00246A  0E65               	subwf	 ((acende@quant_pessoas))&0ffh,w
  6501  00246C  5D80               	btfsc	status,0
  6502  00246E  B0D8               	goto	u2231
  6503  002470  EF3C  F012         	goto	u2230
  6504  002474  EF3E  F012         
  6505                           u2231:
  6506  002478                     	goto	l114
  6507  002478  EF44  F012         u2230:
  6508  00247C                     	line	65
  6509                           	
  6510                           l2573:; BSR set to: 0
  6511  00247C                     
  6512                           ;Controle.c: 63:     {;Controle.c: 65:         PORTBbits.RB7 = 1;
  6513                           	bsf	((c:3969)),c,7	;volatile
  6514  00247C  8E81               	line	66
  6515                           ;Controle.c: 66:         PORTBbits.RB6 = 1;
  6516                           	bsf	((c:3969)),c,6	;volatile
  6517  00247E  8C81               	line	67
  6518                           ;Controle.c: 67:         PORTBbits.RB5 = 1;
  6519                           	bsf	((c:3969)),c,5	;volatile
  6520  002480  8A81               	line	68
  6521                           ;Controle.c: 68:         PORTBbits.RB0 = 1;
  6522                           	bsf	((c:3969)),c,0	;volatile
  6523  002482  8081               	goto	l114
  6524  002484  EF44  F012         	line	69
  6525                           ;Controle.c: 69:     }
  6526                           	
  6527                           l113:; BSR set to: 0
  6528  002488                     
  6529                           	line	70
  6530                           	
  6531                           l114:; BSR set to: 0
  6532  002488                     
  6533                           	return	;funcret
  6534  002488  0012               	opt stack 0
  6535                           GLOBAL	__end_of_acende
  6536                           	__end_of_acende:
  6537  00248A                     	signat	_acende,4217
  6538                           	global	_gira_anti_horario
  6539                           
  6540 ;; *************** function _gira_anti_horario *****************
  6541 ;; Defined at:
  6542 ;;		line 168 in file "Controle.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;		None
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;		None
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      void 
  6549 ;; Registers used:
  6550 ;;		wreg, status,2, status,0
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6556 ;;      Params:         0       0       0       0       0       0       0
  6557 ;;      Locals:         0       0       0       0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0
  6559 ;;      Totals:         0       0       0       0       0       0       0
  6560 ;;Total ram usage:        0 bytes
  6561 ;; Hardware stack levels used:    1
  6562 ;; Hardware stack levels required when called:   12
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_main
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           psect	text23,class=CODE,space=0,reloc=2,group=0
  6570                           	line	168
  6571                           global __ptext23
  6572                           __ptext23:
  6573  0026DC                     psect	text23
  6574                           	file	"Controle.c"
  6575                           	line	168
  6576                           	global	__size_of_gira_anti_horario
  6577                           	__size_of_gira_anti_horario	equ	__end_of_gira_anti_horario-_gira_anti_horario
  6578  0000                     	
  6579                           _gira_anti_horario:; BSR set to: 0
  6580  0026DC                     
  6581                           ;incstack = 0
  6582                           	opt	stack 18
  6583                           	line	174
  6584                           	
  6585                           l2757:
  6586  0026DC                     ;Controle.c: 174:     if(estado == 1 && quant_pessoas != 100)
  6587                           	movlb	0	; () banked
  6588  0026DC  0100               		decf	((_estado))&0ffh,w
  6589  0026DE  05F9               iorwf	((_estado+1))&0ffh,w
  6590  0026E0  11FA               	btfss	status,2
  6591  0026E2  A4D8               	goto	u2341
  6592  0026E4  EF76  F013         	goto	u2340
  6593  0026E8  EF78  F013         
  6594                           u2341:
  6595  0026EC                     	goto	l139
  6596  0026EC  EF88  F013         u2340:
  6597  0026F0                     	
  6598                           l2759:; BSR set to: 0
  6599  0026F0                     
  6600                           		movlw	100
  6601  0026F0  0E64               	xorwf	((_quant_pessoas))&0ffh,w
  6602  0026F2  19FB               iorwf	((_quant_pessoas+1))&0ffh,w
  6603  0026F4  11FC               	btfsc	status,2
  6604  0026F6  B4D8               	goto	u2351
  6605  0026F8  EF80  F013         	goto	u2350
  6606  0026FC  EF82  F013         
  6607                           u2351:
  6608  002700                     	goto	l139
  6609  002700  EF88  F013         u2350:
  6610  002704                     	line	176
  6611                           	
  6612                           l2761:; BSR set to: 0
  6613  002704                     
  6614                           ;Controle.c: 175:     {;Controle.c: 176:         estado = 0;
  6615                           	movlw	high(0)
  6616  002704  0E00               	movwf	((_estado+1))&0ffh
  6617  002706  6FFA               	movlw	low(0)
  6618  002708  0E00               	movwf	((_estado))&0ffh
  6619  00270A  6FF9               	goto	l139
  6620  00270C  EF88  F013         	line	177
  6621                           ;Controle.c: 177:     }
  6622                           	
  6623                           l138:; BSR set to: 0
  6624  002710                     
  6625                           	line	178
  6626                           	
  6627                           l139:; BSR set to: 0
  6628  002710                     
  6629                           	return	;funcret
  6630  002710  0012               	opt stack 0
  6631                           GLOBAL	__end_of_gira_anti_horario
  6632                           	__end_of_gira_anti_horario:
  6633  002712                     	signat	_gira_anti_horario,89
  6634                           	global	_config
  6635                           
  6636 ;; *************** function _config *****************
  6637 ;; Defined at:
  6638 ;;		line 72 in file "./configura.h"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;		None
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  1    wreg      void 
  6645 ;; Registers used:
  6646 ;;		wreg, status,2
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6652 ;;      Params:         0       0       0       0       0       0       0
  6653 ;;      Locals:         0       0       0       0       0       0       0
  6654 ;;      Temps:          0       0       0       0       0       0       0
  6655 ;;      Totals:         0       0       0       0       0       0       0
  6656 ;;Total ram usage:        0 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:   12
  6659 ;; This function calls:
  6660 ;;		Nothing
  6661 ;; This function is called by:
  6662 ;;		_main
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           psect	text24,class=CODE,space=0,reloc=2,group=0
  6666                           	file	"./configura.h"
  6667                           	line	72
  6668                           global __ptext24
  6669                           __ptext24:
  6670  00269A                     psect	text24
  6671                           	file	"./configura.h"
  6672                           	line	72
  6673                           	global	__size_of_config
  6674                           	__size_of_config	equ	__end_of_config-_config
  6675  0000                     	
  6676                           _config:; BSR set to: 0
  6677  00269A                     
  6678                           ;incstack = 0
  6679                           	opt	stack 18
  6680                           	line	74
  6681                           	
  6682                           l2679:
  6683  00269A                     	movlw	low(0DFh)
  6684  00269A  0EDF               	movwf	((c:3986)),c	;volatile
  6685  00269C  6E92               	line	75
  6686                           	movlw	low(0)
  6687  00269E  0E00               	movwf	((c:3987)),c	;volatile
  6688  0026A0  6E93               	line	76
  6689                           	
  6690                           l2681:
  6691  0026A2                     	setf	((c:3988)),c	;volatile
  6692  0026A2  6894               	line	77
  6693                           	movlw	low(0)
  6694  0026A4  0E00               	movwf	((c:3989)),c	;volatile
  6695  0026A6  6E95               	line	78
  6696                           	movlw	low(0Ch)
  6697  0026A8  0E0C               	movwf	((c:3990)),c	;volatile
  6698  0026AA  6E96               	line	79
  6699                           	movlw	low(063h)
  6700  0026AC  0E63               	movwf	((c:4051)),c	;volatile
  6701  0026AE  6ED3               	line	80
  6702                           	
  6703                           l2683:
  6704  0026B0                     	bsf	c:(32391/8),(32391)&7	;volatile
  6705  0026B0  8ED0               	line	81
  6706                           	
  6707                           l2685:
  6708  0026B2                     	bsf	c:(31981/8),(31981)&7	;volatile
  6709  0026B2  8A9D               	line	82
  6710                           	
  6711                           l2687:
  6712  0026B4                     	bsf	c:(31997/8),(31997)&7	;volatile
  6713  0026B4  8A9F               	line	83
  6714                           	movlw	low(0C0h)
  6715  0026B6  0EC0               	movwf	((c:4082)),c	;volatile
  6716  0026B8  6EF2               	line	84
  6717                           	movlw	low(0C3h)
  6718  0026BA  0EC3               	movwf	((c:4053)),c	;volatile
  6719  0026BC  6ED5               	line	85
  6720                           	movlw	low(01h)
  6721  0026BE  0E01               	movwf	((c:4034)),c	;volatile
  6722  0026C0  6EC2               	line	86
  6723                           	movlw	low(0Eh)
  6724  0026C2  0E0E               	movwf	((c:4033)),c	;volatile
  6725  0026C4  6EC1               	line	87
  6726                           	movlw	low(094h)
  6727  0026C6  0E94               	movwf	((c:4032)),c	;volatile
  6728  0026C8  6EC0               	line	88
  6729                           	movlw	low(024h)
  6730  0026CA  0E24               	movwf	((c:4012)),c	;volatile
  6731  0026CC  6EAC               	line	89
  6732                           	movlw	low(090h)
  6733  0026CE  0E90               	movwf	((c:4011)),c	;volatile
  6734  0026D0  6EAB               	line	90
  6735                           	movlw	low(0)
  6736  0026D2  0E00               	movwf	((c:4024)),c	;volatile
  6737  0026D4  6EB8               	line	91
  6738                           	movlw	low(019h)
  6739  0026D6  0E19               	movwf	((c:4015)),c	;volatile
  6740  0026D8  6EAF               	line	93
  6741                           	
  6742                           l96:
  6743  0026DA                     	return	;funcret
  6744  0026DA  0012               	opt stack 0
  6745                           GLOBAL	__end_of_config
  6746                           	__end_of_config:
  6747  0026DC                     	signat	_config,89
  6748                           	global	_tmr
  6749                           
  6750 ;; *************** function _tmr *****************
  6751 ;; Defined at:
  6752 ;;		line 180 in file "Controle.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      void 
  6759 ;; Registers used:
  6760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6766 ;;      Params:         0       0       0       0       0       0       0
  6767 ;;      Locals:         0       0       0       0       0       0       0
  6768 ;;      Temps:          8       0       0       0       0       0       0
  6769 ;;      Totals:         8       0       0       0       0       0       0
  6770 ;;Total ram usage:        8 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:   11
  6773 ;; This function calls:
  6774 ;;		_bloqueada
  6775 ;;		i2_gira_anti_horario
  6776 ;;		i2_gira_horario
  6777 ;; This function is called by:
  6778 ;;		Interrupt level 2
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           psect	intcode,class=CODE,space=0,reloc=2
  6782                           global __pintcode
  6783                           __pintcode:
  6784  000008                     psect	intcode
  6785                           	file	"Controle.c"
  6786                           	line	180
  6787                           	global	__size_of_tmr
  6788                           	__size_of_tmr	equ	__end_of_tmr-_tmr
  6789  0000                     	
  6790                           _tmr:
  6791  000008                     ;incstack = 0
  6792                           	opt	stack 8
  6793                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  6794  000008  8278               	global	int_func
  6795                           	call	int_func,f	;refresh shadow registers
  6796  00000A  EDA6  F00E         psect	intcode_body,class=CODE,space=0,reloc=2
  6797                           global __pintcode_body
  6798                           __pintcode_body:
  6799  001D4C                     int_func:
  6800  001D4C                     
  6801                           	pop	; remove dummy address from shadow register refresh
  6802  001D4C  0006               	movff	fsr1l+0,??_tmr+0
  6803  001D4E  CFE1 F06E          	movff	fsr1h+0,??_tmr+1
  6804  001D52  CFE2 F06F          	movff	fsr2l+0,??_tmr+2
  6805  001D56  CFD9 F070          	movff	fsr2h+0,??_tmr+3
  6806  001D5A  CFDA F071          	movff	tblptrl+0,??_tmr+4
  6807  001D5E  CFF6 F072          	movff	tblptrh+0,??_tmr+5
  6808  001D62  CFF7 F073          	movff	tblptru+0,??_tmr+6
  6809  001D66  CFF8 F074          	movff	tablat+0,??_tmr+7
  6810  001D6A  CFF5 F075          	line	182
  6811                           	
  6812                           i2l2777:
  6813  001D6E                     ;Controle.c: 182:     if(RCIF)
  6814                           	btfss	c:(31989/8),(31989)&7	;volatile
  6815  001D6E  AA9E               	goto	i2u239_41
  6816  001D70  EFBC  F00E         	goto	i2u239_40
  6817  001D74  EFBE  F00E         i2u239_41:
  6818  001D78                     	goto	i2l150
  6819  001D78  EF04  F00F         i2u239_40:
  6820  001D7C                     	line	184
  6821                           	
  6822                           i2l2779:
  6823  001D7C                     ;Controle.c: 183:     {;Controle.c: 184:        RCIF = 0;
  6824                           	bcf	c:(31989/8),(31989)&7	;volatile
  6825  001D7C  9A9E               	line	185
  6826                           	
  6827                           i2l2781:
  6828  001D7E                     ;Controle.c: 185:        if(RCREG == 3){
  6829                           		movlw	3
  6830  001D7E  0E03               	xorwf	((c:4014)),c,w	;volatile
  6831  001D80  18AE               	btfss	status,2
  6832  001D82  A4D8               	goto	i2u240_41
  6833  001D84  EFC6  F00E         	goto	i2u240_40
  6834  001D88  EFC8  F00E         
  6835                           i2u240_41:
  6836  001D8C                     	goto	i2l2787
  6837  001D8C  EFD6  F00E         i2u240_40:
  6838  001D90                     	line	186
  6839                           	
  6840                           i2l2783:
  6841  001D90                     ;Controle.c: 186:            gira_anti_horario();
  6842                           	call	i2_gira_anti_horario	;wreg free
  6843  001D90  EC89  F013         	line	187
  6844                           	
  6845                           i2l2785:
  6846  001D94                     ;Controle.c: 187:            bloqueada(3, quant_pessoas);
  6847                           	movlw	high(03h)
  6848  001D94  0E00               	movwf	((c:bloqueada@estado+1)),c
  6849  001D96  6E69               	movlw	low(03h)
  6850  001D98  0E03               	movwf	((c:bloqueada@estado)),c
  6851  001D9A  6E68               	movff	(_quant_pessoas),(c:bloqueada@quant_pessoas)
  6852  001D9C  C0FB  F06A         	movff	(_quant_pessoas+1),(c:bloqueada@quant_pessoas+1)
  6853  001DA0  C0FC  F06B         	call	_bloqueada	;wreg free
  6854  001DA4  EC43  F00C         	line	188
  6855                           ;Controle.c: 188:        }
  6856                           	goto	i2l150
  6857  001DA8  EF04  F00F         	line	189
  6858                           ;Controle.c: 189:        else if(RCREG == 4){
  6859                           	
  6860                           i2l145:
  6861  001DAC                     	
  6862                           i2l2787:
  6863  001DAC                     		movlw	4
  6864  001DAC  0E04               	xorwf	((c:4014)),c,w	;volatile
  6865  001DAE  18AE               	btfss	status,2
  6866  001DB0  A4D8               	goto	i2u241_41
  6867  001DB2  EFDD  F00E         	goto	i2u241_40
  6868  001DB6  EFDF  F00E         
  6869                           i2u241_41:
  6870  001DBA                     	goto	i2l2791
  6871  001DBA  EFED  F00E         i2u241_40:
  6872  001DBE                     	line	190
  6873                           	
  6874                           i2l2789:
  6875  001DBE                     ;Controle.c: 190:            gira_horario();
  6876                           	call	i2_gira_horario	;wreg free
  6877  001DBE  ECF0  F013         	line	191
  6878                           ;Controle.c: 191:            bloqueada(4, quant_pessoas);
  6879                           	movlw	high(04h)
  6880  001DC2  0E00               	movwf	((c:bloqueada@estado+1)),c
  6881  001DC4  6E69               	movlw	low(04h)
  6882  001DC6  0E04               	movwf	((c:bloqueada@estado)),c
  6883  001DC8  6E68               	movff	(_quant_pessoas),(c:bloqueada@quant_pessoas)
  6884  001DCA  C0FB  F06A         	movff	(_quant_pessoas+1),(c:bloqueada@quant_pessoas+1)
  6885  001DCE  C0FC  F06B         	call	_bloqueada	;wreg free
  6886  001DD2  EC43  F00C         	line	192
  6887                           ;Controle.c: 192:        }
  6888                           	goto	i2l150
  6889  001DD6  EF04  F00F         	line	193
  6890                           ;Controle.c: 193:        else if(quant_pessoas == 100){
  6891                           	
  6892                           i2l147:
  6893  001DDA                     	
  6894                           i2l2791:
  6895  001DDA                     		movlw	100
  6896  001DDA  0E64               	movlb	0	; () banked
  6897  001DDC  0100               	xorwf	((_quant_pessoas))&0ffh,w
  6898  001DDE  19FB               iorwf	((_quant_pessoas+1))&0ffh,w
  6899  001DE0  11FC               	btfss	status,2
  6900  001DE2  A4D8               	goto	i2u242_41
  6901  001DE4  EFF6  F00E         	goto	i2u242_40
  6902  001DE8  EFF8  F00E         
  6903                           i2u242_41:
  6904  001DEC                     	goto	i2l150
  6905  001DEC  EF04  F00F         i2u242_40:
  6906  001DF0                     	line	194
  6907                           	
  6908                           i2l2793:; BSR set to: 0
  6909  001DF0                     
  6910                           ;Controle.c: 194:            estado = 1;
  6911                           	movlw	high(01h)
  6912  001DF0  0E00               	movwf	((_estado+1))&0ffh
  6913  001DF2  6FFA               	movlw	low(01h)
  6914  001DF4  0E01               	movwf	((_estado))&0ffh
  6915  001DF6  6FF9               	goto	i2l150
  6916  001DF8  EF04  F00F         	line	195
  6917                           ;Controle.c: 195:        }
  6918                           	
  6919                           i2l149:; BSR set to: 0
  6920  001DFC                     
  6921                           	goto	i2l150
  6922  001DFC  EF04  F00F         	
  6923                           i2l148:; BSR set to: 0
  6924  001E00                     
  6925                           	goto	i2l150
  6926  001E00  EF04  F00F         	
  6927                           i2l146:; BSR set to: 0
  6928  001E04                     
  6929                           	goto	i2l150
  6930  001E04  EF04  F00F         	line	196
  6931                           ;Controle.c: 196:  }
  6932                           	
  6933                           i2l144:; BSR set to: 0
  6934  001E08                     
  6935                           	line	197
  6936                           	
  6937                           i2l150:
  6938  001E08                     	movff	??_tmr+7,tablat+0
  6939  001E08  C075  FFF5         	movff	??_tmr+6,tblptru+0
  6940  001E0C  C074  FFF8         	movff	??_tmr+5,tblptrh+0
  6941  001E10  C073  FFF7         	movff	??_tmr+4,tblptrl+0
  6942  001E14  C072  FFF6         	movff	??_tmr+3,fsr2h+0
  6943  001E18  C071  FFDA         	movff	??_tmr+2,fsr2l+0
  6944  001E1C  C070  FFD9         	movff	??_tmr+1,fsr1h+0
  6945  001E20  C06F  FFE2         	movff	??_tmr+0,fsr1l+0
  6946  001E24  C06E  FFE1         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  6947  001E28  9278               	retfie f
  6948  001E2A  0011               	opt stack 0
  6949                           GLOBAL	__end_of_tmr
  6950                           	__end_of_tmr:
  6951  001E2C                     	signat	_tmr,89
  6952                           	global	i2_gira_horario
  6953                           
  6954 ;; *************** function i2_gira_horario *****************
  6955 ;; Defined at:
  6956 ;;		line 111 in file "Controle.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;		None
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;		None
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  1    wreg      void 
  6963 ;; Registers used:
  6964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6970 ;;      Params:         0       0       0       0       0       0       0
  6971 ;;      Locals:         0       0       0       0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0
  6973 ;;      Totals:         0       0       0       0       0       0       0
  6974 ;;Total ram usage:        0 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:   10
  6977 ;; This function calls:
  6978 ;;		i2_atualza_entrada
  6979 ;; This function is called by:
  6980 ;;		_tmr
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           psect	text26,class=CODE,space=0,reloc=2,group=0
  6984                           	line	111
  6985                           global __ptext26
  6986                           __ptext26:
  6987  0027E0                     psect	text26
  6988                           	file	"Controle.c"
  6989                           	line	111
  6990                           	global	__size_ofi2_gira_horario
  6991                           	__size_ofi2_gira_horario	equ	__end_ofi2_gira_horario-i2_gira_horario
  6992  0000                     	
  6993                           i2_gira_horario:
  6994  0027E0                     ;incstack = 0
  6995                           	opt	stack 8
  6996                           	line	113
  6997                           	
  6998                           i2l2763:
  6999  0027E0                     ;Controle.c: 113:     if(estado != 1)
  7000                           	movlb	0	; () banked
  7001  0027E0  0100               		decf	((_estado))&0ffh,w
  7002  0027E2  05F9               iorwf	((_estado+1))&0ffh,w
  7003  0027E4  11FA               	btfsc	status,2
  7004  0027E6  B4D8               	goto	i2u236_41
  7005  0027E8  EFF8  F013         	goto	i2u236_40
  7006  0027EC  EFFA  F013         
  7007                           i2u236_41:
  7008  0027F0                     	goto	i2l126
  7009  0027F0  EFFE  F013         i2u236_40:
  7010  0027F4                     	line	118
  7011                           	
  7012                           i2l2765:; BSR set to: 0
  7013  0027F4                     
  7014                           ;Controle.c: 114:     {;Controle.c: 118:         atualza_entrada();
  7015                           	call	i2_atualza_entrada	;wreg free
  7016  0027F4  ECCD  F013         	goto	i2l126
  7017  0027F8  EFFE  F013         	line	119
  7018                           ;Controle.c: 119:     }
  7019                           	
  7020                           i2l125:
  7021  0027FC                     	line	120
  7022                           	
  7023                           i2l126:
  7024  0027FC                     	return	;funcret
  7025  0027FC  0012               	opt stack 0
  7026                           GLOBAL	__end_ofi2_gira_horario
  7027                           	__end_ofi2_gira_horario:
  7028  0027FE                     	signat	i2_gira_horario,89
  7029                           	global	i2_atualza_entrada
  7030                           
  7031 ;; *************** function i2_atualza_entrada *****************
  7032 ;; Defined at:
  7033 ;;		line 102 in file "Controle.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;		None
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;		None
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      void 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7047 ;;      Params:         0       0       0       0       0       0       0
  7048 ;;      Locals:         0       0       0       0       0       0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0
  7050 ;;      Totals:         0       0       0       0       0       0       0
  7051 ;;Total ram usage:        0 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    9
  7054 ;; This function calls:
  7055 ;;		i2_acende
  7056 ;;		i2_mostra
  7057 ;; This function is called by:
  7058 ;;		i2_gira_horario
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           psect	text27,class=CODE,space=0,reloc=2,group=0
  7062                           	line	102
  7063                           global __ptext27
  7064                           __ptext27:
  7065  00279A                     psect	text27
  7066                           	file	"Controle.c"
  7067                           	line	102
  7068                           	global	__size_ofi2_atualza_entrada
  7069                           	__size_ofi2_atualza_entrada	equ	__end_ofi2_atualza_entrada-i2_atualza_entrada
  7070  0000                     	
  7071                           i2_atualza_entrada:
  7072  00279A                     ;incstack = 0
  7073                           	opt	stack 8
  7074                           	line	105
  7075                           	
  7076                           i2l2673:
  7077  00279A                     ;Controle.c: 105:     quant_pessoas = quant_pessoas + 1;
  7078                           	movlw	low(01h)
  7079  00279A  0E01               	movlb	0	; () banked
  7080  00279C  0100               	addwf	((_quant_pessoas))&0ffh,w
  7081  00279E  25FB               	movwf	((_quant_pessoas))&0ffh
  7082  0027A0  6FFB               	movlw	high(01h)
  7083  0027A2  0E00               	addwfc	((_quant_pessoas+1))&0ffh,w
  7084  0027A4  21FC               	movwf	1+((_quant_pessoas))&0ffh
  7085  0027A6  6FFC               	line	106
  7086                           	
  7087                           i2l2675:; BSR set to: 0
  7088  0027A8                     
  7089                           ;Controle.c: 106:     mostra(quant_pessoas);
  7090                           	movff	(_quant_pessoas),(c:i2mostra@quant_pessoas)
  7091  0027A8  C0FB  F068         	movff	(_quant_pessoas+1),(c:i2mostra@quant_pessoas+1)
  7092  0027AC  C0FC  F069         	call	i2_mostra	;wreg free
  7093  0027B0  EC9E  F00D         	line	108
  7094                           	
  7095                           i2l2677:
  7096  0027B4                     ;Controle.c: 108:     acende(quant_pessoas);
  7097                           	movff	(_quant_pessoas),(c:i2acende@quant_pessoas)
  7098  0027B4  C0FB  F001         	movff	(_quant_pessoas+1),(c:i2acende@quant_pessoas+1)
  7099  0027B8  C0FC  F002         	call	i2_acende	;wreg free
  7100  0027BC  EC45  F012         	line	109
  7101                           	
  7102                           i2l122:
  7103  0027C0                     	return	;funcret
  7104  0027C0  0012               	opt stack 0
  7105                           GLOBAL	__end_ofi2_atualza_entrada
  7106                           	__end_ofi2_atualza_entrada:
  7107  0027C2                     	signat	i2_atualza_entrada,89
  7108                           	global	i2_mostra
  7109                           
  7110 ;; *************** function i2_mostra *****************
  7111 ;; Defined at:
  7112 ;;		line 72 in file "Controle.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;  quant_pessoa    2  103[COMRAM] int 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  1    wreg      void 
  7119 ;; Registers used:
  7120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7126 ;;      Params:         2       0       0       0       0       0       0
  7127 ;;      Locals:         0       0       0       0       0       0       0
  7128 ;;      Temps:          2       0       0       0       0       0       0
  7129 ;;      Totals:         4       0       0       0       0       0       0
  7130 ;;Total ram usage:        4 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    8
  7133 ;; This function calls:
  7134 ;;		i2_lcd_clear
  7135 ;;		i2_lcd_goto
  7136 ;;		i2_lcd_init
  7137 ;;		i2_lcd_puts
  7138 ;;		i2_sprintf
  7139 ;; This function is called by:
  7140 ;;		i2_atualza_entrada
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           psect	text28,class=CODE,space=0,reloc=2,group=0
  7144                           	line	72
  7145                           global __ptext28
  7146                           __ptext28:
  7147  001B3C                     psect	text28
  7148                           	file	"Controle.c"
  7149                           	line	72
  7150                           	global	__size_ofi2_mostra
  7151                           	__size_ofi2_mostra	equ	__end_ofi2_mostra-i2_mostra
  7152  0000                     	
  7153                           i2_mostra:
  7154  001B3C                     ;incstack = 0
  7155                           	opt	stack 8
  7156                           	line	74
  7157                           	
  7158                           i2l2625:
  7159  001B3C                     ;Controle.c: 74:     lcd_init();
  7160                           	call	i2_lcd_init	;wreg free
  7161  001B3C  EC2F  F011         	line	76
  7162                           	
  7163                           i2l2627:
  7164  001B40                     ;Controle.c: 76:     if(num_mostra > quant_pessoas)
  7165                           	movlb	0	; () banked
  7166  001B40  0100               		movf	((_num_mostra))&0ffh,w
  7167  001B42  51F7               	subwf	((c:i2mostra@quant_pessoas)),c,w
  7168  001B44  5C68               	movf	((c:i2mostra@quant_pessoas+1)),c,w
  7169  001B46  5069               	xorlw	80h
  7170  001B48  0A80               	movwf	(??i2_mostra+0+0)&0ffh,c
  7171  001B4A  6E6A               	movf	((_num_mostra+1))&0ffh,w
  7172  001B4C  51F8               	xorlw	80h
  7173  001B4E  0A80               	subwfb	(??i2_mostra+0+0)&0ffh,c,w
  7174  001B50  586A               	btfsc	status,0
  7175  001B52  B0D8               	goto	i2u228_41
  7176  001B54  EFAE  F00D         	goto	i2u228_40
  7177  001B58  EFB0  F00D         
  7178                           i2u228_41:
  7179  001B5C                     	goto	i2l2647
  7180  001B5C  EFEA  F00D         i2u228_40:
  7181  001B60                     	line	78
  7182                           	
  7183                           i2l2629:; BSR set to: 0
  7184  001B60                     
  7185                           ;Controle.c: 77:     {;Controle.c: 78:         _delay((unsigned long)((5)*(4000000/4000.
                                 0)));
  7186                           	opt asmopt_push
  7187                           opt asmopt_off
  7188                           movlw	7
  7189  001B60  0E07               movwf	(??i2_mostra+0+0)&0ffh,c,f
  7190  001B62  6E6A               	movlw	125
  7191  001B64  0E7D               i2u275_47:
  7192  001B66                     decfsz	wreg,f
  7193  001B66  2EE8               	bra	i2u275_47
  7194  001B68  D7FE               	decfsz	(??i2_mostra+0+0)&0ffh,c,f
  7195  001B6A  2E6A               	bra	i2u275_47
  7196  001B6C  D7FC               	nop
  7197  001B6E  F000               opt asmopt_pop
  7198                           
  7199                           	line	79
  7200                           	
  7201                           i2l2631:
  7202  001B70                     ;Controle.c: 79:         lcd_clear();
  7203                           	call	i2_lcd_clear	;wreg free
  7204  001B70  EC0D  F014         	line	80
  7205                           	
  7206                           i2l2633:
  7207  001B74                     ;Controle.c: 80:         lcd_goto(3);
  7208                           	movlw	(03h)&0ffh
  7209  001B74  0E03               	
  7210                           	call	i2_lcd_goto
  7211  001B76  EC37  F014         	line	81
  7212                           	
  7213                           i2l2635:
  7214  001B7A                     ;Controle.c: 81:         lcd_puts("Entrando");
  7215                           		movlw	low(STR_1)
  7216  001B7A  0E3B               	movwf	((c:i2lcd_puts@s)),c
  7217  001B7C  6E02               	movlw	high(STR_1)
  7218  001B7E  0E06               	movwf	((c:i2lcd_puts@s+1)),c
  7219  001B80  6E03               
  7220                           	call	i2_lcd_puts	;wreg free
  7221  001B82  ECC8  F010         	line	82
  7222                           	
  7223                           i2l2637:
  7224  001B86                     ;Controle.c: 82:         _delay((unsigned long)((5000)*(4000000/4000.0)));
  7225                           	opt asmopt_push
  7226                           opt asmopt_off
  7227                           movlw  26
  7228  001B86  0E1A               movwf	(??i2_mostra+0+0+1)&0ffh,c,f
  7229  001B88  6E6B               movlw	94
  7230  001B8A  0E5E               movwf	(??i2_mostra+0+0)&0ffh,c,f
  7231  001B8C  6E6A               	movlw	110
  7232  001B8E  0E6E               i2u276_47:
  7233  001B90                     decfsz	wreg,f
  7234  001B90  2EE8               	bra	i2u276_47
  7235  001B92  D7FE               	decfsz	(??i2_mostra+0+0)&0ffh,c,f
  7236  001B94  2E6A               	bra	i2u276_47
  7237  001B96  D7FC               	decfsz	(??i2_mostra+0+0+1)&0ffh,c,f
  7238  001B98  2E6B               	bra	i2u276_47
  7239  001B9A  D7FA               	nop2
  7240  001B9C  D000               opt asmopt_pop
  7241                           
  7242                           	line	83
  7243                           	
  7244                           i2l2639:
  7245  001B9E                     ;Controle.c: 83:         lcd_clear();
  7246                           	call	i2_lcd_clear	;wreg free
  7247  001B9E  EC0D  F014         	line	84
  7248                           	
  7249                           i2l2641:
  7250  001BA2                     ;Controle.c: 84:         lcd_goto(3);
  7251                           	movlw	(03h)&0ffh
  7252  001BA2  0E03               	
  7253                           	call	i2_lcd_goto
  7254  001BA4  EC37  F014         	line	85
  7255                           	
  7256                           i2l2643:
  7257  001BA8                     ;Controle.c: 85:         sprintf(num, "%d", num_mostra);
  7258                           		movlw	low(_num)
  7259  001BA8  0EFD               	movwf	((c:i2sprintf@s)),c
  7260  001BAA  6E58               	movlw	high(_num)
  7261  001BAC  0E00               	movwf	((c:i2sprintf@s+1)),c
  7262  001BAE  6E59               
  7263                           		movlw	low(STR_2)
  7264  001BB0  0E4B               	movwf	((c:i2sprintf@fmt)),c
  7265  001BB2  6E5A               	movlw	high(STR_2)
  7266  001BB4  0E06               	movwf	((c:i2sprintf@fmt+1)),c
  7267  001BB6  6E5B               
  7268                           	movff	(_num_mostra),0+((c:?i2_sprintf)+04h)
  7269  001BB8  C0F7  F05C         	movff	(_num_mostra+1),1+((c:?i2_sprintf)+04h)
  7270  001BBC  C0F8  F05D         	call	i2_sprintf	;wreg free
  7271  001BC0  ECC2  F011         	line	86
  7272                           	
  7273                           i2l2645:
  7274  001BC4                     ;Controle.c: 86:         lcd_puts(num);
  7275                           		movlw	low(_num)
  7276  001BC4  0EFD               	movwf	((c:i2lcd_puts@s)),c
  7277  001BC6  6E02               	movlw	high(_num)
  7278  001BC8  0E00               	movwf	((c:i2lcd_puts@s+1)),c
  7279  001BCA  6E03               
  7280                           	call	i2_lcd_puts	;wreg free
  7281  001BCC  ECC8  F010         	goto	i2l2647
  7282  001BD0  EFEA  F00D         	line	87
  7283                           ;Controle.c: 87:     }
  7284                           	
  7285                           i2l117:
  7286  001BD4                     	line	88
  7287                           	
  7288                           i2l2647:
  7289  001BD4                     ;Controle.c: 88:     if(num_mostra < quant_pessoas)
  7290                           		movf	((c:i2mostra@quant_pessoas)),c,w
  7291  001BD4  5068               	movlb	0	; () banked
  7292  001BD6  0100               	subwf	((_num_mostra))&0ffh,w
  7293  001BD8  5DF7               	movf	((_num_mostra+1))&0ffh,w
  7294  001BDA  51F8               	xorlw	80h
  7295  001BDC  0A80               	movwf	(??i2_mostra+0+0)&0ffh,c
  7296  001BDE  6E6A               	movf	((c:i2mostra@quant_pessoas+1)),c,w
  7297  001BE0  5069               	xorlw	80h
  7298  001BE2  0A80               	subwfb	(??i2_mostra+0+0)&0ffh,c,w
  7299  001BE4  586A               	btfsc	status,0
  7300  001BE6  B0D8               	goto	i2u229_41
  7301  001BE8  EFF8  F00D         	goto	i2u229_40
  7302  001BEC  EFFA  F00D         
  7303                           i2u229_41:
  7304  001BF0                     	goto	i2l119
  7305  001BF0  EF34  F00E         i2u229_40:
  7306  001BF4                     	line	90
  7307                           	
  7308                           i2l2649:; BSR set to: 0
  7309  001BF4                     
  7310                           ;Controle.c: 89:     {;Controle.c: 90:         _delay((unsigned long)((5)*(4000000/4000.
                                 0)));
  7311                           	opt asmopt_push
  7312                           opt asmopt_off
  7313                           movlw	7
  7314  001BF4  0E07               movwf	(??i2_mostra+0+0)&0ffh,c,f
  7315  001BF6  6E6A               	movlw	125
  7316  001BF8  0E7D               i2u277_47:
  7317  001BFA                     decfsz	wreg,f
  7318  001BFA  2EE8               	bra	i2u277_47
  7319  001BFC  D7FE               	decfsz	(??i2_mostra+0+0)&0ffh,c,f
  7320  001BFE  2E6A               	bra	i2u277_47
  7321  001C00  D7FC               	nop
  7322  001C02  F000               opt asmopt_pop
  7323                           
  7324                           	line	91
  7325                           	
  7326                           i2l2651:
  7327  001C04                     ;Controle.c: 91:         lcd_clear();
  7328                           	call	i2_lcd_clear	;wreg free
  7329  001C04  EC0D  F014         	line	92
  7330                           	
  7331                           i2l2653:
  7332  001C08                     ;Controle.c: 92:         lcd_goto(3);
  7333                           	movlw	(03h)&0ffh
  7334  001C08  0E03               	
  7335                           	call	i2_lcd_goto
  7336  001C0A  EC37  F014         	line	93
  7337                           	
  7338                           i2l2655:
  7339  001C0E                     ;Controle.c: 93:         lcd_puts("Saindo");
  7340                           		movlw	low(STR_3)
  7341  001C0E  0E44               	movwf	((c:i2lcd_puts@s)),c
  7342  001C10  6E02               	movlw	high(STR_3)
  7343  001C12  0E06               	movwf	((c:i2lcd_puts@s+1)),c
  7344  001C14  6E03               
  7345                           	call	i2_lcd_puts	;wreg free
  7346  001C16  ECC8  F010         	line	94
  7347                           	
  7348                           i2l2657:
  7349  001C1A                     ;Controle.c: 94:          _delay((unsigned long)((5000)*(4000000/4000.0)));
  7350                           	opt asmopt_push
  7351                           opt asmopt_off
  7352                           movlw  26
  7353  001C1A  0E1A               movwf	(??i2_mostra+0+0+1)&0ffh,c,f
  7354  001C1C  6E6B               movlw	94
  7355  001C1E  0E5E               movwf	(??i2_mostra+0+0)&0ffh,c,f
  7356  001C20  6E6A               	movlw	110
  7357  001C22  0E6E               i2u278_47:
  7358  001C24                     decfsz	wreg,f
  7359  001C24  2EE8               	bra	i2u278_47
  7360  001C26  D7FE               	decfsz	(??i2_mostra+0+0)&0ffh,c,f
  7361  001C28  2E6A               	bra	i2u278_47
  7362  001C2A  D7FC               	decfsz	(??i2_mostra+0+0+1)&0ffh,c,f
  7363  001C2C  2E6B               	bra	i2u278_47
  7364  001C2E  D7FA               	nop2
  7365  001C30  D000               opt asmopt_pop
  7366                           
  7367                           	line	95
  7368                           	
  7369                           i2l2659:
  7370  001C32                     ;Controle.c: 95:         lcd_clear();
  7371                           	call	i2_lcd_clear	;wreg free
  7372  001C32  EC0D  F014         	line	96
  7373                           	
  7374                           i2l2661:
  7375  001C36                     ;Controle.c: 96:         lcd_goto(3);
  7376                           	movlw	(03h)&0ffh
  7377  001C36  0E03               	
  7378                           	call	i2_lcd_goto
  7379  001C38  EC37  F014         	line	97
  7380                           	
  7381                           i2l2663:
  7382  001C3C                     ;Controle.c: 97:         sprintf(num, "%d", num_mostra);
  7383                           		movlw	low(_num)
  7384  001C3C  0EFD               	movwf	((c:i2sprintf@s)),c
  7385  001C3E  6E58               	movlw	high(_num)
  7386  001C40  0E00               	movwf	((c:i2sprintf@s+1)),c
  7387  001C42  6E59               
  7388                           		movlw	low(STR_4)
  7389  001C44  0E4B               	movwf	((c:i2sprintf@fmt)),c
  7390  001C46  6E5A               	movlw	high(STR_4)
  7391  001C48  0E06               	movwf	((c:i2sprintf@fmt+1)),c
  7392  001C4A  6E5B               
  7393                           	movff	(_num_mostra),0+((c:?i2_sprintf)+04h)
  7394  001C4C  C0F7  F05C         	movff	(_num_mostra+1),1+((c:?i2_sprintf)+04h)
  7395  001C50  C0F8  F05D         	call	i2_sprintf	;wreg free
  7396  001C54  ECC2  F011         	line	98
  7397                           	
  7398                           i2l2665:
  7399  001C58                     ;Controle.c: 98:         lcd_puts(num);
  7400                           		movlw	low(_num)
  7401  001C58  0EFD               	movwf	((c:i2lcd_puts@s)),c
  7402  001C5A  6E02               	movlw	high(_num)
  7403  001C5C  0E00               	movwf	((c:i2lcd_puts@s+1)),c
  7404  001C5E  6E03               
  7405                           	call	i2_lcd_puts	;wreg free
  7406  001C60  ECC8  F010         	goto	i2l119
  7407  001C64  EF34  F00E         	line	99
  7408                           ;Controle.c: 99:     }
  7409                           	
  7410                           i2l118:
  7411  001C68                     	line	100
  7412                           	
  7413                           i2l119:
  7414  001C68                     	return	;funcret
  7415  001C68  0012               	opt stack 0
  7416                           GLOBAL	__end_ofi2_mostra
  7417                           	__end_ofi2_mostra:
  7418  001C6A                     	signat	i2_mostra,89
  7419                           	global	i2_lcd_init
  7420                           
  7421 ;; *************** function i2_lcd_init *****************
  7422 ;; Defined at:
  7423 ;;		line 92 in file "lcd.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;		None
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;  lcd_init        1    3[COMRAM] unsigned char 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  1    wreg      void 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7437 ;;      Params:         0       0       0       0       0       0       0
  7438 ;;      Locals:         1       0       0       0       0       0       0
  7439 ;;      Temps:          1       0       0       0       0       0       0
  7440 ;;      Totals:         2       0       0       0       0       0       0
  7441 ;;Total ram usage:        2 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:    2
  7444 ;; This function calls:
  7445 ;;		i2_lcd_clear
  7446 ;;		i2_lcd_write
  7447 ;; This function is called by:
  7448 ;;		i2_mostra
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           psect	text29,class=CODE,space=0,reloc=2,group=0
  7452                           	file	"lcd.c"
  7453                           	line	92
  7454                           global __ptext29
  7455                           __ptext29:
  7456  00225E                     psect	text29
  7457                           	file	"lcd.c"
  7458                           	line	92
  7459                           	global	__size_ofi2_lcd_init
  7460                           	__size_ofi2_lcd_init	equ	__end_ofi2_lcd_init-i2_lcd_init
  7461  0000                     	
  7462                           i2_lcd_init:
  7463  00225E                     ;incstack = 0
  7464                           	opt	stack 13
  7465                           	line	97
  7466                           	
  7467                           i2l2515:
  7468  00225E                     ;lcd.c: 94:  char init_value;;lcd.c: 97:  init_value = 0x03;
  7469                           	movlw	low(03h)
  7470  00225E  0E03               	movwf	((c:i2lcd_init@init_value)),c
  7471  002260  6E04               	line	98
  7472                           	
  7473                           i2l2517:
  7474  002262                     ;lcd.c: 98:  LE0 = 0;
  7475                           	bcf	c:(31848/8),(31848)&7	;volatile
  7476  002262  908D               	line	99
  7477                           	
  7478                           i2l2519:
  7479  002264                     ;lcd.c: 99:  LE1 = 0;
  7480                           	bcf	c:(31849/8),(31849)&7	;volatile
  7481  002264  928D               	line	102
  7482                           	
  7483                           i2l2521:
  7484  002266                     ;lcd.c: 102:  _delay((unsigned long)((15)*(4000000/4000.0)));
  7485                           	opt asmopt_push
  7486                           opt asmopt_off
  7487                           movlw	20
  7488  002266  0E14               movwf	(??i2_lcd_init+0+0)&0ffh,c,f
  7489  002268  6E03               	movlw	122
  7490  00226A  0E7A               i2u279_47:
  7491  00226C                     decfsz	wreg,f
  7492  00226C  2EE8               	bra	i2u279_47
  7493  00226E  D7FE               	decfsz	(??i2_lcd_init+0+0)&0ffh,c,f
  7494  002270  2E03               	bra	i2u279_47
  7495  002272  D7FC               opt asmopt_pop
  7496                           
  7497                           	line	103
  7498                           	
  7499                           i2l2523:
  7500  002274                     ;lcd.c: 103:  PORTD = init_value;
  7501                           	movff	(c:i2lcd_init@init_value),(c:3971)	;volatile
  7502  002274  C004  FF83         	line	104
  7503                           	
  7504                           i2l2525:
  7505  002278                     ;lcd.c: 104:  ((LE1 = 1),(LE1=0));
  7506                           	bsf	c:(31849/8),(31849)&7	;volatile
  7507  002278  828D               	
  7508                           i2l2527:
  7509  00227A                     	bcf	c:(31849/8),(31849)&7	;volatile
  7510  00227A  928D               	line	105
  7511                           	
  7512                           i2l2529:
  7513  00227C                     ;lcd.c: 105:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7514                           	opt asmopt_push
  7515                           opt asmopt_off
  7516                           movlw	7
  7517  00227C  0E07               movwf	(??i2_lcd_init+0+0)&0ffh,c,f
  7518  00227E  6E03               	movlw	125
  7519  002280  0E7D               i2u280_47:
  7520  002282                     decfsz	wreg,f
  7521  002282  2EE8               	bra	i2u280_47
  7522  002284  D7FE               	decfsz	(??i2_lcd_init+0+0)&0ffh,c,f
  7523  002286  2E03               	bra	i2u280_47
  7524  002288  D7FC               	nop
  7525  00228A  F000               opt asmopt_pop
  7526                           
  7527                           	line	106
  7528                           	
  7529                           i2l2531:
  7530  00228C                     ;lcd.c: 106:  ((LE1 = 1),(LE1=0));
  7531                           	bsf	c:(31849/8),(31849)&7	;volatile
  7532  00228C  828D               	
  7533                           i2l2533:
  7534  00228E                     	bcf	c:(31849/8),(31849)&7	;volatile
  7535  00228E  928D               	line	107
  7536                           	
  7537                           i2l2535:
  7538  002290                     ;lcd.c: 107:  _delay((unsigned long)((200)*(4000000/4000000.0)));
  7539                           	opt asmopt_push
  7540                           opt asmopt_off
  7541                           	movlw	66
  7542  002290  0E42               i2u281_47:
  7543  002292                     decfsz	wreg,f
  7544  002292  2EE8               	bra	i2u281_47
  7545  002294  D7FE               	nop2
  7546  002296  D000               opt asmopt_pop
  7547                           
  7548                           	line	108
  7549                           	
  7550                           i2l2537:
  7551  002298                     ;lcd.c: 108:  ((LE1 = 1),(LE1=0));
  7552                           	bsf	c:(31849/8),(31849)&7	;volatile
  7553  002298  828D               	
  7554                           i2l2539:
  7555  00229A                     	bcf	c:(31849/8),(31849)&7	;volatile
  7556  00229A  928D               	line	109
  7557                           	
  7558                           i2l2541:
  7559  00229C                     ;lcd.c: 109:  _delay((unsigned long)((200)*(4000000/4000000.0)));
  7560                           	opt asmopt_push
  7561                           opt asmopt_off
  7562                           	movlw	66
  7563  00229C  0E42               i2u282_47:
  7564  00229E                     decfsz	wreg,f
  7565  00229E  2EE8               	bra	i2u282_47
  7566  0022A0  D7FE               	nop2
  7567  0022A2  D000               opt asmopt_pop
  7568                           
  7569                           	line	110
  7570                           ;lcd.c: 110:  PORTD = 2;
  7571                           	movlw	low(02h)
  7572  0022A4  0E02               	movwf	((c:3971)),c	;volatile
  7573  0022A6  6E83               	line	111
  7574                           	
  7575                           i2l2543:
  7576  0022A8                     ;lcd.c: 111:  ((LE1 = 1),(LE1=0));
  7577                           	bsf	c:(31849/8),(31849)&7	;volatile
  7578  0022A8  828D               	
  7579                           i2l2545:
  7580  0022AA                     	bcf	c:(31849/8),(31849)&7	;volatile
  7581  0022AA  928D               	line	113
  7582                           	
  7583                           i2l2547:
  7584  0022AC                     ;lcd.c: 113:  lcd_write(0x38);
  7585                           	movlw	(038h)&0ffh
  7586  0022AC  0E38               	
  7587                           	call	i2_lcd_write
  7588  0022AE  EC24  F014         	line	114
  7589                           	
  7590                           i2l2549:
  7591  0022B2                     ;lcd.c: 114:  lcd_write(0x06);
  7592                           	movlw	(06h)&0ffh
  7593  0022B2  0E06               	
  7594                           	call	i2_lcd_write
  7595  0022B4  EC24  F014         	line	115
  7596                           	
  7597                           i2l2551:
  7598  0022B8                     ;lcd.c: 115:  lcd_write(0x0C);
  7599                           	movlw	(0Ch)&0ffh
  7600  0022B8  0E0C               	
  7601                           	call	i2_lcd_write
  7602  0022BA  EC24  F014         	line	116
  7603                           	
  7604                           i2l2553:
  7605  0022BE                     ;lcd.c: 116:  lcd_clear();
  7606                           	call	i2_lcd_clear	;wreg free
  7607  0022BE  EC0D  F014         	line	118
  7608                           	
  7609                           i2l29:
  7610  0022C2                     	return	;funcret
  7611  0022C2  0012               	opt stack 0
  7612                           GLOBAL	__end_ofi2_lcd_init
  7613                           	__end_ofi2_lcd_init:
  7614  0022C4                     	signat	i2_lcd_init,89
  7615                           	global	i2_acende
  7616                           
  7617 ;; *************** function i2_acende *****************
  7618 ;; Defined at:
  7619 ;;		line 34 in file "Controle.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;  quant_pessoa    2    0[COMRAM] int 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;		None
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  1    wreg      void 
  7626 ;; Registers used:
  7627 ;;		wreg, status,2, status,0
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7633 ;;      Params:         2       0       0       0       0       0       0
  7634 ;;      Locals:         0       0       0       0       0       0       0
  7635 ;;      Temps:          0       0       0       0       0       0       0
  7636 ;;      Totals:         2       0       0       0       0       0       0
  7637 ;;Total ram usage:        2 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		i2_atualza_entrada
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           psect	text30,class=CODE,space=0,reloc=2,group=0
  7646                           	file	"Controle.c"
  7647                           	line	34
  7648                           global __ptext30
  7649                           __ptext30:
  7650  00248A                     psect	text30
  7651                           	file	"Controle.c"
  7652                           	line	34
  7653                           	global	__size_ofi2_acende
  7654                           	__size_ofi2_acende	equ	__end_ofi2_acende-i2_acende
  7655  0000                     	
  7656                           i2_acende:
  7657  00248A                     ;incstack = 0
  7658                           	opt	stack 16
  7659                           	line	36
  7660                           	
  7661                           i2l2617:
  7662  00248A                     ;Controle.c: 36:     if(quant_pessoas == 0)
  7663                           	movf	((c:i2acende@quant_pessoas)),c,w
  7664  00248A  5001               iorwf	((c:i2acende@quant_pessoas+1)),c,w
  7665  00248C  1002               	btfss	status,2
  7666  00248E  A4D8               	goto	i2u226_41
  7667  002490  EF4C  F012         	goto	i2u226_40
  7668  002494  EF4E  F012         
  7669                           i2u226_41:
  7670  002498                     	goto	i2l109
  7671  002498  EF52  F012         i2u226_40:
  7672  00249C                     	line	39
  7673                           	
  7674                           i2l2619:
  7675  00249C                     ;Controle.c: 37:     {;Controle.c: 39:         PORTBbits.RB7 = 0;
  7676                           	bcf	((c:3969)),c,7	;volatile
  7677  00249C  9E81               	line	40
  7678                           ;Controle.c: 40:         PORTBbits.RB6 = 0;
  7679                           	bcf	((c:3969)),c,6	;volatile
  7680  00249E  9C81               	line	41
  7681                           ;Controle.c: 41:         PORTBbits.RB5 = 0;
  7682                           	bcf	((c:3969)),c,5	;volatile
  7683  0024A0  9A81               	line	42
  7684                           ;Controle.c: 42:         PORTBbits.RB0 = 0;
  7685                           	bcf	((c:3969)),c,0	;volatile
  7686  0024A2  9081               	line	43
  7687                           ;Controle.c: 44:     if(quant_pessoas > 0 && quant_pessoas <= 100*0,25)
  7688                           	
  7689                           i2l109:
  7690  0024A4                     	line	47
  7691                           ;Controle.c: 45:     {;Controle.c: 47:         PORTBbits.RB7 = 1;
  7692                           	bsf	((c:3969)),c,7	;volatile
  7693  0024A4  8E81               	line	48
  7694                           ;Controle.c: 49:     if(quant_pessoas > 100*0,25 && quant_pessoas <= 100*0,5)
  7695                           	
  7696                           i2l110:
  7697  0024A6                     	line	52
  7698                           ;Controle.c: 50:     {;Controle.c: 52:         PORTBbits.RB7 = 1;
  7699                           	bsf	((c:3969)),c,7	;volatile
  7700  0024A6  8E81               	line	53
  7701                           ;Controle.c: 53:         PORTBbits.RB6 = 1;
  7702                           	bsf	((c:3969)),c,6	;volatile
  7703  0024A8  8C81               	line	54
  7704                           ;Controle.c: 55:     if(quant_pessoas > 100*0,5 && quant_pessoas <= 100*0,75)
  7705                           	
  7706                           i2l111:
  7707  0024AA                     	line	58
  7708                           ;Controle.c: 56:     {;Controle.c: 58:         PORTBbits.RB7 = 1;
  7709                           	bsf	((c:3969)),c,7	;volatile
  7710  0024AA  8E81               	line	59
  7711                           ;Controle.c: 59:         PORTBbits.RB6 = 1;
  7712                           	bsf	((c:3969)),c,6	;volatile
  7713  0024AC  8C81               	line	60
  7714                           ;Controle.c: 60:         PORTBbits.RB5 = 1;
  7715                           	bsf	((c:3969)),c,5	;volatile
  7716  0024AE  8A81               	goto	i2l2621
  7717  0024B0  EF5A  F012         	line	61
  7718                           ;Controle.c: 62:     if(quant_pessoas > 100*0,75 && quant_pessoas <= 100)
  7719                           	
  7720                           i2l112:
  7721  0024B4                     	line	62
  7722                           	
  7723                           i2l2621:
  7724  0024B4                     	btfsc	((c:i2acende@quant_pessoas+1)),c,7
  7725  0024B4  BE02               	goto	i2u227_40
  7726  0024B6  EF68  F012         	movf	((c:i2acende@quant_pessoas+1)),c,w
  7727  0024BA  5002               	bnz	i2u227_41
  7728  0024BC  E107               	movlw	101
  7729  0024BE  0E65               	subwf	 ((c:i2acende@quant_pessoas)),c,w
  7730  0024C0  5C01               	btfsc	status,0
  7731  0024C2  B0D8               	goto	i2u227_41
  7732  0024C4  EF66  F012         	goto	i2u227_40
  7733  0024C8  EF68  F012         
  7734                           i2u227_41:
  7735  0024CC                     	goto	i2l114
  7736  0024CC  EF6E  F012         i2u227_40:
  7737  0024D0                     	line	65
  7738                           	
  7739                           i2l2623:
  7740  0024D0                     ;Controle.c: 63:     {;Controle.c: 65:         PORTBbits.RB7 = 1;
  7741                           	bsf	((c:3969)),c,7	;volatile
  7742  0024D0  8E81               	line	66
  7743                           ;Controle.c: 66:         PORTBbits.RB6 = 1;
  7744                           	bsf	((c:3969)),c,6	;volatile
  7745  0024D2  8C81               	line	67
  7746                           ;Controle.c: 67:         PORTBbits.RB5 = 1;
  7747                           	bsf	((c:3969)),c,5	;volatile
  7748  0024D4  8A81               	line	68
  7749                           ;Controle.c: 68:         PORTBbits.RB0 = 1;
  7750                           	bsf	((c:3969)),c,0	;volatile
  7751  0024D6  8081               	goto	i2l114
  7752  0024D8  EF6E  F012         	line	69
  7753                           ;Controle.c: 69:     }
  7754                           	
  7755                           i2l113:
  7756  0024DC                     	line	70
  7757                           	
  7758                           i2l114:
  7759  0024DC                     	return	;funcret
  7760  0024DC  0012               	opt stack 0
  7761                           GLOBAL	__end_ofi2_acende
  7762                           	__end_ofi2_acende:
  7763  0024DE                     	signat	i2_acende,89
  7764                           	global	i2_gira_anti_horario
  7765                           
  7766 ;; *************** function i2_gira_anti_horario *****************
  7767 ;; Defined at:
  7768 ;;		line 168 in file "Controle.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;		None
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		wreg, status,2, status,0
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7782 ;;      Params:         0       0       0       0       0       0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0
  7784 ;;      Temps:          0       0       0       0       0       0       0
  7785 ;;      Totals:         0       0       0       0       0       0       0
  7786 ;;Total ram usage:        0 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; This function calls:
  7789 ;;		Nothing
  7790 ;; This function is called by:
  7791 ;;		_tmr
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           psect	text31,class=CODE,space=0,reloc=2,group=0
  7795                           	line	168
  7796                           global __ptext31
  7797                           __ptext31:
  7798  002712                     psect	text31
  7799                           	file	"Controle.c"
  7800                           	line	168
  7801                           	global	__size_ofi2_gira_anti_horario
  7802                           	__size_ofi2_gira_anti_horario	equ	__end_ofi2_gira_anti_horario-i2_gira_anti_horario
  7803  0000                     	
  7804                           i2_gira_anti_horario:
  7805  002712                     ;incstack = 0
  7806                           	opt	stack 18
  7807                           	line	174
  7808                           	
  7809                           i2l2767:
  7810  002712                     ;Controle.c: 174:     if(estado == 1 && quant_pessoas != 100)
  7811                           	movlb	0	; () banked
  7812  002712  0100               		decf	((_estado))&0ffh,w
  7813  002714  05F9               iorwf	((_estado+1))&0ffh,w
  7814  002716  11FA               	btfss	status,2
  7815  002718  A4D8               	goto	i2u237_41
  7816  00271A  EF91  F013         	goto	i2u237_40
  7817  00271E  EF93  F013         
  7818                           i2u237_41:
  7819  002722                     	goto	i2l139
  7820  002722  EFA3  F013         i2u237_40:
  7821  002726                     	
  7822                           i2l2769:; BSR set to: 0
  7823  002726                     
  7824                           		movlw	100
  7825  002726  0E64               	xorwf	((_quant_pessoas))&0ffh,w
  7826  002728  19FB               iorwf	((_quant_pessoas+1))&0ffh,w
  7827  00272A  11FC               	btfsc	status,2
  7828  00272C  B4D8               	goto	i2u238_41
  7829  00272E  EF9B  F013         	goto	i2u238_40
  7830  002732  EF9D  F013         
  7831                           i2u238_41:
  7832  002736                     	goto	i2l139
  7833  002736  EFA3  F013         i2u238_40:
  7834  00273A                     	line	176
  7835                           	
  7836                           i2l2771:; BSR set to: 0
  7837  00273A                     
  7838                           ;Controle.c: 175:     {;Controle.c: 176:         estado = 0;
  7839                           	movlw	high(0)
  7840  00273A  0E00               	movwf	((_estado+1))&0ffh
  7841  00273C  6FFA               	movlw	low(0)
  7842  00273E  0E00               	movwf	((_estado))&0ffh
  7843  002740  6FF9               	goto	i2l139
  7844  002742  EFA3  F013         	line	177
  7845                           ;Controle.c: 177:     }
  7846                           	
  7847                           i2l138:; BSR set to: 0
  7848  002746                     
  7849                           	line	178
  7850                           	
  7851                           i2l139:; BSR set to: 0
  7852  002746                     
  7853                           	return	;funcret
  7854  002746  0012               	opt stack 0
  7855                           GLOBAL	__end_ofi2_gira_anti_horario
  7856                           	__end_ofi2_gira_anti_horario:
  7857  002748                     	signat	i2_gira_anti_horario,89
  7858                           	global	_bloqueada
  7859                           
  7860 ;; *************** function _bloqueada *****************
  7861 ;; Defined at:
  7862 ;;		line 131 in file "Controle.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  estado          2  103[COMRAM] int 
  7865 ;;  quant_pessoa    2  105[COMRAM] int 
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;		None
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1    wreg      void 
  7870 ;; Registers used:
  7871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7877 ;;      Params:         4       0       0       0       0       0       0
  7878 ;;      Locals:         0       0       0       0       0       0       0
  7879 ;;      Temps:          2       0       0       0       0       0       0
  7880 ;;      Totals:         6       0       0       0       0       0       0
  7881 ;;Total ram usage:        6 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    8
  7884 ;; This function calls:
  7885 ;;		i2_lcd_clear
  7886 ;;		i2_lcd_goto
  7887 ;;		i2_lcd_puts
  7888 ;;		i2_sprintf
  7889 ;; This function is called by:
  7890 ;;		_tmr
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           psect	text32,class=CODE,space=0,reloc=2,group=0
  7894                           	line	131
  7895                           global __ptext32
  7896                           __ptext32:
  7897  001886                     psect	text32
  7898                           	file	"Controle.c"
  7899                           	line	131
  7900                           	global	__size_of_bloqueada
  7901                           	__size_of_bloqueada	equ	__end_of_bloqueada-_bloqueada
  7902  0000                     	
  7903                           _bloqueada:; BSR set to: 0
  7904  001886                     
  7905                           ;incstack = 0
  7906                           	opt	stack 10
  7907                           	line	133
  7908                           	
  7909                           i2l2703:
  7910  001886                     ;Controle.c: 131: void bloqueada(int estado, int quant_pessoas);Controle.c: 132: {;Contr
                                 ole.c: 133:     if(estado == 3)
  7911                           		movlw	3
  7912  001886  0E03               	xorwf	((c:bloqueada@estado)),c,w
  7913  001888  1868               iorwf	((c:bloqueada@estado+1)),c,w
  7914  00188A  1069               	btfss	status,2
  7915  00188C  A4D8               	goto	i2u231_41
  7916  00188E  EF4B  F00C         	goto	i2u231_40
  7917  001892  EF4D  F00C         
  7918                           i2u231_41:
  7919  001896                     	goto	i2l2721
  7920  001896  EF85  F00C         i2u231_40:
  7921  00189A                     	line	135
  7922                           	
  7923                           i2l2705:
  7924  00189A                     ;Controle.c: 134:     {;Controle.c: 135:         _delay((unsigned long)((5)*(4000000/400
                                 0.0)));
  7925                           	opt asmopt_push
  7926                           opt asmopt_off
  7927                           movlw	7
  7928  00189A  0E07               movwf	(??_bloqueada+0+0)&0ffh,c,f
  7929  00189C  6E6C               	movlw	125
  7930  00189E  0E7D               i2u283_47:
  7931  0018A0                     decfsz	wreg,f
  7932  0018A0  2EE8               	bra	i2u283_47
  7933  0018A2  D7FE               	decfsz	(??_bloqueada+0+0)&0ffh,c,f
  7934  0018A4  2E6C               	bra	i2u283_47
  7935  0018A6  D7FC               	nop
  7936  0018A8  F000               opt asmopt_pop
  7937                           
  7938                           	line	136
  7939                           	
  7940                           i2l2707:
  7941  0018AA                     ;Controle.c: 136:         lcd_clear();
  7942                           	call	i2_lcd_clear	;wreg free
  7943  0018AA  EC0D  F014         	line	137
  7944                           	
  7945                           i2l2709:
  7946  0018AE                     ;Controle.c: 137:         lcd_goto(3);
  7947                           	movlw	(03h)&0ffh
  7948  0018AE  0E03               	
  7949                           	call	i2_lcd_goto
  7950  0018B0  EC37  F014         	line	138
  7951                           	
  7952                           i2l2711:
  7953  0018B4                     ;Controle.c: 138:         lcd_puts("Entrada Bloqueada");
  7954                           		movlw	low(STR_6)
  7955  0018B4  0E01               	movwf	((c:i2lcd_puts@s)),c
  7956  0018B6  6E02               	movlw	high(STR_6)
  7957  0018B8  0E06               	movwf	((c:i2lcd_puts@s+1)),c
  7958  0018BA  6E03               
  7959                           	call	i2_lcd_puts	;wreg free
  7960  0018BC  ECC8  F010         	line	139
  7961                           	
  7962                           i2l2713:
  7963  0018C0                     ;Controle.c: 139:          _delay((unsigned long)((5000)*(4000000/4000.0)));
  7964                           	opt asmopt_push
  7965                           opt asmopt_off
  7966                           movlw  26
  7967  0018C0  0E1A               movwf	(??_bloqueada+0+0+1)&0ffh,c,f
  7968  0018C2  6E6D               movlw	94
  7969  0018C4  0E5E               movwf	(??_bloqueada+0+0)&0ffh,c,f
  7970  0018C6  6E6C               	movlw	110
  7971  0018C8  0E6E               i2u284_47:
  7972  0018CA                     decfsz	wreg,f
  7973  0018CA  2EE8               	bra	i2u284_47
  7974  0018CC  D7FE               	decfsz	(??_bloqueada+0+0)&0ffh,c,f
  7975  0018CE  2E6C               	bra	i2u284_47
  7976  0018D0  D7FC               	decfsz	(??_bloqueada+0+0+1)&0ffh,c,f
  7977  0018D2  2E6D               	bra	i2u284_47
  7978  0018D4  D7FA               	nop2
  7979  0018D6  D000               opt asmopt_pop
  7980                           
  7981                           	line	140
  7982                           	
  7983                           i2l2715:
  7984  0018D8                     ;Controle.c: 140:         lcd_goto(40);
  7985                           	movlw	(028h)&0ffh
  7986  0018D8  0E28               	
  7987                           	call	i2_lcd_goto
  7988  0018DA  EC37  F014         	line	141
  7989                           	
  7990                           i2l2717:
  7991  0018DE                     ;Controle.c: 141:         sprintf(num, "%d", num_mostra);
  7992                           		movlw	low(_num)
  7993  0018DE  0EFD               	movwf	((c:i2sprintf@s)),c
  7994  0018E0  6E58               	movlw	high(_num)
  7995  0018E2  0E00               	movwf	((c:i2sprintf@s+1)),c
  7996  0018E4  6E59               
  7997                           		movlw	low(STR_7)
  7998  0018E6  0E4B               	movwf	((c:i2sprintf@fmt)),c
  7999  0018E8  6E5A               	movlw	high(STR_7)
  8000  0018EA  0E06               	movwf	((c:i2sprintf@fmt+1)),c
  8001  0018EC  6E5B               
  8002                           	movff	(_num_mostra),0+((c:?i2_sprintf)+04h)
  8003  0018EE  C0F7  F05C         	movff	(_num_mostra+1),1+((c:?i2_sprintf)+04h)
  8004  0018F2  C0F8  F05D         	call	i2_sprintf	;wreg free
  8005  0018F6  ECC2  F011         	line	142
  8006                           	
  8007                           i2l2719:
  8008  0018FA                     ;Controle.c: 142:         lcd_puts(num);
  8009                           		movlw	low(_num)
  8010  0018FA  0EFD               	movwf	((c:i2lcd_puts@s)),c
  8011  0018FC  6E02               	movlw	high(_num)
  8012  0018FE  0E00               	movwf	((c:i2lcd_puts@s+1)),c
  8013  001900  6E03               
  8014                           	call	i2_lcd_puts	;wreg free
  8015  001902  ECC8  F010         	goto	i2l2721
  8016  001906  EF85  F00C         	line	143
  8017                           ;Controle.c: 143:     }
  8018                           	
  8019                           i2l132:
  8020  00190A                     	line	144
  8021                           	
  8022                           i2l2721:
  8023  00190A                     ;Controle.c: 144:     if(estado == 4)
  8024                           		movlw	4
  8025  00190A  0E04               	xorwf	((c:bloqueada@estado)),c,w
  8026  00190C  1868               iorwf	((c:bloqueada@estado+1)),c,w
  8027  00190E  1069               	btfss	status,2
  8028  001910  A4D8               	goto	i2u232_41
  8029  001912  EF8D  F00C         	goto	i2u232_40
  8030  001916  EF8F  F00C         
  8031                           i2u232_41:
  8032  00191A                     	goto	i2l2741
  8033  00191A  EFCB  F00C         i2u232_40:
  8034  00191E                     	line	146
  8035                           	
  8036                           i2l2723:
  8037  00191E                     ;Controle.c: 145:     {;Controle.c: 146:         _delay((unsigned long)((5)*(4000000/400
                                 0.0)));
  8038                           	opt asmopt_push
  8039                           opt asmopt_off
  8040                           movlw	7
  8041  00191E  0E07               movwf	(??_bloqueada+0+0)&0ffh,c,f
  8042  001920  6E6C               	movlw	125
  8043  001922  0E7D               i2u285_47:
  8044  001924                     decfsz	wreg,f
  8045  001924  2EE8               	bra	i2u285_47
  8046  001926  D7FE               	decfsz	(??_bloqueada+0+0)&0ffh,c,f
  8047  001928  2E6C               	bra	i2u285_47
  8048  00192A  D7FC               	nop
  8049  00192C  F000               opt asmopt_pop
  8050                           
  8051                           	line	147
  8052                           	
  8053                           i2l2725:
  8054  00192E                     ;Controle.c: 147:         lcd_clear();
  8055                           	call	i2_lcd_clear	;wreg free
  8056  00192E  EC0D  F014         	line	148
  8057                           	
  8058                           i2l2727:
  8059  001932                     ;Controle.c: 148:         lcd_goto(3);
  8060                           	movlw	(03h)&0ffh
  8061  001932  0E03               	
  8062                           	call	i2_lcd_goto
  8063  001934  EC37  F014         	line	149
  8064                           	
  8065                           i2l2729:
  8066  001938                     ;Controle.c: 149:         lcd_puts("Saida Bloqueada");
  8067                           		movlw	low(STR_8)
  8068  001938  0E13               	movwf	((c:i2lcd_puts@s)),c
  8069  00193A  6E02               	movlw	high(STR_8)
  8070  00193C  0E06               	movwf	((c:i2lcd_puts@s+1)),c
  8071  00193E  6E03               
  8072                           	call	i2_lcd_puts	;wreg free
  8073  001940  ECC8  F010         	line	150
  8074                           	
  8075                           i2l2731:
  8076  001944                     ;Controle.c: 150:          _delay((unsigned long)((5000)*(4000000/4000.0)));
  8077                           	opt asmopt_push
  8078                           opt asmopt_off
  8079                           movlw  26
  8080  001944  0E1A               movwf	(??_bloqueada+0+0+1)&0ffh,c,f
  8081  001946  6E6D               movlw	94
  8082  001948  0E5E               movwf	(??_bloqueada+0+0)&0ffh,c,f
  8083  00194A  6E6C               	movlw	110
  8084  00194C  0E6E               i2u286_47:
  8085  00194E                     decfsz	wreg,f
  8086  00194E  2EE8               	bra	i2u286_47
  8087  001950  D7FE               	decfsz	(??_bloqueada+0+0)&0ffh,c,f
  8088  001952  2E6C               	bra	i2u286_47
  8089  001954  D7FC               	decfsz	(??_bloqueada+0+0+1)&0ffh,c,f
  8090  001956  2E6D               	bra	i2u286_47
  8091  001958  D7FA               	nop2
  8092  00195A  D000               opt asmopt_pop
  8093                           
  8094                           	line	151
  8095                           	
  8096                           i2l2733:
  8097  00195C                     ;Controle.c: 151:         lcd_goto(40);
  8098                           	movlw	(028h)&0ffh
  8099  00195C  0E28               	
  8100                           	call	i2_lcd_goto
  8101  00195E  EC37  F014         	line	152
  8102                           	
  8103                           i2l2735:
  8104  001962                     ;Controle.c: 152:         num_mostra = quant_pessoas;
  8105                           	movff	(c:bloqueada@quant_pessoas),(_num_mostra)
  8106  001962  C06A  F0F7         	movff	(c:bloqueada@quant_pessoas+1),(_num_mostra+1)
  8107  001966  C06B  F0F8         	line	153
  8108                           	
  8109                           i2l2737:
  8110  00196A                     ;Controle.c: 153:         sprintf(num, "%d", num_mostra);
  8111                           		movlw	low(_num)
  8112  00196A  0EFD               	movwf	((c:i2sprintf@s)),c
  8113  00196C  6E58               	movlw	high(_num)
  8114  00196E  0E00               	movwf	((c:i2sprintf@s+1)),c
  8115  001970  6E59               
  8116                           		movlw	low(STR_9)
  8117  001972  0E4B               	movwf	((c:i2sprintf@fmt)),c
  8118  001974  6E5A               	movlw	high(STR_9)
  8119  001976  0E06               	movwf	((c:i2sprintf@fmt+1)),c
  8120  001978  6E5B               
  8121                           	movff	(_num_mostra),0+((c:?i2_sprintf)+04h)
  8122  00197A  C0F7  F05C         	movff	(_num_mostra+1),1+((c:?i2_sprintf)+04h)
  8123  00197E  C0F8  F05D         	call	i2_sprintf	;wreg free
  8124  001982  ECC2  F011         	line	154
  8125                           	
  8126                           i2l2739:
  8127  001986                     ;Controle.c: 154:         lcd_puts(num);
  8128                           		movlw	low(_num)
  8129  001986  0EFD               	movwf	((c:i2lcd_puts@s)),c
  8130  001988  6E02               	movlw	high(_num)
  8131  00198A  0E00               	movwf	((c:i2lcd_puts@s+1)),c
  8132  00198C  6E03               
  8133                           	call	i2_lcd_puts	;wreg free
  8134  00198E  ECC8  F010         	goto	i2l2741
  8135  001992  EFCB  F00C         	line	155
  8136                           ;Controle.c: 155:     }
  8137                           	
  8138                           i2l133:
  8139  001996                     	line	156
  8140                           	
  8141                           i2l2741:
  8142  001996                     ;Controle.c: 156:     if(estado == 1)
  8143                           		decf	((c:bloqueada@estado)),c,w
  8144  001996  0468               iorwf	((c:bloqueada@estado+1)),c,w
  8145  001998  1069               	btfss	status,2
  8146  00199A  A4D8               	goto	i2u233_41
  8147  00199C  EFD2  F00C         	goto	i2u233_40
  8148  0019A0  EFD4  F00C         
  8149                           i2u233_41:
  8150  0019A4                     	goto	i2l135
  8151  0019A4  EFFE  F00C         i2u233_40:
  8152  0019A8                     	line	158
  8153                           	
  8154                           i2l2743:
  8155  0019A8                     ;Controle.c: 157:     {;Controle.c: 158:         _delay((unsigned long)((5)*(4000000/400
                                 0.0)));
  8156                           	opt asmopt_push
  8157                           opt asmopt_off
  8158                           movlw	7
  8159  0019A8  0E07               movwf	(??_bloqueada+0+0)&0ffh,c,f
  8160  0019AA  6E6C               	movlw	125
  8161  0019AC  0E7D               i2u287_47:
  8162  0019AE                     decfsz	wreg,f
  8163  0019AE  2EE8               	bra	i2u287_47
  8164  0019B0  D7FE               	decfsz	(??_bloqueada+0+0)&0ffh,c,f
  8165  0019B2  2E6C               	bra	i2u287_47
  8166  0019B4  D7FC               	nop
  8167  0019B6  F000               opt asmopt_pop
  8168                           
  8169                           	line	159
  8170                           	
  8171                           i2l2745:
  8172  0019B8                     ;Controle.c: 159:         lcd_clear();
  8173                           	call	i2_lcd_clear	;wreg free
  8174  0019B8  EC0D  F014         	line	160
  8175                           	
  8176                           i2l2747:
  8177  0019BC                     ;Controle.c: 160:         lcd_goto(3);
  8178                           	movlw	(03h)&0ffh
  8179  0019BC  0E03               	
  8180                           	call	i2_lcd_goto
  8181  0019BE  EC37  F014         	line	161
  8182                           	
  8183                           i2l2749:
  8184  0019C2                     ;Controle.c: 161:         lcd_puts("Limite maximo");
  8185                           		movlw	low(STR_10)
  8186  0019C2  0E23               	movwf	((c:i2lcd_puts@s)),c
  8187  0019C4  6E02               	movlw	high(STR_10)
  8188  0019C6  0E06               	movwf	((c:i2lcd_puts@s+1)),c
  8189  0019C8  6E03               
  8190                           	call	i2_lcd_puts	;wreg free
  8191  0019CA  ECC8  F010         	line	162
  8192                           	
  8193                           i2l2751:
  8194  0019CE                     ;Controle.c: 162:         lcd_goto(40);
  8195                           	movlw	(028h)&0ffh
  8196  0019CE  0E28               	
  8197                           	call	i2_lcd_goto
  8198  0019D0  EC37  F014         	line	163
  8199                           	
  8200                           i2l2753:
  8201  0019D4                     ;Controle.c: 163:         lcd_puts("atingido.");
  8202                           		movlw	low(STR_11)
  8203  0019D4  0E31               	movwf	((c:i2lcd_puts@s)),c
  8204  0019D6  6E02               	movlw	high(STR_11)
  8205  0019D8  0E06               	movwf	((c:i2lcd_puts@s+1)),c
  8206  0019DA  6E03               
  8207                           	call	i2_lcd_puts	;wreg free
  8208  0019DC  ECC8  F010         	line	164
  8209                           	
  8210                           i2l2755:
  8211  0019E0                     ;Controle.c: 164:         _delay((unsigned long)((5000)*(4000000/4000.0)));
  8212                           	opt asmopt_push
  8213                           opt asmopt_off
  8214                           movlw  26
  8215  0019E0  0E1A               movwf	(??_bloqueada+0+0+1)&0ffh,c,f
  8216  0019E2  6E6D               movlw	94
  8217  0019E4  0E5E               movwf	(??_bloqueada+0+0)&0ffh,c,f
  8218  0019E6  6E6C               	movlw	110
  8219  0019E8  0E6E               i2u288_47:
  8220  0019EA                     decfsz	wreg,f
  8221  0019EA  2EE8               	bra	i2u288_47
  8222  0019EC  D7FE               	decfsz	(??_bloqueada+0+0)&0ffh,c,f
  8223  0019EE  2E6C               	bra	i2u288_47
  8224  0019F0  D7FC               	decfsz	(??_bloqueada+0+0+1)&0ffh,c,f
  8225  0019F2  2E6D               	bra	i2u288_47
  8226  0019F4  D7FA               	nop2
  8227  0019F6  D000               opt asmopt_pop
  8228                           
  8229                           	goto	i2l135
  8230  0019F8  EFFE  F00C         	line	165
  8231                           ;Controle.c: 165:     }
  8232                           	
  8233                           i2l134:
  8234  0019FC                     	line	166
  8235                           	
  8236                           i2l135:
  8237  0019FC                     	return	;funcret
  8238  0019FC  0012               	opt stack 0
  8239                           GLOBAL	__end_of_bloqueada
  8240                           	__end_of_bloqueada:
  8241  0019FE                     	signat	_bloqueada,8313
  8242                           	global	i2_sprintf
  8243                           
  8244 ;; *************** function i2_sprintf *****************
  8245 ;; Defined at:
  8246 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;  s               2   87[COMRAM] PTR unsigned char 
  8249 ;;		 -> num(3), 
  8250 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  8251 ;;		 -> STR_9(3), STR_7(3), STR_4(3), STR_2(3), 
  8252 ;; Auto vars:     Size  Location     Type
  8253 ;;  sprintf         6   97[COMRAM] struct _IO_FILE
  8254 ;;  sprintf         2   95[COMRAM] PTR void [1]
  8255 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  8256 ;;  sprintf         2   93[COMRAM] int 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  2   87[COMRAM] int 
  8259 ;; Registers used:
  8260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8266 ;;      Params:         6       0       0       0       0       0       0
  8267 ;;      Locals:        10       0       0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0
  8269 ;;      Totals:        16       0       0       0       0       0       0
  8270 ;;Total ram usage:       16 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    7
  8273 ;; This function calls:
  8274 ;;		i2_vfprintf
  8275 ;; This function is called by:
  8276 ;;		_bloqueada
  8277 ;;		i2_mostra
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           psect	text33,class=CODE,space=0,reloc=2,group=0
  8281                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  8282                           	line	9
  8283                           global __ptext33
  8284                           __ptext33:
  8285  002384                     psect	text33
  8286                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  8287                           	line	9
  8288                           	global	__size_ofi2_sprintf
  8289                           	__size_ofi2_sprintf	equ	__end_ofi2_sprintf-i2_sprintf
  8290  0000                     	
  8291                           i2_sprintf:
  8292  002384                     ;incstack = 0
  8293                           	opt	stack 8
  8294                           	line	15
  8295                           	
  8296                           i2l2555:
  8297  002384                     		movlw	low(?i2_sprintf+04h)
  8298  002384  0E5C               	movwf	((c:i2sprintf@ap)),c
  8299  002386  6E60               	movlw	high(?i2_sprintf+04h)
  8300  002388  0E00               	movwf	((c:i2sprintf@ap+1)),c
  8301  00238A  6E61               
  8302                           	line	16
  8303                           		movff	(c:i2sprintf@s),(c:i2sprintf@f)
  8304  00238C  C058  F062         	movff	(c:i2sprintf@s+1),(c:i2sprintf@f+1)
  8305  002390  C059  F063         
  8306                           	line	17
  8307                           	
  8308                           i2l2557:
  8309  002394                     	movlw	high(0)
  8310  002394  0E00               	movwf	(1+((c:i2sprintf@f)+02h)),c
  8311  002396  6E65               	movlw	low(0)
  8312  002398  0E00               	movwf	(0+((c:i2sprintf@f)+02h)),c
  8313  00239A  6E64               	line	18
  8314                           	
  8315                           i2l2559:
  8316  00239C                     	movlw	high(0)
  8317  00239C  0E00               	movwf	(1+((c:i2sprintf@f)+04h)),c
  8318  00239E  6E67               	movlw	low(0)
  8319  0023A0  0E00               	movwf	(0+((c:i2sprintf@f)+04h)),c
  8320  0023A2  6E66               	line	19
  8321                           	
  8322                           i2l2561:
  8323  0023A4                     		movlw	low(i2sprintf@f)
  8324  0023A4  0E62               	movwf	((c:i2vfprintf@fp)),c
  8325  0023A6  6E50               	movlw	high(i2sprintf@f)
  8326  0023A8  0E00               	movwf	((c:i2vfprintf@fp+1)),c
  8327  0023AA  6E51               
  8328                           		movff	(c:i2sprintf@fmt),(c:i2vfprintf@fmt)
  8329  0023AC  C05A  F052         	movff	(c:i2sprintf@fmt+1),(c:i2vfprintf@fmt+1)
  8330  0023B0  C05B  F053         
  8331                           		movlw	low(i2sprintf@ap)
  8332  0023B4  0E60               	movwf	((c:i2vfprintf@ap)),c
  8333  0023B6  6E54               	movlw	high(i2sprintf@ap)
  8334  0023B8  0E00               	movwf	((c:i2vfprintf@ap+1)),c
  8335  0023BA  6E55               
  8336                           	call	i2_vfprintf	;wreg free
  8337  0023BC  EC62  F011         	movff	0+?i2_vfprintf,(c:i2sprintf@ret)
  8338  0023C0  C050  F05E         	movff	1+?i2_vfprintf,(c:i2sprintf@ret+1)
  8339  0023C4  C051  F05F         	line	20
  8340                           	
  8341                           i2l2563:
  8342  0023C8                     	movf	(0+((c:i2sprintf@f)+02h)),c,w
  8343  0023C8  5064               	addwf	((c:i2sprintf@s)),c,w
  8344  0023CA  2458               	movwf	c:fsr2l
  8345  0023CC  6ED9               	movf	(1+((c:i2sprintf@f)+02h)),c,w
  8346  0023CE  5065               	addwfc	((c:i2sprintf@s+1)),c,w
  8347  0023D0  2059               	movwf	1+c:fsr2l
  8348  0023D2  6EDA               	movlw	low(0)
  8349  0023D4  0E00               	movwf	indf2
  8350  0023D6  6EDF               	goto	i2l958
  8351  0023D8  EFEE  F011         	line	22
  8352                           	
  8353                           i2l2565:
  8354  0023DC                     	line	23
  8355                           ;	Return value of i2_sprintf is never used
  8356                           	
  8357                           i2l958:
  8358  0023DC                     	return	;funcret
  8359  0023DC  0012               	opt stack 0
  8360                           GLOBAL	__end_ofi2_sprintf
  8361                           	__end_ofi2_sprintf:
  8362  0023DE                     	signat	i2_sprintf,90
  8363                           	global	i2_vfprintf
  8364                           
  8365 ;; *************** function i2_vfprintf *****************
  8366 ;; Defined at:
  8367 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  8370 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  8371 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  8372 ;;		 -> STR_9(3), STR_7(3), STR_4(3), STR_2(3), 
  8373 ;;  ap              2   83[COMRAM] PTR PTR void 
  8374 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  vfprintf        2   85[COMRAM] PTR unsigned char 
  8377 ;;		 -> STR_9(3), STR_7(3), STR_4(3), STR_2(3), 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  2   79[COMRAM] int 
  8380 ;; Registers used:
  8381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8387 ;;      Params:         6       0       0       0       0       0       0
  8388 ;;      Locals:         2       0       0       0       0       0       0
  8389 ;;      Temps:          0       0       0       0       0       0       0
  8390 ;;      Totals:         8       0       0       0       0       0       0
  8391 ;;Total ram usage:        8 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:    6
  8394 ;; This function calls:
  8395 ;;		i2_vfpfcnvrt
  8396 ;; This function is called by:
  8397 ;;		i2_sprintf
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           psect	text34,class=CODE,space=0,reloc=2,group=0
  8401                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  8402                           	line	1368
  8403                           global __ptext34
  8404                           __ptext34:
  8405  0022C4                     psect	text34
  8406                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  8407                           	line	1368
  8408                           	global	__size_ofi2_vfprintf
  8409                           	__size_ofi2_vfprintf	equ	__end_ofi2_vfprintf-i2_vfprintf
  8410  0000                     	
  8411                           i2_vfprintf:
  8412  0022C4                     ;incstack = 0
  8413                           	opt	stack 8
  8414                           	line	1373
  8415                           	
  8416                           i2l2431:
  8417  0022C4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8418                           		movff	(c:i2vfprintf@fmt),(c:i2vfprintf@cfmt)
  8419  0022C4  C052  F056         	movff	(c:i2vfprintf@fmt+1),(c:i2vfprintf@cfmt+1)
  8420  0022C8  C053  F057         
  8421                           	line	1374
  8422                           	
  8423                           i2l2433:
  8424  0022CC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  8425                           	movlw	high(0)
  8426  0022CC  0E00               	movwf	((c:_nout+1)),c
  8427  0022CE  6E77               	movlw	low(0)
  8428  0022D0  0E00               	movwf	((c:_nout)),c
  8429  0022D2  6E76               	line	1375
  8430                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  8431                           	goto	i2l2437
  8432  0022D4  EF80  F011         	
  8433                           i2l248:
  8434  0022D8                     	line	1376
  8435                           	
  8436                           i2l2435:
  8437  0022D8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  8438                           		movff	(c:i2vfprintf@fp),(c:i2vfpfcnvrt@fp)
  8439  0022D8  C050  F040         	movff	(c:i2vfprintf@fp+1),(c:i2vfpfcnvrt@fp+1)
  8440  0022DC  C051  F041         
  8441                           		movlw	low(i2vfprintf@cfmt)
  8442  0022E0  0E56               	movwf	((c:i2vfpfcnvrt@fmt)),c
  8443  0022E2  6E42               	movlw	high(i2vfprintf@cfmt)
  8444  0022E4  0E00               	movwf	((c:i2vfpfcnvrt@fmt+1)),c
  8445  0022E6  6E43               
  8446                           		movff	(c:i2vfprintf@ap),(c:i2vfpfcnvrt@ap)
  8447  0022E8  C054  F044         	movff	(c:i2vfprintf@ap+1),(c:i2vfpfcnvrt@ap+1)
  8448  0022EC  C055  F045         
  8449                           	call	i2_vfpfcnvrt	;wreg free
  8450  0022F0  EC1F  F008         	movf	(0+?i2_vfpfcnvrt),c,w
  8451  0022F4  5040               	addwf	((c:_nout)),c
  8452  0022F6  2676               	movf	(1+?i2_vfpfcnvrt),c,w
  8453  0022F8  5041               	addwfc	((c:_nout+1)),c
  8454  0022FA  2277               
  8455                           	goto	i2l2437
  8456  0022FC  EF80  F011         	line	1377
  8457                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  8458                           	
  8459                           i2l247:
  8460  002300                     	line	1375
  8461                           	
  8462                           i2l2437:
  8463  002300                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  8464                           	movff	(c:i2vfprintf@cfmt),tblptrl
  8465  002300  C056  FFF6         	movff	(c:i2vfprintf@cfmt+1),tblptrh
  8466  002304  C057  FFF7         	if	0	;tblptru may be non-zero
  8467  002308                     	clrf	tblptru
  8469  002308                     	if	0	;tblptru may be non-zero
  8470  002308                     	global __mediumconst
  8471                           movlw	low highword(__mediumconst)
  8474  002308                     	tblrd	*
  8475  002308  0008               	
  8476                           	movf	tablat,w
  8477  00230A  50F5               	iorlw	0
  8478  00230C  0900               	btfss	status,2
  8479  00230E  A4D8               	goto	i2u215_41
  8480  002310  EF8C  F011         	goto	i2u215_40
  8481  002314  EF8E  F011         i2u215_41:
  8482  002318                     	goto	i2l2435
  8483  002318  EF6C  F011         i2u215_40:
  8484  00231C                     	
  8485                           i2l249:
  8486  00231C                     	line	1378
  8487                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  8488                           	movff	(c:_nout),(c:?i2_vfprintf)
  8489  00231C  C076  F050         	movff	(c:_nout+1),(c:?i2_vfprintf+1)
  8490  002320  C077  F051         	line	1382
  8491                           	
  8492                           i2l250:
  8493  002324                     	return	;funcret
  8494  002324  0012               	opt stack 0
  8495                           GLOBAL	__end_ofi2_vfprintf
  8496                           	__end_ofi2_vfprintf:
  8497  002326                     	signat	i2_vfprintf,90
  8498                           	global	i2_vfpfcnvrt
  8499                           
  8500 ;; *************** function i2_vfpfcnvrt *****************
  8501 ;; Defined at:
  8502 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  8505 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  8506 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  8507 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  8508 ;;  ap              2   67[COMRAM] PTR PTR void 
  8509 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  vfpfcnvrt       8   71[COMRAM] long long 
  8512 ;;  vfpfcnvrt       8    0        unsigned long long 
  8513 ;;  vfpfcnvrt       4    0        unsigned long long 
  8514 ;;  vfpfcnvrt       3    0        PTR void 
  8515 ;;  vfpfcnvrt       3    0        unsigned char [3]
  8516 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  8517 ;;  vfpfcnvrt       2    0        int 
  8518 ;;  vfpfcnvrt       2    0        int 
  8519 ;;  vfpfcnvrt       1    0        unsigned char 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  2   63[COMRAM] int 
  8522 ;; Registers used:
  8523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8529 ;;      Params:         6       0       0       0       0       0       0
  8530 ;;      Locals:         8       0       0       0       0       0       0
  8531 ;;      Temps:          2       0       0       0       0       0       0
  8532 ;;      Totals:        16       0       0       0       0       0       0
  8533 ;;Total ram usage:       16 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:    5
  8536 ;; This function calls:
  8537 ;;		i2_dtoa
  8538 ;;		i2_fputc
  8539 ;; This function is called by:
  8540 ;;		i2_vfprintf
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           psect	text35,class=CODE,space=0,reloc=2,group=0
  8544                           	line	670
  8545                           global __ptext35
  8546                           __ptext35:
  8547  00103E                     psect	text35
  8548                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  8549                           	line	670
  8550                           	global	__size_ofi2_vfpfcnvrt
  8551                           	__size_ofi2_vfpfcnvrt	equ	__end_ofi2_vfpfcnvrt-i2_vfpfcnvrt
  8552  0000                     	
  8553                           i2_vfpfcnvrt:
  8554  00103E                     ;incstack = 0
  8555                           	opt	stack 8
  8556                           	line	680
  8557                           	
  8558                           i2l2369:
  8559  00103E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8560                           	movff	(c:i2vfpfcnvrt@fmt),fsr2l
  8561  00103E  C042  FFD9         	movff	(c:i2vfpfcnvrt@fmt+1),fsr2h
  8562  001042  C043  FFDA         	movff	postinc2,tblptrl
  8563  001046  CFDE FFF6          	movff	postdec2,tblptrh
  8564  00104A  CFDD FFF7          	if	0	;tblptru may be non-zero
  8565  00104E                     	clrf	tblptru
  8567  00104E                     	if	0	;tblptru may be non-zero
  8568  00104E                     	global __mediumconst
  8569                           movlw	low highword(__mediumconst)
  8572  00104E                     	tblrd	*
  8573  00104E  0008               	
  8574                           	movf	tablat,w
  8575  001050  50F5               	xorlw	025h
  8576  001052  0A25               	btfss	status,2
  8577  001054  A4D8               	goto	i2u210_41
  8578  001056  EF2F  F008         	goto	i2u210_40
  8579  00105A  EF31  F008         i2u210_41:
  8580  00105E                     	goto	i2l2403
  8581  00105E  EFE5  F008         i2u210_40:
  8582  001062                     	line	681
  8583                           	
  8584                           i2l2371:
  8585  001062                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  8586                           	movff	(c:i2vfpfcnvrt@fmt),fsr2l
  8587  001062  C042  FFD9         	movff	(c:i2vfpfcnvrt@fmt+1),fsr2h
  8588  001066  C043  FFDA         	incf	postinc2
  8589  00106A  2ADE               	movlw	0
  8590  00106C  0E00               	addwfc	postdec2
  8591  00106E  22DD               	line	683
  8592                           	
  8593                           i2l2373:
  8594  001070                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  8595                           	movlw	high(0)
  8596  001070  0E00               	movlb	0	; () banked
  8597  001072  0100               	movwf	((_width+1))&0ffh
  8598  001074  6FF2               	movlw	low(0)
  8599  001076  0E00               	movwf	((_width))&0ffh
  8600  001078  6FF1               	movff	(_width),(_flags)
  8601  00107A  C0F1  F0F5         	movff	(_width+1),(_flags+1)
  8602  00107E  C0F2  F0F6         	line	684
  8603                           	
  8604                           i2l2375:; BSR set to: 0
  8605  001082                     
  8606                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  8607                           	setf	((_prec))&0ffh
  8608  001082  69F3               	setf	((_prec+1))&0ffh
  8609  001084  69F4               	line	825
  8610                           	
  8611                           i2l2377:; BSR set to: 0
  8612  001086                     
  8613                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 825:       
                                   if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8614                           	movff	(c:i2vfpfcnvrt@fmt),fsr2l
  8615  001086  C042  FFD9         	movff	(c:i2vfpfcnvrt@fmt+1),fsr2h
  8616  00108A  C043  FFDA         	movff	postinc2,tblptrl
  8617  00108E  CFDE FFF6          	movff	postdec2,tblptrh
  8618  001092  CFDD FFF7          	if	0	;tblptru may be non-zero
  8619  001096                     	clrf	tblptru
  8621  001096                     	if	0	;tblptru may be non-zero
  8622  001096                     	global __mediumconst
  8623                           movlw	low highword(__mediumconst)
  8626  001096                     	tblrd	*
  8627  001096  0008               	
  8628                           	movf	tablat,w
  8629  001098  50F5               	xorlw	064h
  8630  00109A  0A64               	btfsc	status,2
  8631  00109C  B4D8               	goto	i2u211_41
  8632  00109E  EF53  F008         	goto	i2u211_40
  8633  0010A2  EF55  F008         i2u211_41:
  8634  0010A6                     	goto	i2l2381
  8635  0010A6  EF69  F008         i2u211_40:
  8636  0010AA                     	
  8637                           i2l2379:; BSR set to: 0
  8638  0010AA                     
  8639                           	movff	(c:i2vfpfcnvrt@fmt),fsr2l
  8640  0010AA  C042  FFD9         	movff	(c:i2vfpfcnvrt@fmt+1),fsr2h
  8641  0010AE  C043  FFDA         	movff	postinc2,tblptrl
  8642  0010B2  CFDE FFF6          	movff	postdec2,tblptrh
  8643  0010B6  CFDD FFF7          	if	0	;tblptru may be non-zero
  8644  0010BA                     	clrf	tblptru
  8646  0010BA                     	if	0	;tblptru may be non-zero
  8647  0010BA                     	global __mediumconst
  8648                           movlw	low highword(__mediumconst)
  8651  0010BA                     	tblrd	*
  8652  0010BA  0008               	
  8653                           	movf	tablat,w
  8654  0010BC  50F5               	xorlw	069h
  8655  0010BE  0A69               	btfss	status,2
  8656  0010C0  A4D8               	goto	i2u212_41
  8657  0010C2  EF65  F008         	goto	i2u212_40
  8658  0010C6  EF67  F008         i2u212_41:
  8659  0010CA                     	goto	i2l2387
  8660  0010CA  EFAB  F008         i2u212_40:
  8661  0010CE                     	goto	i2l2381
  8662  0010CE  EF69  F008         	
  8663                           i2l242:; BSR set to: 0
  8664  0010D2                     
  8665                           	line	827
  8666                           	
  8667                           i2l2381:; BSR set to: 0
  8668  0010D2                     
  8669                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 827:       
                                       ++*fmt;
  8670                           	movff	(c:i2vfpfcnvrt@fmt),fsr2l
  8671  0010D2  C042  FFD9         	movff	(c:i2vfpfcnvrt@fmt+1),fsr2h
  8672  0010D6  C043  FFDA         	incf	postinc2
  8673  0010DA  2ADE               	movlw	0
  8674  0010DC  0E00               	addwfc	postdec2
  8675  0010DE  22DD               	line	828
  8676                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 828:       
                                       ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8677                           	movff	(c:i2vfpfcnvrt@ap),fsr2l
  8678  0010E0  C044  FFD9         	movff	(c:i2vfpfcnvrt@ap+1),fsr2h
  8679  0010E4  C045  FFDA         	movff	indf2,??i2_vfpfcnvrt+0+0
  8680  0010E8  CFDF F046          	movlw	low(02h)
  8681  0010EC  0E02               	addwf	postinc2
  8682  0010EE  26DE               	movff	indf2,??i2_vfpfcnvrt+0+0+1
  8683  0010F0  CFDF F047          	movlw	high(02h)
  8684  0010F4  0E00               	addwfc	postdec2
  8685  0010F6  22DD               	movff	??i2_vfpfcnvrt+0+0,fsr2l
  8686  0010F8  C046  FFD9         	movff	??i2_vfpfcnvrt+0+1,fsr2h
  8687  0010FC  C047  FFDA         	movff	postinc2,(c:i2vfpfcnvrt@ll)
  8688  001100  CFDE F048          	movff	postdec2,(c:i2vfpfcnvrt@ll+1)
  8689  001104  CFDD F049          	movlw	0
  8690  001108  0E00               	btfsc	((c:i2vfpfcnvrt@ll+1)),c,7
  8691  00110A  BE49               	movlw	-1
  8692  00110C  0EFF               	movwf	((c:i2vfpfcnvrt@ll+2)),c
  8693  00110E  6E4A               	movwf	((c:i2vfpfcnvrt@ll+3)),c
  8694  001110  6E4B               	movwf	((c:i2vfpfcnvrt@ll+4)),c
  8695  001112  6E4C               	movwf	((c:i2vfpfcnvrt@ll+5)),c
  8696  001114  6E4D               	movwf	((c:i2vfpfcnvrt@ll+6)),c
  8697  001116  6E4E               	movwf	((c:i2vfpfcnvrt@ll+7)),c
  8698  001118  6E4F               	line	830
  8699                           	
  8700                           i2l2383:; BSR set to: 0
  8701  00111A                     
  8702                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 830:       
                                       return dtoa(fp, ll);
  8703                           		movff	(c:i2vfpfcnvrt@fp),(c:i2dtoa@fp)
  8704  00111A  C040  F01C         	movff	(c:i2vfpfcnvrt@fp+1),(c:i2dtoa@fp+1)
  8705  00111E  C041  F01D         
  8706                           	movff	(c:i2vfpfcnvrt@ll),(c:i2dtoa@d)
  8707  001122  C048  F01E         	movff	(c:i2vfpfcnvrt@ll+1),(c:i2dtoa@d+1)
  8708  001126  C049  F01F         	movff	(c:i2vfpfcnvrt@ll+2),(c:i2dtoa@d+2)
  8709  00112A  C04A  F020         	movff	(c:i2vfpfcnvrt@ll+3),(c:i2dtoa@d+3)
  8710  00112E  C04B  F021         	movff	(c:i2vfpfcnvrt@ll+4),(c:i2dtoa@d+4)
  8711  001132  C04C  F022         	movff	(c:i2vfpfcnvrt@ll+5),(c:i2dtoa@d+5)
  8712  001136  C04D  F023         	movff	(c:i2vfpfcnvrt@ll+6),(c:i2dtoa@d+6)
  8713  00113A  C04E  F024         	movff	(c:i2vfpfcnvrt@ll+7),(c:i2dtoa@d+7)
  8714  00113E  C04F  F025         	call	i2_dtoa	;wreg free
  8715  001142  ECB7  F004         	movff	0+?i2_dtoa,(c:?i2_vfpfcnvrt)
  8716  001146  C01C  F040         	movff	1+?i2_dtoa,(c:?i2_vfpfcnvrt+1)
  8717  00114A  C01D  F041         	goto	i2l243
  8718  00114E  EF04  F009         	
  8719                           i2l2385:
  8720  001152                     	goto	i2l243
  8721  001152  EF04  F009         	line	831
  8722                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 831:       
                                   }
  8723                           	
  8724                           i2l240:
  8725  001156                     	line	1350
  8726                           	
  8727                           i2l2387:
  8728  001156                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  8729                           	movff	(c:i2vfpfcnvrt@fmt),fsr2l
  8730  001156  C042  FFD9         	movff	(c:i2vfpfcnvrt@fmt+1),fsr2h
  8731  00115A  C043  FFDA         	movff	postinc2,tblptrl
  8732  00115E  CFDE FFF6          	movff	postdec2,tblptrh
  8733  001162  CFDD FFF7          	if	0	;tblptru may be non-zero
  8734  001166                     	clrf	tblptru
  8736  001166                     	if	0	;tblptru may be non-zero
  8737  001166                     	global __mediumconst
  8738                           movlw	low highword(__mediumconst)
  8741  001166                     	tblrd	*
  8742  001166  0008               	
  8743                           	movf	tablat,w
  8744  001168  50F5               	xorlw	025h
  8745  00116A  0A25               	btfss	status,2
  8746  00116C  A4D8               	goto	i2u213_41
  8747  00116E  EFBB  F008         	goto	i2u213_40
  8748  001172  EFBD  F008         i2u213_41:
  8749  001176                     	goto	i2l2397
  8750  001176  EFD6  F008         i2u213_40:
  8751  00117A                     	line	1351
  8752                           	
  8753                           i2l2389:
  8754  00117A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  8755                           	movff	(c:i2vfpfcnvrt@fmt),fsr2l
  8756  00117A  C042  FFD9         	movff	(c:i2vfpfcnvrt@fmt+1),fsr2h
  8757  00117E  C043  FFDA         	incf	postinc2
  8758  001182  2ADE               	movlw	0
  8759  001184  0E00               	addwfc	postdec2
  8760  001186  22DD               	line	1352
  8761                           	
  8762                           i2l2391:
  8763  001188                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  8764                           	movlw	high(025h)
  8765  001188  0E00               	movwf	((c:i2fputc@c+1)),c
  8766  00118A  6E02               	movlw	low(025h)
  8767  00118C  0E25               	movwf	((c:i2fputc@c)),c
  8768  00118E  6E01               		movff	(c:i2vfpfcnvrt@fp),(c:i2fputc@fp)
  8769  001190  C040  F003         	movff	(c:i2vfpfcnvrt@fp+1),(c:i2fputc@fp+1)
  8770  001194  C041  F004         
  8771                           	call	i2_fputc	;wreg free
  8772  001198  EC16  F00F         	line	1353
  8773                           	
  8774                           i2l2393:
  8775  00119C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  8776                           	movlw	high(01h)
  8777  00119C  0E00               	movwf	((c:?i2_vfpfcnvrt+1)),c
  8778  00119E  6E41               	movlw	low(01h)
  8779  0011A0  0E01               	movwf	((c:?i2_vfpfcnvrt)),c
  8780  0011A2  6E40               	goto	i2l243
  8781  0011A4  EF04  F009         	
  8782                           i2l2395:
  8783  0011A8                     	goto	i2l243
  8784  0011A8  EF04  F009         	line	1354
  8785                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  8786                           	
  8787                           i2l244:
  8788  0011AC                     	line	1357
  8789                           	
  8790                           i2l2397:
  8791  0011AC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  8792                           	movff	(c:i2vfpfcnvrt@fmt),fsr2l
  8793  0011AC  C042  FFD9         	movff	(c:i2vfpfcnvrt@fmt+1),fsr2h
  8794  0011B0  C043  FFDA         	incf	postinc2
  8795  0011B4  2ADE               	movlw	0
  8796  0011B6  0E00               	addwfc	postdec2
  8797  0011B8  22DD               	line	1358
  8798                           	
  8799                           i2l2399:
  8800  0011BA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  8801                           	movlw	high(0)
  8802  0011BA  0E00               	movwf	((c:?i2_vfpfcnvrt+1)),c
  8803  0011BC  6E41               	movlw	low(0)
  8804  0011BE  0E00               	movwf	((c:?i2_vfpfcnvrt)),c
  8805  0011C0  6E40               	goto	i2l243
  8806  0011C2  EF04  F009         	
  8807                           i2l2401:
  8808  0011C6                     	goto	i2l243
  8809  0011C6  EF04  F009         	line	1359
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  8811                           	
  8812                           i2l239:
  8813  0011CA                     	line	1362
  8814                           	
  8815                           i2l2403:
  8816  0011CA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  8817                           	movff	(c:i2vfpfcnvrt@fmt),fsr2l
  8818  0011CA  C042  FFD9         	movff	(c:i2vfpfcnvrt@fmt+1),fsr2h
  8819  0011CE  C043  FFDA         	movff	postinc2,tblptrl
  8820  0011D2  CFDE FFF6          	movff	postdec2,tblptrh
  8821  0011D6  CFDD FFF7          	if	0	;tblptru may be non-zero
  8822  0011DA                     	clrf	tblptru
  8824  0011DA                     	if	0	;tblptru may be non-zero
  8825  0011DA                     	global __mediumconst
  8826                           movlw	low highword(__mediumconst)
  8829  0011DA                     	tblrd	*
  8830  0011DA  0008               	
  8831                           	movf	tablat,w
  8832  0011DC  50F5               
  8833                           	movwf	((c:i2fputc@c)),c
  8834  0011DE  6E01               	clrf	((c:i2fputc@c+1)),c
  8835  0011E0  6A02               		movff	(c:i2vfpfcnvrt@fp),(c:i2fputc@fp)
  8836  0011E2  C040  F003         	movff	(c:i2vfpfcnvrt@fp+1),(c:i2fputc@fp+1)
  8837  0011E6  C041  F004         
  8838                           	call	i2_fputc	;wreg free
  8839  0011EA  EC16  F00F         	line	1363
  8840                           	
  8841                           i2l2405:
  8842  0011EE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  8843                           	movff	(c:i2vfpfcnvrt@fmt),fsr2l
  8844  0011EE  C042  FFD9         	movff	(c:i2vfpfcnvrt@fmt+1),fsr2h
  8845  0011F2  C043  FFDA         	incf	postinc2
  8846  0011F6  2ADE               	movlw	0
  8847  0011F8  0E00               	addwfc	postdec2
  8848  0011FA  22DD               	line	1364
  8849                           	
  8850                           i2l2407:
  8851  0011FC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  8852                           	movlw	high(01h)
  8853  0011FC  0E00               	movwf	((c:?i2_vfpfcnvrt+1)),c
  8854  0011FE  6E41               	movlw	low(01h)
  8855  001200  0E01               	movwf	((c:?i2_vfpfcnvrt)),c
  8856  001202  6E40               	goto	i2l243
  8857  001204  EF04  F009         	
  8858                           i2l2409:
  8859  001208                     	line	1365
  8860                           	
  8861                           i2l243:
  8862  001208                     	return	;funcret
  8863  001208  0012               	opt stack 0
  8864                           GLOBAL	__end_ofi2_vfpfcnvrt
  8865                           	__end_ofi2_vfpfcnvrt:
  8866  00120A                     	signat	i2_vfpfcnvrt,90
  8867                           	global	i2_dtoa
  8868                           
  8869 ;; *************** function i2_dtoa *****************
  8870 ;; Defined at:
  8871 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8874 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  8875 ;;  d               8   29[COMRAM] long long 
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  dtoa            8   53[COMRAM] long long 
  8878 ;;  dtoa            2   61[COMRAM] int 
  8879 ;;  dtoa            2   51[COMRAM] int 
  8880 ;;  dtoa            2   49[COMRAM] int 
  8881 ;;  dtoa            2   47[COMRAM] int 
  8882 ;; Return value:  Size  Location     Type
  8883 ;;                  2   27[COMRAM] int 
  8884 ;; Registers used:
  8885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8891 ;;      Params:        10       0       0       0       0       0       0
  8892 ;;      Locals:        18       0       0       0       0       0       0
  8893 ;;      Temps:          8       0       0       0       0       0       0
  8894 ;;      Totals:        36       0       0       0       0       0       0
  8895 ;;Total ram usage:       36 bytes
  8896 ;; Hardware stack levels used:    1
  8897 ;; Hardware stack levels required when called:    4
  8898 ;; This function calls:
  8899 ;;		i2___aodiv
  8900 ;;		i2___aomod
  8901 ;;		i2_abs
  8902 ;;		i2_pad
  8903 ;; This function is called by:
  8904 ;;		i2_vfpfcnvrt
  8905 ;; This function uses a non-reentrant model
  8906 ;;
  8907                           psect	text36,class=CODE,space=0,reloc=2,group=0
  8908                           	line	274
  8909                           global __ptext36
  8910                           __ptext36:
  8911  00096E                     psect	text36
  8912                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  8913                           	line	274
  8914                           	global	__size_ofi2_dtoa
  8915                           	__size_ofi2_dtoa	equ	__end_ofi2_dtoa-i2_dtoa
  8916  0000                     	
  8917                           i2_dtoa:
  8918  00096E                     ;incstack = 0
  8919                           	opt	stack 8
  8920                           	line	280
  8921                           	
  8922                           i2l2249:
  8923  00096E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 274: static
                                  int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\
                                 c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\c
                                 ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\
                                 sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
                                 v2.00\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8924                           	movff	(c:i2dtoa@d),(c:i2dtoa@n)
  8925  00096E  C01E  F036         	movff	(c:i2dtoa@d+1),(c:i2dtoa@n+1)
  8926  000972  C01F  F037         	movff	(c:i2dtoa@d+2),(c:i2dtoa@n+2)
  8927  000976  C020  F038         	movff	(c:i2dtoa@d+3),(c:i2dtoa@n+3)
  8928  00097A  C021  F039         	movff	(c:i2dtoa@d+4),(c:i2dtoa@n+4)
  8929  00097E  C022  F03A         	movff	(c:i2dtoa@d+5),(c:i2dtoa@n+5)
  8930  000982  C023  F03B         	movff	(c:i2dtoa@d+6),(c:i2dtoa@n+6)
  8931  000986  C024  F03C         	movff	(c:i2dtoa@d+7),(c:i2dtoa@n+7)
  8932  00098A  C025  F03D         	line	281
  8933                           	
  8934                           i2l2251:
  8935  00098E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 281:     s 
                                 = n < 0 ? 1 : 0;
  8936                           	btfsc	((c:i2dtoa@n+7)),c,7
  8937  00098E  BE3D               	goto	i2u191_41
  8938  000990  EFCC  F004         	goto	i2u191_40
  8939  000994  EFCF  F004         
  8940                           i2u191_41:
  8941  000998                     	movlw	1
  8942  000998  0E01               	goto	i2u192_40
  8943  00099A  EFD0  F004         i2u191_40:
  8944  00099E                     	movlw	0
  8945  00099E  0E00               i2u192_40:
  8946  0009A0                     	movwf	((c:i2dtoa@s)),c
  8947  0009A0  6E34               	clrf	((c:i2dtoa@s+1)),c
  8948  0009A2  6A35               	line	282
  8949                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 282:     if
                                  (s) {
  8950                           	movf	((c:i2dtoa@s)),c,w
  8951  0009A4  5034               iorwf	((c:i2dtoa@s+1)),c,w
  8952  0009A6  1035               	btfsc	status,2
  8953  0009A8  B4D8               	goto	i2u193_41
  8954  0009AA  EFD9  F004         	goto	i2u193_40
  8955  0009AE  EFDB  F004         
  8956                           i2u193_41:
  8957  0009B2                     	goto	i2l2255
  8958  0009B2  EFED  F004         i2u193_40:
  8959  0009B6                     	line	283
  8960                           	
  8961                           i2l2253:
  8962  0009B6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 283:       
                                   n = -n;
  8963                           	comf	((c:i2dtoa@n+7)),c
  8964  0009B6  1E3D               	comf	((c:i2dtoa@n+6)),c
  8965  0009B8  1E3C               	comf	((c:i2dtoa@n+5)),c
  8966  0009BA  1E3B               	comf	((c:i2dtoa@n+4)),c
  8967  0009BC  1E3A               	comf	((c:i2dtoa@n+3)),c
  8968  0009BE  1E39               	comf	((c:i2dtoa@n+2)),c
  8969  0009C0  1E38               	comf	((c:i2dtoa@n+1)),c
  8970  0009C2  1E37               	negf	((c:i2dtoa@n)),c
  8971  0009C4  6C36               	movlw	0
  8972  0009C6  0E00               	addwfc	((c:i2dtoa@n+1)),c
  8973  0009C8  2237               	addwfc	((c:i2dtoa@n+2)),c
  8974  0009CA  2238               	addwfc	((c:i2dtoa@n+3)),c
  8975  0009CC  2239               	addwfc	((c:i2dtoa@n+4)),c
  8976  0009CE  223A               	addwfc	((c:i2dtoa@n+5)),c
  8977  0009D0  223B               	addwfc	((c:i2dtoa@n+6)),c
  8978  0009D2  223C               	addwfc	((c:i2dtoa@n+7)),c
  8979  0009D4  223D               	goto	i2l2255
  8980  0009D6  EFED  F004         	line	284
  8981                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 284:     }

  8982                           	
  8983                           i2l213:
  8984  0009DA                     	line	287
  8985                           	
  8986                           i2l2255:
  8987  0009DA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 287:     if
                                  (!(prec < 0)) {
  8988                           	movlb	0	; () banked
  8989  0009DA  0100               	btfsc	((_prec+1))&0ffh,7
  8990  0009DC  BFF4               	goto	i2u194_41
  8991  0009DE  EFF3  F004         	goto	i2u194_40
  8992  0009E2  EFF5  F004         
  8993                           i2u194_41:
  8994  0009E6                     	goto	i2l2259
  8995  0009E6  EFF8  F004         i2u194_40:
  8996  0009EA                     	line	288
  8997                           	
  8998                           i2l2257:; BSR set to: 0
  8999  0009EA                     
  9000                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 288:       
                                   flags &= ~(1 << 1);
  9001                           	bcf	(0+(1/8)+(_flags))&0ffh,(1)&7
  9002  0009EA  93F5               	goto	i2l2259
  9003  0009EC  EFF8  F004         	line	289
  9004                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 289:     }

  9005                           	
  9006                           i2l214:; BSR set to: 0
  9007  0009F0                     
  9008                           	line	290
  9009                           	
  9010                           i2l2259:; BSR set to: 0
  9011  0009F0                     
  9012                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 290:     p 
                                 = (0 < prec) ? prec : 1;
  9013                           	btfsc	((_prec+1))&0ffh,7
  9014  0009F0  BFF4               	goto	i2u195_40
  9015  0009F2  EF05  F005         	movf	((_prec+1))&0ffh,w
  9016  0009F6  51F4               	bnz	i2u195_41
  9017  0009F8  E106               	decf	((_prec))&0ffh,w
  9018  0009FA  05F3               	btfsc	status,0
  9019  0009FC  B0D8               	goto	i2u195_41
  9020  0009FE  EF03  F005         	goto	i2u195_40
  9021  000A02  EF05  F005         
  9022                           i2u195_41:
  9023  000A06                     	goto	i2l216
  9024  000A06  EF0B  F005         i2u195_40:
  9025  000A0A                     	
  9026                           i2l2261:; BSR set to: 0
  9027  000A0A                     
  9028                           	movlw	high(01h)
  9029  000A0A  0E00               	movwf	((c:i2dtoa@p+1)),c
  9030  000A0C  6E31               	movlw	low(01h)
  9031  000A0E  0E01               	movwf	((c:i2dtoa@p)),c
  9032  000A10  6E30               	goto	i2l218
  9033  000A12  EF0F  F005         	
  9034                           i2l216:; BSR set to: 0
  9035  000A16                     
  9036                           	movff	(_prec),(c:i2dtoa@p)
  9037  000A16  C0F3  F030         	movff	(_prec+1),(c:i2dtoa@p+1)
  9038  000A1A  C0F4  F031         	
  9039                           i2l218:; BSR set to: 0
  9040  000A1E                     
  9041                           	line	291
  9042                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 291:     w 
                                 = width;
  9043                           	movff	(_width),(c:i2dtoa@w)
  9044  000A1E  C0F1  F032         	movff	(_width+1),(c:i2dtoa@w+1)
  9045  000A22  C0F2  F033         	line	292
  9046                           	
  9047                           i2l2263:; BSR set to: 0
  9048  000A26                     
  9049                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 292:     if
                                  (s || (flags & (1 << 2))) {
  9050                           	movf	((c:i2dtoa@s)),c,w
  9051  000A26  5034               iorwf	((c:i2dtoa@s+1)),c,w
  9052  000A28  1035               	btfss	status,2
  9053  000A2A  A4D8               	goto	i2u196_41
  9054  000A2C  EF1A  F005         	goto	i2u196_40
  9055  000A30  EF1C  F005         
  9056                           i2u196_41:
  9057  000A34                     	goto	i2l2267
  9058  000A34  EF25  F005         i2u196_40:
  9059  000A38                     	
  9060                           i2l2265:; BSR set to: 0
  9061  000A38                     
  9062                           	
  9063                           	btfss	((_flags))&0ffh,(2)&7
  9064  000A38  A5F5               	goto	i2u197_41
  9065  000A3A  EF21  F005         	goto	i2u197_40
  9066  000A3E  EF23  F005         i2u197_41:
  9067  000A42                     	goto	i2l2269
  9068  000A42  EF2A  F005         i2u197_40:
  9069  000A46                     	goto	i2l2267
  9070  000A46  EF25  F005         	
  9071                           i2l221:; BSR set to: 0
  9072  000A4A                     
  9073                           	line	293
  9074                           	
  9075                           i2l2267:; BSR set to: 0
  9076  000A4A                     
  9077                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 293:       
                                   --w;
  9078                           	decf	((c:i2dtoa@w)),c
  9079  000A4A  0632               	btfss	status,0
  9080  000A4C  A0D8               	decf	((c:i2dtoa@w+1)),c
  9081  000A4E  0633               	goto	i2l2269
  9082  000A50  EF2A  F005         	line	294
  9083                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 294:     }

  9084                           	
  9085                           i2l219:; BSR set to: 0
  9086  000A54                     
  9087                           	line	297
  9088                           	
  9089                           i2l2269:; BSR set to: 0
  9090  000A54                     
  9091                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 297:     i 
                                 = sizeof(dbuf) - 1;
  9092                           	movlw	high(01Fh)
  9093  000A54  0E00               	movwf	((c:i2dtoa@i+1)),c
  9094  000A56  6E3F               	movlw	low(01Fh)
  9095  000A58  0E1F               	movwf	((c:i2dtoa@i)),c
  9096  000A5A  6E3E               	line	298
  9097                           	
  9098                           i2l2271:; BSR set to: 0
  9099  000A5C                     
  9100                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 298:     db
                                 uf[i] = '\0';
  9101                           	movlw	low(_dbuf)
  9102  000A5C  0E00               	addwf	((c:i2dtoa@i)),c,w
  9103  000A5E  243E               	movwf	c:fsr2l
  9104  000A60  6ED9               	movlw	high(_dbuf)
  9105  000A62  0E01               	addwfc	((c:i2dtoa@i+1)),c,w
  9106  000A64  203F               	movwf	1+c:fsr2l
  9107  000A66  6EDA               	movlw	low(0)
  9108  000A68  0E00               	movwf	indf2
  9109  000A6A  6EDF               	line	299
  9110                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9111                           	goto	i2l2283
  9112  000A6C  EFB6  F005         	
  9113                           i2l223:; BSR set to: 0
  9114  000A70                     
  9115                           	line	300
  9116                           	
  9117                           i2l2273:
  9118  000A70                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 300:       
                                   --i;
  9119                           	decf	((c:i2dtoa@i)),c
  9120  000A70  063E               	btfss	status,0
  9121  000A72  A0D8               	decf	((c:i2dtoa@i+1)),c
  9122  000A74  063F               	line	301
  9123                           	
  9124                           i2l2275:
  9125  000A76                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 301:       
                                   dbuf[i] = '0' + abs(n % 10);
  9126                           	movlw	low(_dbuf)
  9127  000A76  0E00               	addwf	((c:i2dtoa@i)),c,w
  9128  000A78  243E               	movwf	c:fsr2l
  9129  000A7A  6ED9               	movlw	high(_dbuf)
  9130  000A7C  0E01               	addwfc	((c:i2dtoa@i+1)),c,w
  9131  000A7E  203F               	movwf	1+c:fsr2l
  9132  000A80  6EDA               	movff	(c:i2dtoa@n),(c:i2___aomod@dividend)
  9133  000A82  C036  F001         	movff	(c:i2dtoa@n+1),(c:i2___aomod@dividend+1)
  9134  000A86  C037  F002         	movff	(c:i2dtoa@n+2),(c:i2___aomod@dividend+2)
  9135  000A8A  C038  F003         	movff	(c:i2dtoa@n+3),(c:i2___aomod@dividend+3)
  9136  000A8E  C039  F004         	movff	(c:i2dtoa@n+4),(c:i2___aomod@dividend+4)
  9137  000A92  C03A  F005         	movff	(c:i2dtoa@n+5),(c:i2___aomod@dividend+5)
  9138  000A96  C03B  F006         	movff	(c:i2dtoa@n+6),(c:i2___aomod@dividend+6)
  9139  000A9A  C03C  F007         	movff	(c:i2dtoa@n+7),(c:i2___aomod@dividend+7)
  9140  000A9E  C03D  F008         	movlw	byte0(0Ah)
  9141  000AA2  0E0A               	movwf	((c:i2___aomod@divisor)),c
  9142  000AA4  6E09               	movlw	byte1(0Ah)
  9143  000AA6  0E00               	movwf	((c:i2___aomod@divisor+1)),c
  9144  000AA8  6E0A               	movlw	byte2(0Ah)
  9145  000AAA  0E00               	movwf	((c:i2___aomod@divisor+2)),c
  9146  000AAC  6E0B               	movlw	byte3(0Ah)
  9147  000AAE  0E00               	movwf	((c:i2___aomod@divisor+3)),c
  9148  000AB0  6E0C               	movlw	byte4(0Ah)
  9149  000AB2  0E00               	movwf	((c:i2___aomod@divisor+4)),c
  9150  000AB4  6E0D               	movlw	byte5(0Ah)
  9151  000AB6  0E00               	movwf	((c:i2___aomod@divisor+5)),c
  9152  000AB8  6E0E               	movlw	byte6(0Ah)
  9153  000ABA  0E00               	movwf	((c:i2___aomod@divisor+6)),c
  9154  000ABC  6E0F               	movlw	byte7(0Ah)
  9155  000ABE  0E00               	movwf	((c:i2___aomod@divisor+7)),c
  9156  000AC0  6E10               	call	i2___aomod	;wreg free
  9157  000AC2  EC7D  F00B         	movff	0+?i2___aomod,??i2_dtoa+0+0
  9158  000AC6  C001  F026         	movff	1+?i2___aomod,??i2_dtoa+0+0+1
  9159  000ACA  C002  F027         	movff	2+?i2___aomod,??i2_dtoa+0+0+2
  9160  000ACE  C003  F028         	movff	3+?i2___aomod,??i2_dtoa+0+0+3
  9161  000AD2  C004  F029         	movff	4+?i2___aomod,??i2_dtoa+0+0+4
  9162  000AD6  C005  F02A         	movff	5+?i2___aomod,??i2_dtoa+0+0+5
  9163  000ADA  C006  F02B         	movff	6+?i2___aomod,??i2_dtoa+0+0+6
  9164  000ADE  C007  F02C         	movff	7+?i2___aomod,??i2_dtoa+0+0+7
  9165  000AE2  C008  F02D         	
  9166                           	movff	??i2_dtoa+0+0,(c:i2abs@a)
  9167  000AE6  C026  F013         	movff	??i2_dtoa+0+2,(c:i2abs@a+1)
  9168  000AEA  C028  F014         	call	i2_abs	;wreg free
  9169  000AEE  EC2B  F013         	movf	(0+?i2_abs),c,w
  9170  000AF2  5013               	addlw	low(030h)
  9171  000AF4  0F30               	movwf	indf2,c
  9172  000AF6  6EDF               
  9173                           	line	302
  9174                           	
  9175                           i2l2277:
  9176  000AF8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 302:       
                                   --p;
  9177                           	decf	((c:i2dtoa@p)),c
  9178  000AF8  0630               	btfss	status,0
  9179  000AFA  A0D8               	decf	((c:i2dtoa@p+1)),c
  9180  000AFC  0631               	line	303
  9181                           	
  9182                           i2l2279:
  9183  000AFE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 303:       
                                   --w;
  9184                           	decf	((c:i2dtoa@w)),c
  9185  000AFE  0632               	btfss	status,0
  9186  000B00  A0D8               	decf	((c:i2dtoa@w+1)),c
  9187  000B02  0633               	line	304
  9188                           	
  9189                           i2l2281:
  9190  000B04                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 304:       
                                   n = n / 10;
  9191                           	movff	(c:i2dtoa@n),(c:i2___aodiv@dividend)
  9192  000B04  C036  F001         	movff	(c:i2dtoa@n+1),(c:i2___aodiv@dividend+1)
  9193  000B08  C037  F002         	movff	(c:i2dtoa@n+2),(c:i2___aodiv@dividend+2)
  9194  000B0C  C038  F003         	movff	(c:i2dtoa@n+3),(c:i2___aodiv@dividend+3)
  9195  000B10  C039  F004         	movff	(c:i2dtoa@n+4),(c:i2___aodiv@dividend+4)
  9196  000B14  C03A  F005         	movff	(c:i2dtoa@n+5),(c:i2___aodiv@dividend+5)
  9197  000B18  C03B  F006         	movff	(c:i2dtoa@n+6),(c:i2___aodiv@dividend+6)
  9198  000B1C  C03C  F007         	movff	(c:i2dtoa@n+7),(c:i2___aodiv@dividend+7)
  9199  000B20  C03D  F008         	movlw	byte0(0Ah)
  9200  000B24  0E0A               	movwf	((c:i2___aodiv@divisor)),c
  9201  000B26  6E09               	movlw	byte1(0Ah)
  9202  000B28  0E00               	movwf	((c:i2___aodiv@divisor+1)),c
  9203  000B2A  6E0A               	movlw	byte2(0Ah)
  9204  000B2C  0E00               	movwf	((c:i2___aodiv@divisor+2)),c
  9205  000B2E  6E0B               	movlw	byte3(0Ah)
  9206  000B30  0E00               	movwf	((c:i2___aodiv@divisor+3)),c
  9207  000B32  6E0C               	movlw	byte4(0Ah)
  9208  000B34  0E00               	movwf	((c:i2___aodiv@divisor+4)),c
  9209  000B36  6E0D               	movlw	byte5(0Ah)
  9210  000B38  0E00               	movwf	((c:i2___aodiv@divisor+5)),c
  9211  000B3A  6E0E               	movlw	byte6(0Ah)
  9212  000B3C  0E00               	movwf	((c:i2___aodiv@divisor+6)),c
  9213  000B3E  6E0F               	movlw	byte7(0Ah)
  9214  000B40  0E00               	movwf	((c:i2___aodiv@divisor+7)),c
  9215  000B42  6E10               	call	i2___aodiv	;wreg free
  9216  000B44  ECDE  F009         	movff	0+?i2___aodiv,(c:i2dtoa@n)
  9217  000B48  C001  F036         	movff	1+?i2___aodiv,(c:i2dtoa@n+1)
  9218  000B4C  C002  F037         	movff	2+?i2___aodiv,(c:i2dtoa@n+2)
  9219  000B50  C003  F038         	movff	3+?i2___aodiv,(c:i2dtoa@n+3)
  9220  000B54  C004  F039         	movff	4+?i2___aodiv,(c:i2dtoa@n+4)
  9221  000B58  C005  F03A         	movff	5+?i2___aodiv,(c:i2dtoa@n+5)
  9222  000B5C  C006  F03B         	movff	6+?i2___aodiv,(c:i2dtoa@n+6)
  9223  000B60  C007  F03C         	movff	7+?i2___aodiv,(c:i2dtoa@n+7)
  9224  000B64  C008  F03D         	
  9225                           	goto	i2l2283
  9226  000B68  EFB6  F005         	line	305
  9227                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 305:     }

  9228                           	
  9229                           i2l222:
  9230  000B6C                     	line	299
  9231                           	
  9232                           i2l2283:
  9233  000B6C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9234                           	btfsc	((c:i2dtoa@i+1)),c,7
  9235  000B6C  BE3F               	goto	i2u198_41
  9236  000B6E  EFC1  F005         	movf	((c:i2dtoa@i+1)),c,w
  9237  000B72  503F               	bnz	i2u198_40
  9238  000B74  E108               	decf	((c:i2dtoa@i)),c,w
  9239  000B76  043E               	btfss	status,0
  9240  000B78  A0D8               	goto	i2u198_41
  9241  000B7A  EFC1  F005         	goto	i2u198_40
  9242  000B7E  EFC3  F005         
  9243                           i2u198_41:
  9244  000B82                     	goto	i2l2293
  9245  000B82  EFFA  F005         i2u198_40:
  9246  000B86                     	
  9247                           i2l2285:
  9248  000B86                     	movf	((c:i2dtoa@n)),c,w
  9249  000B86  5036               iorwf	((c:i2dtoa@n+1)),c,w
  9250  000B88  1037               iorwf	((c:i2dtoa@n+2)),c,w
  9251  000B8A  1038               iorwf	((c:i2dtoa@n+3)),c,w
  9252  000B8C  1039               iorwf	((c:i2dtoa@n+4)),c,w
  9253  000B8E  103A               iorwf	((c:i2dtoa@n+5)),c,w
  9254  000B90  103B               iorwf	((c:i2dtoa@n+6)),c,w
  9255  000B92  103C               iorwf	((c:i2dtoa@n+7)),c,w
  9256  000B94  103D               	btfss	status,2
  9257  000B96  A4D8               	goto	i2u199_41
  9258  000B98  EFD0  F005         	goto	i2u199_40
  9259  000B9C  EFD2  F005         
  9260                           i2u199_41:
  9261  000BA0                     	goto	i2l2273
  9262  000BA0  EF38  F005         i2u199_40:
  9263  000BA4                     	
  9264                           i2l2287:
  9265  000BA4                     	btfsc	((c:i2dtoa@p+1)),c,7
  9266  000BA4  BE31               	goto	i2u200_40
  9267  000BA6  EFDF  F005         	movf	((c:i2dtoa@p+1)),c,w
  9268  000BAA  5031               	bnz	i2u200_41
  9269  000BAC  E106               	decf	((c:i2dtoa@p)),c,w
  9270  000BAE  0430               	btfsc	status,0
  9271  000BB0  B0D8               	goto	i2u200_41
  9272  000BB2  EFDD  F005         	goto	i2u200_40
  9273  000BB6  EFDF  F005         
  9274                           i2u200_41:
  9275  000BBA                     	goto	i2l2273
  9276  000BBA  EF38  F005         i2u200_40:
  9277  000BBE                     	
  9278                           i2l2289:
  9279  000BBE                     	btfsc	((c:i2dtoa@w+1)),c,7
  9280  000BBE  BE33               	goto	i2u201_41
  9281  000BC0  EFEA  F005         	movf	((c:i2dtoa@w+1)),c,w
  9282  000BC4  5033               	bnz	i2u201_40
  9283  000BC6  E108               	decf	((c:i2dtoa@w)),c,w
  9284  000BC8  0432               	btfss	status,0
  9285  000BCA  A0D8               	goto	i2u201_41
  9286  000BCC  EFEA  F005         	goto	i2u201_40
  9287  000BD0  EFEC  F005         
  9288                           i2u201_41:
  9289  000BD4                     	goto	i2l2293
  9290  000BD4  EFFA  F005         i2u201_40:
  9291  000BD8                     	
  9292                           i2l2291:
  9293  000BD8                     	movlb	0	; () banked
  9294  000BD8  0100               	
  9295                           	btfsc	((_flags))&0ffh,(1)&7
  9296  000BDA  B3F5               	goto	i2u202_41
  9297  000BDC  EFF2  F005         	goto	i2u202_40
  9298  000BE0  EFF4  F005         i2u202_41:
  9299  000BE4                     	goto	i2l2273
  9300  000BE4  EF38  F005         i2u202_40:
  9301  000BE8                     	goto	i2l2293
  9302  000BE8  EFFA  F005         	
  9303                           i2l227:; BSR set to: 0
  9304  000BEC                     
  9305                           	goto	i2l2293
  9306  000BEC  EFFA  F005         	
  9307                           i2l225:; BSR set to: 0
  9308  000BF0                     
  9309                           	goto	i2l2293
  9310  000BF0  EFFA  F005         	
  9311                           i2l228:; BSR set to: 0
  9312  000BF4                     
  9313                           	line	308
  9314                           	
  9315                           i2l2293:
  9316  000BF4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 308:     if
                                  (s || (flags & (1 << 2))) {
  9317                           	movf	((c:i2dtoa@s)),c,w
  9318  000BF4  5034               iorwf	((c:i2dtoa@s+1)),c,w
  9319  000BF6  1035               	btfss	status,2
  9320  000BF8  A4D8               	goto	i2u203_41
  9321  000BFA  EF01  F006         	goto	i2u203_40
  9322  000BFE  EF03  F006         
  9323                           i2u203_41:
  9324  000C02                     	goto	i2l2297
  9325  000C02  EF0D  F006         i2u203_40:
  9326  000C06                     	
  9327                           i2l2295:
  9328  000C06                     	movlb	0	; () banked
  9329  000C06  0100               	
  9330                           	btfss	((_flags))&0ffh,(2)&7
  9331  000C08  A5F5               	goto	i2u204_41
  9332  000C0A  EF09  F006         	goto	i2u204_40
  9333  000C0E  EF0B  F006         i2u204_41:
  9334  000C12                     	goto	i2l2307
  9335  000C12  EF2F  F006         i2u204_40:
  9336  000C16                     	goto	i2l2297
  9337  000C16  EF0D  F006         	
  9338                           i2l231:; BSR set to: 0
  9339  000C1A                     
  9340                           	line	309
  9341                           	
  9342                           i2l2297:
  9343  000C1A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 309:       
                                   --i;
  9344                           	decf	((c:i2dtoa@i)),c
  9345  000C1A  063E               	btfss	status,0
  9346  000C1C  A0D8               	decf	((c:i2dtoa@i+1)),c
  9347  000C1E  063F               	line	310
  9348                           	
  9349                           i2l2299:
  9350  000C20                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 310:       
                                   dbuf[i] = s ? '-' : '+';
  9351                           	movf	((c:i2dtoa@s)),c,w
  9352  000C20  5034               iorwf	((c:i2dtoa@s+1)),c,w
  9353  000C22  1035               	btfss	status,2
  9354  000C24  A4D8               	goto	i2u205_41
  9355  000C26  EF17  F006         	goto	i2u205_40
  9356  000C2A  EF19  F006         
  9357                           i2u205_41:
  9358  000C2E                     	goto	i2l2303
  9359  000C2E  EF1F  F006         i2u205_40:
  9360  000C32                     	
  9361                           i2l2301:
  9362  000C32                     	movlw	high(02Bh)
  9363  000C32  0E00               	movwf	((c:i2_dtoa$344+1)),c
  9364  000C34  6E2F               	movlw	low(02Bh)
  9365  000C36  0E2B               	movwf	((c:i2_dtoa$344)),c
  9366  000C38  6E2E               	goto	i2l2305
  9367  000C3A  EF25  F006         	
  9368                           i2l233:
  9369  000C3E                     	
  9370                           i2l2303:
  9371  000C3E                     	movlw	high(02Dh)
  9372  000C3E  0E00               	movwf	((c:i2_dtoa$344+1)),c
  9373  000C40  6E2F               	movlw	low(02Dh)
  9374  000C42  0E2D               	movwf	((c:i2_dtoa$344)),c
  9375  000C44  6E2E               	goto	i2l2305
  9376  000C46  EF25  F006         	
  9377                           i2l235:
  9378  000C4A                     	
  9379                           i2l2305:
  9380  000C4A                     	movlw	low(_dbuf)
  9381  000C4A  0E00               	addwf	((c:i2dtoa@i)),c,w
  9382  000C4C  243E               	movwf	c:fsr2l
  9383  000C4E  6ED9               	movlw	high(_dbuf)
  9384  000C50  0E01               	addwfc	((c:i2dtoa@i+1)),c,w
  9385  000C52  203F               	movwf	1+c:fsr2l
  9386  000C54  6EDA               	movff	(c:i2_dtoa$344),indf2
  9387  000C56  C02E  FFDF         
  9388                           	goto	i2l2307
  9389  000C5A  EF2F  F006         	line	311
  9390                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 311:     }

  9391                           	
  9392                           i2l229:
  9393  000C5E                     	line	314
  9394                           	
  9395                           i2l2307:
  9396  000C5E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 314:     re
                                 turn pad(fp, &dbuf[i], w);
  9397                           		movff	(c:i2dtoa@fp),(c:i2pad@fp)
  9398  000C5E  C01C  F011         	movff	(c:i2dtoa@fp+1),(c:i2pad@fp+1)
  9399  000C62  C01D  F012         
  9400                           	movlw	low(_dbuf)
  9401  000C66  0E00               	addwf	((c:i2dtoa@i)),c,w
  9402  000C68  243E               	movwf	((c:i2pad@buf)),c
  9403  000C6A  6E13               	movlw	high(_dbuf)
  9404  000C6C  0E01               	addwfc	((c:i2dtoa@i+1)),c,w
  9405  000C6E  203F               	movwf	1+((c:i2pad@buf)),c
  9406  000C70  6E14               	movff	(c:i2dtoa@w),(c:i2pad@p)
  9407  000C72  C032  F015         	movff	(c:i2dtoa@w+1),(c:i2pad@p+1)
  9408  000C76  C033  F016         	call	i2_pad	;wreg free
  9409  000C7A  ECF2  F00F         	movff	0+?i2_pad,(c:?i2_dtoa)
  9410  000C7E  C011  F01C         	movff	1+?i2_pad,(c:?i2_dtoa+1)
  9411  000C82  C012  F01D         	goto	i2l236
  9412  000C86  EF45  F006         	
  9413                           i2l2309:
  9414  000C8A                     	line	315
  9415                           	
  9416                           i2l236:
  9417  000C8A                     	return	;funcret
  9418  000C8A  0012               	opt stack 0
  9419                           GLOBAL	__end_ofi2_dtoa
  9420                           	__end_ofi2_dtoa:
  9421  000C8C                     	signat	i2_dtoa,90
  9422                           	global	i2_pad
  9423                           
  9424 ;; *************** function i2_pad *****************
  9425 ;; Defined at:
  9426 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9429 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  9430 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9431 ;;		 -> dbuf(32), 
  9432 ;;  p               2   20[COMRAM] int 
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;  pad             2   25[COMRAM] int 
  9435 ;;  pad             2   23[COMRAM] int 
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  2   16[COMRAM] int 
  9438 ;; Registers used:
  9439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9445 ;;      Params:         6       0       0       0       0       0       0
  9446 ;;      Locals:         4       0       0       0       0       0       0
  9447 ;;      Temps:          1       0       0       0       0       0       0
  9448 ;;      Totals:        11       0       0       0       0       0       0
  9449 ;;Total ram usage:       11 bytes
  9450 ;; Hardware stack levels used:    1
  9451 ;; Hardware stack levels required when called:    3
  9452 ;; This function calls:
  9453 ;;		i2_fputc
  9454 ;;		i2_fputs
  9455 ;;		i2_strlen
  9456 ;; This function is called by:
  9457 ;;		i2_dtoa
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           psect	text37,class=CODE,space=0,reloc=2,group=0
  9461                           	line	72
  9462                           global __ptext37
  9463                           __ptext37:
  9464  001FE4                     psect	text37
  9465                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  9466                           	line	72
  9467                           	global	__size_ofi2_pad
  9468                           	__size_ofi2_pad	equ	__end_ofi2_pad-i2_pad
  9469  0000                     	
  9470                           i2_pad:
  9471  001FE4                     ;incstack = 0
  9472                           	opt	stack 8
  9473                           	line	77
  9474                           	
  9475                           i2l2081:
  9476  001FE4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9477                           	movlb	0	; () banked
  9478  001FE4  0100               	
  9479                           	btfss	((_flags))&0ffh,(0)&7
  9480  001FE6  A1F5               	goto	i2u158_41
  9481  001FE8  EFF8  F00F         	goto	i2u158_40
  9482  001FEC  EFFA  F00F         i2u158_41:
  9483  001FF0                     	goto	i2l2085
  9484  001FF0  EF06  F010         i2u158_40:
  9485  001FF4                     	line	78
  9486                           	
  9487                           i2l2083:; BSR set to: 0
  9488  001FF4                     
  9489                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
  9490                           		movff	(c:i2pad@buf),(c:i2fputs@s)
  9491  001FF4  C013  F00A         	movff	(c:i2pad@buf+1),(c:i2fputs@s+1)
  9492  001FF8  C014  F00B         
  9493                           		movff	(c:i2pad@fp),(c:i2fputs@fp)
  9494  001FFC  C011  F00C         	movff	(c:i2pad@fp+1),(c:i2fputs@fp+1)
  9495  002000  C012  F00D         
  9496                           	call	i2_fputs	;wreg free
  9497  002004  ECC0  F012         	goto	i2l2085
  9498  002008  EF06  F010         	line	79
  9499                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  9500                           	
  9501                           i2l201:
  9502  00200C                     	line	82
  9503                           	
  9504                           i2l2085:
  9505  00200C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
  9506                           	btfsc	((c:i2pad@p+1)),c,7
  9507  00200C  BE16               	goto	i2u159_41
  9508  00200E  EF0B  F010         	goto	i2u159_40
  9509  002012  EF0D  F010         
  9510                           i2u159_41:
  9511  002016                     	goto	i2l2089
  9512  002016  EF13  F010         i2u159_40:
  9513  00201A                     	
  9514                           i2l2087:
  9515  00201A                     	movff	(c:i2pad@p),(c:i2pad@w)
  9516  00201A  C015  F01A         	movff	(c:i2pad@p+1),(c:i2pad@w+1)
  9517  00201E  C016  F01B         	goto	i2l205
  9518  002022  EF17  F010         	
  9519                           i2l203:
  9520  002026                     	
  9521                           i2l2089:
  9522  002026                     	movlw	high(0)
  9523  002026  0E00               	movwf	((c:i2pad@w+1)),c
  9524  002028  6E1B               	movlw	low(0)
  9525  00202A  0E00               	movwf	((c:i2pad@w)),c
  9526  00202C  6E1A               	
  9527                           i2l205:
  9528  00202E                     	line	83
  9529                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
  9530                           	movlw	high(0)
  9531  00202E  0E00               	movwf	((c:i2pad@i+1)),c
  9532  002030  6E19               	movlw	low(0)
  9533  002032  0E00               	movwf	((c:i2pad@i)),c
  9534  002034  6E18               	line	84
  9535                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  9536                           	goto	i2l2095
  9537  002036  EF2B  F010         	
  9538                           i2l207:
  9539  00203A                     	line	85
  9540                           	
  9541                           i2l2091:
  9542  00203A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
  9543                           	movlw	high(020h)
  9544  00203A  0E00               	movwf	((c:i2fputc@c+1)),c
  9545  00203C  6E02               	movlw	low(020h)
  9546  00203E  0E20               	movwf	((c:i2fputc@c)),c
  9547  002040  6E01               		movff	(c:i2pad@fp),(c:i2fputc@fp)
  9548  002042  C011  F003         	movff	(c:i2pad@fp+1),(c:i2fputc@fp+1)
  9549  002046  C012  F004         
  9550                           	call	i2_fputc	;wreg free
  9551  00204A  EC16  F00F         	line	86
  9552                           	
  9553                           i2l2093:
  9554  00204E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
  9555                           	infsnz	((c:i2pad@i)),c
  9556  00204E  4A18               	incf	((c:i2pad@i+1)),c
  9557  002050  2A19               	goto	i2l2095
  9558  002052  EF2B  F010         	line	87
  9559                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  9560                           	
  9561                           i2l206:
  9562  002056                     	line	84
  9563                           	
  9564                           i2l2095:
  9565  002056                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  9566                           		movf	((c:i2pad@w)),c,w
  9567  002056  501A               	subwf	((c:i2pad@i)),c,w
  9568  002058  5C18               	movf	((c:i2pad@i+1)),c,w
  9569  00205A  5019               	xorlw	80h
  9570  00205C  0A80               	movwf	(??i2_pad+0+0)&0ffh,c
  9571  00205E  6E17               	movf	((c:i2pad@w+1)),c,w
  9572  002060  501B               	xorlw	80h
  9573  002062  0A80               	subwfb	(??i2_pad+0+0)&0ffh,c,w
  9574  002064  5817               	btfss	status,0
  9575  002066  A0D8               	goto	i2u160_41
  9576  002068  EF38  F010         	goto	i2u160_40
  9577  00206C  EF3A  F010         
  9578                           i2u160_41:
  9579  002070                     	goto	i2l2091
  9580  002070  EF1D  F010         i2u160_40:
  9581  002074                     	
  9582                           i2l208:
  9583  002074                     	line	90
  9584                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
  9585                           	movlb	0	; () banked
  9586  002074  0100               	
  9587                           	btfsc	((_flags))&0ffh,(0)&7
  9588  002076  B1F5               	goto	i2u161_41
  9589  002078  EF40  F010         	goto	i2u161_40
  9590  00207C  EF42  F010         i2u161_41:
  9591  002080                     	goto	i2l2099
  9592  002080  EF4E  F010         i2u161_40:
  9593  002084                     	line	91
  9594                           	
  9595                           i2l2097:; BSR set to: 0
  9596  002084                     
  9597                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
  9598                           		movff	(c:i2pad@buf),(c:i2fputs@s)
  9599  002084  C013  F00A         	movff	(c:i2pad@buf+1),(c:i2fputs@s+1)
  9600  002088  C014  F00B         
  9601                           		movff	(c:i2pad@fp),(c:i2fputs@fp)
  9602  00208C  C011  F00C         	movff	(c:i2pad@fp+1),(c:i2fputs@fp+1)
  9603  002090  C012  F00D         
  9604                           	call	i2_fputs	;wreg free
  9605  002094  ECC0  F012         	goto	i2l2099
  9606  002098  EF4E  F010         	line	92
  9607                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  9608                           	
  9609                           i2l209:
  9610  00209C                     	line	94
  9611                           	
  9612                           i2l2099:
  9613  00209C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
  9614                           		movff	(c:i2pad@buf),(c:i2strlen@s)
  9615  00209C  C013  F001         	movff	(c:i2pad@buf+1),(c:i2strlen@s+1)
  9616  0020A0  C014  F002         
  9617                           	call	i2_strlen	;wreg free
  9618  0020A4  EC6F  F012         	movf	((c:i2pad@w)),c,w
  9619  0020A8  501A               	addwf	(0+?i2_strlen),c,w
  9620  0020AA  2401               	movwf	((c:?i2_pad)),c
  9621  0020AC  6E11               	movf	((c:i2pad@w+1)),c,w
  9622  0020AE  501B               	addwfc	(1+?i2_strlen),c,w
  9623  0020B0  2002               	movwf	1+((c:?i2_pad)),c
  9624  0020B2  6E12               	goto	i2l210
  9625  0020B4  EF5C  F010         	
  9626                           i2l2101:
  9627  0020B8                     	line	95
  9628                           	
  9629                           i2l210:
  9630  0020B8                     	return	;funcret
  9631  0020B8  0012               	opt stack 0
  9632                           GLOBAL	__end_ofi2_pad
  9633                           	__end_ofi2_pad:
  9634  0020BA                     	signat	i2_pad,90
  9635                           	global	i2_strlen
  9636                           
  9637 ;; *************** function i2_strlen *****************
  9638 ;; Defined at:
  9639 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9642 ;;		 -> dbuf(32), 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
  9645 ;;		 -> dbuf(32), 
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  2    0[COMRAM] unsigned int 
  9648 ;; Registers used:
  9649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9655 ;;      Params:         2       0       0       0       0       0       0
  9656 ;;      Locals:         2       0       0       0       0       0       0
  9657 ;;      Temps:          2       0       0       0       0       0       0
  9658 ;;      Totals:         6       0       0       0       0       0       0
  9659 ;;Total ram usage:        6 bytes
  9660 ;; Hardware stack levels used:    1
  9661 ;; This function calls:
  9662 ;;		Nothing
  9663 ;; This function is called by:
  9664 ;;		i2_pad
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           psect	text38,class=CODE,space=0,reloc=2,group=0
  9668                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9669                           	line	12
  9670                           global __ptext38
  9671                           __ptext38:
  9672  0024DE                     psect	text38
  9673                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9674                           	line	12
  9675                           	global	__size_ofi2_strlen
  9676                           	__size_ofi2_strlen	equ	__end_ofi2_strlen-i2_strlen
  9677  0000                     	
  9678                           i2_strlen:
  9679  0024DE                     ;incstack = 0
  9680                           	opt	stack 10
  9681                           	line	14
  9682                           	
  9683                           i2l1965:
  9684  0024DE                     		movff	(c:i2strlen@s),(c:i2strlen@a)
  9685  0024DE  C001  F005         	movff	(c:i2strlen@s+1),(c:i2strlen@a+1)
  9686  0024E2  C002  F006         
  9687                           	line	16
  9688                           	goto	i2l1969
  9689  0024E6  EF79  F012         	
  9690                           i2l965:
  9691  0024EA                     	line	17
  9692                           	
  9693                           i2l1967:
  9694  0024EA                     	infsnz	((c:i2strlen@s)),c
  9695  0024EA  4A01               	incf	((c:i2strlen@s+1)),c
  9696  0024EC  2A02               	goto	i2l1969
  9697  0024EE  EF79  F012         	line	18
  9698                           	
  9699                           i2l964:
  9700  0024F2                     	line	16
  9701                           	
  9702                           i2l1969:
  9703  0024F2                     	movff	(c:i2strlen@s),fsr2l
  9704  0024F2  C001  FFD9         	movff	(c:i2strlen@s+1),fsr2h
  9705  0024F6  C002  FFDA         	movf	indf2,w
  9706  0024FA  50DF               	btfss	status,2
  9707  0024FC  A4D8               	goto	i2u139_41
  9708  0024FE  EF83  F012         	goto	i2u139_40
  9709  002502  EF85  F012         i2u139_41:
  9710  002506                     	goto	i2l1967
  9711  002506  EF75  F012         i2u139_40:
  9712  00250A                     	goto	i2l1971
  9713  00250A  EF87  F012         	
  9714                           i2l966:
  9715  00250E                     	line	25
  9716                           	
  9717                           i2l1971:
  9718  00250E                     	movff	(c:i2strlen@a),??i2_strlen+0+0
  9719  00250E  C005  F003         	movff	(c:i2strlen@a+1),??i2_strlen+0+0+1
  9720  002512  C006  F004         	comf	(??i2_strlen+0+0),c
  9721  002516  1E03               	comf	(??i2_strlen+0+1),c
  9722  002518  1E04               	infsnz	(??i2_strlen+0+0),c
  9723  00251A  4A03               	incf	(??i2_strlen+0+1),c
  9724  00251C  2A04               	movf	((c:i2strlen@s)),c,w
  9725  00251E  5001               	addwf	(??i2_strlen+0+0),c,w
  9726  002520  2403               	movwf	((c:?i2_strlen)),c
  9727  002522  6E01               	movf	((c:i2strlen@s+1)),c,w
  9728  002524  5002               	addwfc	(??i2_strlen+0+1),c,w
  9729  002526  2004               	movwf	1+((c:?i2_strlen)),c
  9730  002528  6E02               	goto	i2l967
  9731  00252A  EF97  F012         	
  9732                           i2l1973:
  9733  00252E                     	line	26
  9734                           	
  9735                           i2l967:
  9736  00252E                     	return	;funcret
  9737  00252E  0012               	opt stack 0
  9738                           GLOBAL	__end_ofi2_strlen
  9739                           	__end_ofi2_strlen:
  9740  002530                     	signat	i2_strlen,90
  9741                           	global	i2_fputs
  9742                           
  9743 ;; *************** function i2_fputs *****************
  9744 ;; Defined at:
  9745 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9748 ;;		 -> dbuf(32), 
  9749 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9750 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;  fputs           2   14[COMRAM] int 
  9753 ;;  fputs           1   13[COMRAM] unsigned char 
  9754 ;; Return value:  Size  Location     Type
  9755 ;;                  2    9[COMRAM] int 
  9756 ;; Registers used:
  9757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9758 ;; Tracked objects:
  9759 ;;		On entry : 0/0
  9760 ;;		On exit  : 0/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9763 ;;      Params:         4       0       0       0       0       0       0
  9764 ;;      Locals:         3       0       0       0       0       0       0
  9765 ;;      Temps:          0       0       0       0       0       0       0
  9766 ;;      Totals:         7       0       0       0       0       0       0
  9767 ;;Total ram usage:        7 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; Hardware stack levels required when called:    2
  9770 ;; This function calls:
  9771 ;;		i2_fputc
  9772 ;; This function is called by:
  9773 ;;		i2_pad
  9774 ;; This function uses a non-reentrant model
  9775 ;;
  9776                           psect	text39,class=CODE,space=0,reloc=2,group=0
  9777                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9778                           	line	8
  9779                           global __ptext39
  9780                           __ptext39:
  9781  002580                     psect	text39
  9782                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9783                           	line	8
  9784                           	global	__size_ofi2_fputs
  9785                           	__size_ofi2_fputs	equ	__end_ofi2_fputs-i2_fputs
  9786  0000                     	
  9787                           i2_fputs:
  9788  002580                     ;incstack = 0
  9789                           	opt	stack 8
  9790                           	line	13
  9791                           	
  9792                           i2l1957:
  9793  002580                     	movlw	high(0)
  9794  002580  0E00               	movwf	((c:i2fputs@i+1)),c
  9795  002582  6E10               	movlw	low(0)
  9796  002584  0E00               	movwf	((c:i2fputs@i)),c
  9797  002586  6E0F               	line	14
  9798                           	goto	i2l1963
  9799  002588  EFD3  F012         	
  9800                           i2l949:
  9801  00258C                     	line	15
  9802                           	
  9803                           i2l1959:
  9804  00258C                     	movff	(c:i2fputs@c),(c:i2fputc@c)
  9805  00258C  C00E  F001         	clrf	((c:i2fputc@c+1)),c
  9806  002590  6A02               		movff	(c:i2fputs@fp),(c:i2fputc@fp)
  9807  002592  C00C  F003         	movff	(c:i2fputs@fp+1),(c:i2fputc@fp+1)
  9808  002596  C00D  F004         
  9809                           	call	i2_fputc	;wreg free
  9810  00259A  EC16  F00F         	line	16
  9811                           	
  9812                           i2l1961:
  9813  00259E                     	infsnz	((c:i2fputs@i)),c
  9814  00259E  4A0F               	incf	((c:i2fputs@i+1)),c
  9815  0025A0  2A10               	goto	i2l1963
  9816  0025A2  EFD3  F012         	line	17
  9817                           	
  9818                           i2l948:
  9819  0025A6                     	line	14
  9820                           	
  9821                           i2l1963:
  9822  0025A6                     	movf	((c:i2fputs@i)),c,w
  9823  0025A6  500F               	addwf	((c:i2fputs@s)),c,w
  9824  0025A8  240A               	movwf	c:fsr2l
  9825  0025AA  6ED9               	movf	((c:i2fputs@i+1)),c,w
  9826  0025AC  5010               	addwfc	((c:i2fputs@s+1)),c,w
  9827  0025AE  200B               	movwf	1+c:fsr2l
  9828  0025B0  6EDA               	movf	indf2,w
  9829  0025B2  50DF               	movwf	((c:i2fputs@c)),c
  9830  0025B4  6E0E               	movf	((c:i2fputs@c)),c,w
  9831  0025B6  500E               	btfss	status,2
  9832  0025B8  A4D8               	goto	i2u138_41
  9833  0025BA  EFE1  F012         	goto	i2u138_40
  9834  0025BE  EFE3  F012         i2u138_41:
  9835  0025C2                     	goto	i2l1959
  9836  0025C2  EFC6  F012         i2u138_40:
  9837  0025C6                     	goto	i2l951
  9838  0025C6  EFE5  F012         	
  9839                           i2l950:
  9840  0025CA                     	line	19
  9841                           ;	Return value of i2_fputs is never used
  9842                           	
  9843                           i2l951:
  9844  0025CA                     	return	;funcret
  9845  0025CA  0012               	opt stack 0
  9846                           GLOBAL	__end_ofi2_fputs
  9847                           	__end_ofi2_fputs:
  9848  0025CC                     	signat	i2_fputs,90
  9849                           	global	i2_fputc
  9850                           
  9851 ;; *************** function i2_fputc *****************
  9852 ;; Defined at:
  9853 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  c               2    0[COMRAM] int 
  9856 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9857 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;		None
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  2    0[COMRAM] int 
  9862 ;; Registers used:
  9863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9869 ;;      Params:         4       0       0       0       0       0       0
  9870 ;;      Locals:         0       0       0       0       0       0       0
  9871 ;;      Temps:          5       0       0       0       0       0       0
  9872 ;;      Totals:         9       0       0       0       0       0       0
  9873 ;;Total ram usage:        9 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:    1
  9876 ;; This function calls:
  9877 ;;		i2_putch
  9878 ;; This function is called by:
  9879 ;;		i2_pad
  9880 ;;		i2_vfpfcnvrt
  9881 ;;		i2_fputs
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           psect	text40,class=CODE,space=0,reloc=2,group=0
  9885                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  9886                           	line	8
  9887                           global __ptext40
  9888                           __ptext40:
  9889  001E2C                     psect	text40
  9890                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  9891                           	line	8
  9892                           	global	__size_ofi2_fputc
  9893                           	__size_ofi2_fputc	equ	__end_ofi2_fputc-i2_fputc
  9894  0000                     	
  9895                           i2_fputc:
  9896  001E2C                     ;incstack = 0
  9897                           	opt	stack 11
  9898                           	line	12
  9899                           	
  9900                           i2l1925:
  9901  001E2C                     	movf	((c:i2fputc@fp)),c,w
  9902  001E2C  5003               iorwf	((c:i2fputc@fp+1)),c,w
  9903  001E2E  1004               	btfsc	status,2
  9904  001E30  B4D8               	goto	i2u132_41
  9905  001E32  EF1D  F00F         	goto	i2u132_40
  9906  001E36  EF1F  F00F         
  9907                           i2u132_41:
  9908  001E3A                     	goto	i2l1929
  9909  001E3A  EF2A  F00F         i2u132_40:
  9910  001E3E                     	
  9911                           i2l1927:
  9912  001E3E                     	movf	((c:i2fputc@fp)),c,w
  9913  001E3E  5003               iorwf	((c:i2fputc@fp+1)),c,w
  9914  001E40  1004               	btfss	status,2
  9915  001E42  A4D8               	goto	i2u133_41
  9916  001E44  EF26  F00F         	goto	i2u133_40
  9917  001E48  EF28  F00F         
  9918                           i2u133_41:
  9919  001E4C                     	goto	i2l1931
  9920  001E4C  EF2F  F00F         i2u133_40:
  9921  001E50                     	goto	i2l1929
  9922  001E50  EF2A  F00F         	
  9923                           i2l938:
  9924  001E54                     	line	13
  9925                           	
  9926                           i2l1929:
  9927  001E54                     	movf	((c:i2fputc@c)),c,w
  9928  001E54  5001               	
  9929                           	call	i2_putch
  9930  001E56  EC3F  F014         	line	14
  9931                           	goto	i2l943
  9932  001E5A  EF84  F00F         	
  9933                           i2l936:
  9934  001E5E                     	line	15
  9935                           	
  9936                           i2l1931:
  9937  001E5E                     	lfsr	2,04h
  9938  001E5E  EE20 F004          	movf	((c:i2fputc@fp)),c,w
  9939  001E62  5003               	addwf	fsr2l
  9940  001E64  26D9               	movf	((c:i2fputc@fp+1)),c,w
  9941  001E66  5004               	addwfc	fsr2h
  9942  001E68  22DA               	movf	postinc2,w
  9943  001E6A  50DE               iorwf	postinc2,w
  9944  001E6C  10DE               	btfsc	status,2
  9945  001E6E  B4D8               	goto	i2u134_41
  9946  001E70  EF3C  F00F         	goto	i2u134_40
  9947  001E74  EF3E  F00F         
  9948                           i2u134_41:
  9949  001E78                     	goto	i2l1935
  9950  001E78  EF5B  F00F         i2u134_40:
  9951  001E7C                     	
  9952                           i2l1933:
  9953  001E7C                     	lfsr	2,04h
  9954  001E7C  EE20 F004          	movf	((c:i2fputc@fp)),c,w
  9955  001E80  5003               	addwf	fsr2l
  9956  001E82  26D9               	movf	((c:i2fputc@fp+1)),c,w
  9957  001E84  5004               	addwfc	fsr2h
  9958  001E86  22DA               	lfsr	1,02h
  9959  001E88  EE10 F002          	movf	((c:i2fputc@fp)),c,w
  9960  001E8C  5003               	addwf	fsr1l
  9961  001E8E  26E1               	movf	((c:i2fputc@fp+1)),c,w
  9962  001E90  5004               	addwfc	fsr1h
  9963  001E92  22E2               		movf	postinc2,w
  9964  001E94  50DE               	subwf	postinc1,w
  9965  001E96  5CE6               	movf	postinc1,w
  9966  001E98  50E6               	xorlw	80h
  9967  001E9A  0A80               	movwf	(??i2_fputc+4+0)&0ffh,c
  9968  001E9C  6E09               	movf	postinc2,w
  9969  001E9E  50DE               	xorlw	80h
  9970  001EA0  0A80               	subwfb	(??i2_fputc+4+0)&0ffh,c,w
  9971  001EA2  5809               	btfsc	status,0
  9972  001EA4  B0D8               	goto	i2u135_41
  9973  001EA6  EF57  F00F         	goto	i2u135_40
  9974  001EAA  EF59  F00F         
  9975                           i2u135_41:
  9976  001EAE                     	goto	i2l943
  9977  001EAE  EF84  F00F         i2u135_40:
  9978  001EB2                     	goto	i2l1935
  9979  001EB2  EF5B  F00F         	
  9980                           i2l942:
  9981  001EB6                     	line	16
  9982                           	
  9983                           i2l1935:
  9984  001EB6                     	lfsr	2,02h
  9985  001EB6  EE20 F002          	movf	((c:i2fputc@fp)),c,w
  9986  001EBA  5003               	addwf	fsr2l
  9987  001EBC  26D9               	movf	((c:i2fputc@fp+1)),c,w
  9988  001EBE  5004               	addwfc	fsr2h
  9989  001EC0  22DA               	movff	postinc2,??i2_fputc+0+0
  9990  001EC2  CFDE F005          	movff	postdec2,??i2_fputc+0+0+1
  9991  001EC6  CFDD F006          	movff	(c:i2fputc@fp),fsr2l
  9992  001ECA  C003  FFD9         	movff	(c:i2fputc@fp+1),fsr2h
  9993  001ECE  C004  FFDA         	movff	postinc2,??i2_fputc+2+0
  9994  001ED2  CFDE F007          	movff	postdec2,??i2_fputc+2+0+1
  9995  001ED6  CFDD F008          	movf	(??i2_fputc+0+0),c,w
  9996  001EDA  5005               	addwf	(??i2_fputc+2+0),c,w
  9997  001EDC  2407               	movwf	c:fsr2l
  9998  001EDE  6ED9               	movf	(??i2_fputc+0+1),c,w
  9999  001EE0  5006               	addwfc	(??i2_fputc+2+1),c,w
 10000  001EE2  2008               	movwf	1+c:fsr2l
 10001  001EE4  6EDA               	movff	(c:i2fputc@c),indf2
 10002  001EE6  C001  FFDF         
 10003                           	line	17
 10004                           	lfsr	2,02h
 10005  001EEA  EE20 F002          	movf	((c:i2fputc@fp)),c,w
 10006  001EEE  5003               	addwf	fsr2l
 10007  001EF0  26D9               	movf	((c:i2fputc@fp+1)),c,w
 10008  001EF2  5004               	addwfc	fsr2h
 10009  001EF4  22DA               	incf	postinc2
 10010  001EF6  2ADE               	movlw	0
 10011  001EF8  0E00               	addwfc	postdec2
 10012  001EFA  22DD               	goto	i2l943
 10013  001EFC  EF84  F00F         	line	18
 10014                           	
 10015                           i2l940:
 10016  001F00                     	goto	i2l943
 10017  001F00  EF84  F00F         	line	19
 10018                           	
 10019                           i2l939:
 10020  001F04                     	goto	i2l943
 10021  001F04  EF84  F00F         	line	20
 10022                           	
 10023                           i2l1937:
 10024  001F08                     	line	21
 10025                           ;	Return value of i2_fputc is never used
 10026                           	
 10027                           i2l943:
 10028  001F08                     	return	;funcret
 10029  001F08  0012               	opt stack 0
 10030                           GLOBAL	__end_ofi2_fputc
 10031                           	__end_ofi2_fputc:
 10032  001F0A                     	signat	i2_fputc,90
 10033                           	global	i2_putch
 10034                           
 10035 ;; *************** function i2_putch *****************
 10036 ;; Defined at:
 10037 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;  c               1    wreg     unsigned char 
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;  c               1  (no storage) unsigned char 
 10042 ;; Return value:  Size  Location     Type
 10043 ;;                  1    wreg      void 
 10044 ;; Registers used:
 10045 ;;		wreg
 10046 ;; Tracked objects:
 10047 ;;		On entry : 0/0
 10048 ;;		On exit  : 0/0
 10049 ;;		Unchanged: 0/0
 10050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10051 ;;      Params:         0       0       0       0       0       0       0
 10052 ;;      Locals:         0       0       0       0       0       0       0
 10053 ;;      Temps:          0       0       0       0       0       0       0
 10054 ;;      Totals:         0       0       0       0       0       0       0
 10055 ;;Total ram usage:        0 bytes
 10056 ;; Hardware stack levels used:    1
 10057 ;; This function calls:
 10058 ;;		Nothing
 10059 ;; This function is called by:
 10060 ;;		i2_fputc
 10061 ;; This function uses a non-reentrant model
 10062 ;;
 10063                           psect	text41,class=CODE,space=0,reloc=2,group=0
 10064                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 10065                           	line	7
 10066                           global __ptext41
 10067                           __ptext41:
 10068  00287E                     psect	text41
 10069                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 10070                           	line	7
 10071                           	global	__size_ofi2_putch
 10072                           	__size_ofi2_putch	equ	__end_ofi2_putch-i2_putch
 10073  0000                     	
 10074                           i2_putch:
 10075  00287E                     ;incstack = 0
 10076                           	opt	stack 11
 10077                           	line	9
 10078                           	
 10079                           i2l961:
 10080  00287E                     	return	;funcret
 10081  00287E  0012               	opt stack 0
 10082                           GLOBAL	__end_ofi2_putch
 10083                           	__end_ofi2_putch:
 10084  002880                     	signat	i2_putch,89
 10085                           	global	i2_abs
 10086                           
 10087 ;; *************** function i2_abs *****************
 10088 ;; Defined at:
 10089 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  a               2   18[COMRAM] int 
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;		None
 10094 ;; Return value:  Size  Location     Type
 10095 ;;                  2   18[COMRAM] int 
 10096 ;; Registers used:
 10097 ;;		wreg, status,2, status,0
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10103 ;;      Params:         2       0       0       0       0       0       0
 10104 ;;      Locals:         0       0       0       0       0       0       0
 10105 ;;      Temps:          2       0       0       0       0       0       0
 10106 ;;      Totals:         4       0       0       0       0       0       0
 10107 ;;Total ram usage:        4 bytes
 10108 ;; Hardware stack levels used:    1
 10109 ;; This function calls:
 10110 ;;		Nothing
 10111 ;; This function is called by:
 10112 ;;		i2_dtoa
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           psect	text42,class=CODE,space=0,reloc=2,group=0
 10116                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
 10117                           	line	1
 10118                           global __ptext42
 10119                           __ptext42:
 10120  002656                     psect	text42
 10121                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
 10122                           	line	1
 10123                           	global	__size_ofi2_abs
 10124                           	__size_ofi2_abs	equ	__end_ofi2_abs-i2_abs
 10125  0000                     	
 10126                           i2_abs:
 10127  002656                     ;incstack = 0
 10128                           	opt	stack 11
 10129                           	line	3
 10130                           	
 10131                           i2l2183:
 10132  002656                     	btfsc	((c:i2abs@a+1)),c,7
 10133  002656  BE14               	goto	i2u175_40
 10134  002658  EF38  F013         	movf	((c:i2abs@a+1)),c,w
 10135  00265C  5014               	bnz	i2u175_41
 10136  00265E  E106               	decf	((c:i2abs@a)),c,w
 10137  002660  0413               	btfsc	status,0
 10138  002662  B0D8               	goto	i2u175_41
 10139  002664  EF36  F013         	goto	i2u175_40
 10140  002668  EF38  F013         
 10141                           i2u175_41:
 10142  00266C                     	goto	i2l928
 10143  00266C  EF46  F013         i2u175_40:
 10144  002670                     	
 10145                           i2l2185:
 10146  002670                     	movff	(c:i2abs@a),??i2_abs+0+0
 10147  002670  C013  F015         	movff	(c:i2abs@a+1),??i2_abs+0+0+1
 10148  002674  C014  F016         	comf	(??i2_abs+0+0),c
 10149  002678  1E15               	comf	(??i2_abs+0+1),c
 10150  00267A  1E16               	infsnz	(??i2_abs+0+0),c
 10151  00267C  4A15               	incf	(??i2_abs+0+1),c
 10152  00267E  2A16               	movff	??i2_abs+0+0,(c:?i2_abs)
 10153  002680  C015  F013         	movff	??i2_abs+0+1,(c:?i2_abs+1)
 10154  002684  C016  F014         	goto	i2l931
 10155  002688  EF4C  F013         	
 10156                           i2l928:
 10157  00268C                     	movff	(c:i2abs@a),(c:?i2_abs)
 10158  00268C  C013  F013         	movff	(c:i2abs@a+1),(c:?i2_abs+1)
 10159  002690  C014  F014         	goto	i2l931
 10160  002694  EF4C  F013         	
 10161                           i2l930:
 10162  002698                     	line	4
 10163                           	
 10164                           i2l931:
 10165  002698                     	return	;funcret
 10166  002698  0012               	opt stack 0
 10167                           GLOBAL	__end_ofi2_abs
 10168                           	__end_ofi2_abs:
 10169  00269A                     	signat	i2_abs,90
 10170                           	global	i2___aomod
 10171                           
 10172 ;; *************** function i2___aomod *****************
 10173 ;; Defined at:
 10174 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  dividend        8    0[COMRAM] long long 
 10177 ;;  divisor         8    8[COMRAM] long long 
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;  __aomod         1   17[COMRAM] unsigned char 
 10180 ;;  __aomod         1   16[COMRAM] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  8    0[COMRAM] long long 
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10190 ;;      Params:        16       0       0       0       0       0       0
 10191 ;;      Locals:         2       0       0       0       0       0       0
 10192 ;;      Temps:          0       0       0       0       0       0       0
 10193 ;;      Totals:        18       0       0       0       0       0       0
 10194 ;;Total ram usage:       18 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; This function calls:
 10197 ;;		Nothing
 10198 ;; This function is called by:
 10199 ;;		i2_dtoa
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           psect	text43,class=CODE,space=0,reloc=2,group=0
 10203                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
 10204                           	line	9
 10205                           global __ptext43
 10206                           __ptext43:
 10207  0016FA                     psect	text43
 10208                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
 10209                           	line	9
 10210                           	global	__size_ofi2___aomod
 10211                           	__size_ofi2___aomod	equ	__end_ofi2___aomod-i2___aomod
 10212  0000                     	
 10213                           i2___aomod:
 10214  0016FA                     ;incstack = 0
 10215                           	opt	stack 11
 10216                           	line	14
 10217                           	
 10218                           i2l2147:
 10219  0016FA                     	movlw	low(0)
 10220  0016FA  0E00               	movwf	((c:i2___aomod@sign)),c
 10221  0016FC  6E12               	line	15
 10222                           	
 10223                           i2l2149:
 10224  0016FE                     	btfsc	((c:i2___aomod@dividend+7)),c,7
 10225  0016FE  BE08               	goto	i2u169_40
 10226  001700  EF86  F00B         	goto	i2u169_41
 10227  001704  EF84  F00B         
 10228                           i2u169_41:
 10229  001708                     	goto	i2l2155
 10230  001708  EF9A  F00B         i2u169_40:
 10231  00170C                     	line	16
 10232                           	
 10233                           i2l2151:
 10234  00170C                     	comf	((c:i2___aomod@dividend+7)),c
 10235  00170C  1E08               	comf	((c:i2___aomod@dividend+6)),c
 10236  00170E  1E07               	comf	((c:i2___aomod@dividend+5)),c
 10237  001710  1E06               	comf	((c:i2___aomod@dividend+4)),c
 10238  001712  1E05               	comf	((c:i2___aomod@dividend+3)),c
 10239  001714  1E04               	comf	((c:i2___aomod@dividend+2)),c
 10240  001716  1E03               	comf	((c:i2___aomod@dividend+1)),c
 10241  001718  1E02               	negf	((c:i2___aomod@dividend)),c
 10242  00171A  6C01               	movlw	0
 10243  00171C  0E00               	addwfc	((c:i2___aomod@dividend+1)),c
 10244  00171E  2202               	addwfc	((c:i2___aomod@dividend+2)),c
 10245  001720  2203               	addwfc	((c:i2___aomod@dividend+3)),c
 10246  001722  2204               	addwfc	((c:i2___aomod@dividend+4)),c
 10247  001724  2205               	addwfc	((c:i2___aomod@dividend+5)),c
 10248  001726  2206               	addwfc	((c:i2___aomod@dividend+6)),c
 10249  001728  2207               	addwfc	((c:i2___aomod@dividend+7)),c
 10250  00172A  2208               	line	17
 10251                           	
 10252                           i2l2153:
 10253  00172C                     	movlw	low(01h)
 10254  00172C  0E01               	movwf	((c:i2___aomod@sign)),c
 10255  00172E  6E12               	goto	i2l2155
 10256  001730  EF9A  F00B         	line	18
 10257                           	
 10258                           i2l370:
 10259  001734                     	line	19
 10260                           	
 10261                           i2l2155:
 10262  001734                     	btfsc	((c:i2___aomod@divisor+7)),c,7
 10263  001734  BE10               	goto	i2u170_40
 10264  001736  EFA1  F00B         	goto	i2u170_41
 10265  00173A  EF9F  F00B         
 10266                           i2u170_41:
 10267  00173E                     	goto	i2l2159
 10268  00173E  EFB3  F00B         i2u170_40:
 10269  001742                     	line	20
 10270                           	
 10271                           i2l2157:
 10272  001742                     	comf	((c:i2___aomod@divisor+7)),c
 10273  001742  1E10               	comf	((c:i2___aomod@divisor+6)),c
 10274  001744  1E0F               	comf	((c:i2___aomod@divisor+5)),c
 10275  001746  1E0E               	comf	((c:i2___aomod@divisor+4)),c
 10276  001748  1E0D               	comf	((c:i2___aomod@divisor+3)),c
 10277  00174A  1E0C               	comf	((c:i2___aomod@divisor+2)),c
 10278  00174C  1E0B               	comf	((c:i2___aomod@divisor+1)),c
 10279  00174E  1E0A               	negf	((c:i2___aomod@divisor)),c
 10280  001750  6C09               	movlw	0
 10281  001752  0E00               	addwfc	((c:i2___aomod@divisor+1)),c
 10282  001754  220A               	addwfc	((c:i2___aomod@divisor+2)),c
 10283  001756  220B               	addwfc	((c:i2___aomod@divisor+3)),c
 10284  001758  220C               	addwfc	((c:i2___aomod@divisor+4)),c
 10285  00175A  220D               	addwfc	((c:i2___aomod@divisor+5)),c
 10286  00175C  220E               	addwfc	((c:i2___aomod@divisor+6)),c
 10287  00175E  220F               	addwfc	((c:i2___aomod@divisor+7)),c
 10288  001760  2210               	goto	i2l2159
 10289  001762  EFB3  F00B         	
 10290                           i2l371:
 10291  001766                     	line	21
 10292                           	
 10293                           i2l2159:
 10294  001766                     	movf	((c:i2___aomod@divisor)),c,w
 10295  001766  5009               iorwf	((c:i2___aomod@divisor+1)),c,w
 10296  001768  100A               iorwf	((c:i2___aomod@divisor+2)),c,w
 10297  00176A  100B               iorwf	((c:i2___aomod@divisor+3)),c,w
 10298  00176C  100C               iorwf	((c:i2___aomod@divisor+4)),c,w
 10299  00176E  100D               iorwf	((c:i2___aomod@divisor+5)),c,w
 10300  001770  100E               iorwf	((c:i2___aomod@divisor+6)),c,w
 10301  001772  100F               iorwf	((c:i2___aomod@divisor+7)),c,w
 10302  001774  1010               	btfsc	status,2
 10303  001776  B4D8               	goto	i2u171_41
 10304  001778  EFC0  F00B         	goto	i2u171_40
 10305  00177C  EFC2  F00B         
 10306                           i2u171_41:
 10307  001780                     	goto	i2l2175
 10308  001780  EF16  F00C         i2u171_40:
 10309  001784                     	line	22
 10310                           	
 10311                           i2l2161:
 10312  001784                     	movlw	low(01h)
 10313  001784  0E01               	movwf	((c:i2___aomod@counter)),c
 10314  001786  6E11               	line	23
 10315                           	goto	i2l2165
 10316  001788  EFD2  F00B         	
 10317                           i2l374:
 10318  00178C                     	line	24
 10319                           	
 10320                           i2l2163:
 10321  00178C                     	bcf	status,0
 10322  00178C  90D8               	rlcf	((c:i2___aomod@divisor)),c
 10323  00178E  3609               	rlcf	((c:i2___aomod@divisor+1)),c
 10324  001790  360A               	rlcf	((c:i2___aomod@divisor+2)),c
 10325  001792  360B               	rlcf	((c:i2___aomod@divisor+3)),c
 10326  001794  360C               	rlcf	((c:i2___aomod@divisor+4)),c
 10327  001796  360D               	rlcf	((c:i2___aomod@divisor+5)),c
 10328  001798  360E               	rlcf	((c:i2___aomod@divisor+6)),c
 10329  00179A  360F               	rlcf	((c:i2___aomod@divisor+7)),c
 10330  00179C  3610               	line	25
 10331                           	incf	((c:i2___aomod@counter)),c
 10332  00179E  2A11               	goto	i2l2165
 10333  0017A0  EFD2  F00B         	line	26
 10334                           	
 10335                           i2l373:
 10336  0017A4                     	line	23
 10337                           	
 10338                           i2l2165:
 10339  0017A4                     	
 10340                           	btfss	((c:i2___aomod@divisor+7)),c,(63)&7
 10341  0017A4  AE10               	goto	i2u172_41
 10342  0017A6  EFD7  F00B         	goto	i2u172_40
 10343  0017AA  EFD9  F00B         i2u172_41:
 10344  0017AE                     	goto	i2l2163
 10345  0017AE  EFC6  F00B         i2u172_40:
 10346  0017B2                     	goto	i2l2167
 10347  0017B2  EFDD  F00B         	
 10348                           i2l375:
 10349  0017B6                     	goto	i2l2167
 10350  0017B6  EFDD  F00B         	line	27
 10351                           	
 10352                           i2l376:
 10353  0017BA                     	line	28
 10354                           	
 10355                           i2l2167:
 10356  0017BA                     		movf	((c:i2___aomod@divisor)),c,w
 10357  0017BA  5009               	subwf	((c:i2___aomod@dividend)),c,w
 10358  0017BC  5C01               	movf	((c:i2___aomod@divisor+1)),c,w
 10359  0017BE  500A               	subwfb	((c:i2___aomod@dividend+1)),c,w
 10360  0017C0  5802               	movf	((c:i2___aomod@divisor+2)),c,w
 10361  0017C2  500B               	subwfb	((c:i2___aomod@dividend+2)),c,w
 10362  0017C4  5803               	movf	((c:i2___aomod@divisor+3)),c,w
 10363  0017C6  500C               	subwfb	((c:i2___aomod@dividend+3)),c,w
 10364  0017C8  5804               	movf	((c:i2___aomod@divisor+4)),c,w
 10365  0017CA  500D               	subwfb	((c:i2___aomod@dividend+4)),c,w
 10366  0017CC  5805               	movf	((c:i2___aomod@divisor+5)),c,w
 10367  0017CE  500E               	subwfb	((c:i2___aomod@dividend+5)),c,w
 10368  0017D0  5806               	movf	((c:i2___aomod@divisor+6)),c,w
 10369  0017D2  500F               	subwfb	((c:i2___aomod@dividend+6)),c,w
 10370  0017D4  5807               	movf	((c:i2___aomod@divisor+7)),c,w
 10371  0017D6  5010               	subwfb	((c:i2___aomod@dividend+7)),c,w
 10372  0017D8  5808               	btfss	status,0
 10373  0017DA  A0D8               	goto	i2u173_41
 10374  0017DC  EFF2  F00B         	goto	i2u173_40
 10375  0017E0  EFF4  F00B         
 10376                           i2u173_41:
 10377  0017E4                     	goto	i2l2171
 10378  0017E4  EF06  F00C         i2u173_40:
 10379  0017E8                     	line	29
 10380                           	
 10381                           i2l2169:
 10382  0017E8                     	movf	((c:i2___aomod@divisor)),c,w
 10383  0017E8  5009               	subwf	((c:i2___aomod@dividend)),c
 10384  0017EA  5E01               	movf	((c:i2___aomod@divisor+1)),c,w
 10385  0017EC  500A               	subwfb	((c:i2___aomod@dividend+1)),c
 10386  0017EE  5A02               	movf	((c:i2___aomod@divisor+2)),c,w
 10387  0017F0  500B               	subwfb	((c:i2___aomod@dividend+2)),c
 10388  0017F2  5A03               	movf	((c:i2___aomod@divisor+3)),c,w
 10389  0017F4  500C               	subwfb	((c:i2___aomod@dividend+3)),c
 10390  0017F6  5A04               	movf	((c:i2___aomod@divisor+4)),c,w
 10391  0017F8  500D               	subwfb	((c:i2___aomod@dividend+4)),c
 10392  0017FA  5A05               	movf	((c:i2___aomod@divisor+5)),c,w
 10393  0017FC  500E               	subwfb	((c:i2___aomod@dividend+5)),c
 10394  0017FE  5A06               	movf	((c:i2___aomod@divisor+6)),c,w
 10395  001800  500F               	subwfb	((c:i2___aomod@dividend+6)),c
 10396  001802  5A07               	movf	((c:i2___aomod@divisor+7)),c,w
 10397  001804  5010               	subwfb	((c:i2___aomod@dividend+7)),c
 10398  001806  5A08               	goto	i2l2171
 10399  001808  EF06  F00C         	
 10400                           i2l377:
 10401  00180C                     	line	30
 10402                           	
 10403                           i2l2171:
 10404  00180C                     	bcf	status,0
 10405  00180C  90D8               	rrcf	((c:i2___aomod@divisor+7)),c
 10406  00180E  3210               	rrcf	((c:i2___aomod@divisor+6)),c
 10407  001810  320F               	rrcf	((c:i2___aomod@divisor+5)),c
 10408  001812  320E               	rrcf	((c:i2___aomod@divisor+4)),c
 10409  001814  320D               	rrcf	((c:i2___aomod@divisor+3)),c
 10410  001816  320C               	rrcf	((c:i2___aomod@divisor+2)),c
 10411  001818  320B               	rrcf	((c:i2___aomod@divisor+1)),c
 10412  00181A  320A               	rrcf	((c:i2___aomod@divisor)),c
 10413  00181C  3209               	line	31
 10414                           	
 10415                           i2l2173:
 10416  00181E                     	decfsz	((c:i2___aomod@counter)),c
 10417  00181E  2E11               	
 10418                           	goto	i2l2167
 10419  001820  EFDD  F00B         	goto	i2l2175
 10420  001824  EF16  F00C         	
 10421                           i2l378:
 10422  001828                     	goto	i2l2175
 10423  001828  EF16  F00C         	line	32
 10424                           	
 10425                           i2l372:
 10426  00182C                     	line	33
 10427                           	
 10428                           i2l2175:
 10429  00182C                     	movf	((c:i2___aomod@sign)),c,w
 10430  00182C  5012               	btfsc	status,2
 10431  00182E  B4D8               	goto	i2u174_41
 10432  001830  EF1C  F00C         	goto	i2u174_40
 10433  001834  EF1E  F00C         i2u174_41:
 10434  001838                     	goto	i2l2179
 10435  001838  EF30  F00C         i2u174_40:
 10436  00183C                     	line	34
 10437                           	
 10438                           i2l2177:
 10439  00183C                     	comf	((c:i2___aomod@dividend+7)),c
 10440  00183C  1E08               	comf	((c:i2___aomod@dividend+6)),c
 10441  00183E  1E07               	comf	((c:i2___aomod@dividend+5)),c
 10442  001840  1E06               	comf	((c:i2___aomod@dividend+4)),c
 10443  001842  1E05               	comf	((c:i2___aomod@dividend+3)),c
 10444  001844  1E04               	comf	((c:i2___aomod@dividend+2)),c
 10445  001846  1E03               	comf	((c:i2___aomod@dividend+1)),c
 10446  001848  1E02               	negf	((c:i2___aomod@dividend)),c
 10447  00184A  6C01               	movlw	0
 10448  00184C  0E00               	addwfc	((c:i2___aomod@dividend+1)),c
 10449  00184E  2202               	addwfc	((c:i2___aomod@dividend+2)),c
 10450  001850  2203               	addwfc	((c:i2___aomod@dividend+3)),c
 10451  001852  2204               	addwfc	((c:i2___aomod@dividend+4)),c
 10452  001854  2205               	addwfc	((c:i2___aomod@dividend+5)),c
 10453  001856  2206               	addwfc	((c:i2___aomod@dividend+6)),c
 10454  001858  2207               	addwfc	((c:i2___aomod@dividend+7)),c
 10455  00185A  2208               	goto	i2l2179
 10456  00185C  EF30  F00C         	
 10457                           i2l379:
 10458  001860                     	line	35
 10459                           	
 10460                           i2l2179:
 10461  001860                     	movff	(c:i2___aomod@dividend),(c:?i2___aomod)
 10462  001860  C001  F001         	movff	(c:i2___aomod@dividend+1),(c:?i2___aomod+1)
 10463  001864  C002  F002         	movff	(c:i2___aomod@dividend+2),(c:?i2___aomod+2)
 10464  001868  C003  F003         	movff	(c:i2___aomod@dividend+3),(c:?i2___aomod+3)
 10465  00186C  C004  F004         	movff	(c:i2___aomod@dividend+4),(c:?i2___aomod+4)
 10466  001870  C005  F005         	movff	(c:i2___aomod@dividend+5),(c:?i2___aomod+5)
 10467  001874  C006  F006         	movff	(c:i2___aomod@dividend+6),(c:?i2___aomod+6)
 10468  001878  C007  F007         	movff	(c:i2___aomod@dividend+7),(c:?i2___aomod+7)
 10469  00187C  C008  F008         	goto	i2l380
 10470  001880  EF42  F00C         	
 10471                           i2l2181:
 10472  001884                     	line	36
 10473                           	
 10474                           i2l380:
 10475  001884                     	return	;funcret
 10476  001884  0012               	opt stack 0
 10477                           GLOBAL	__end_ofi2___aomod
 10478                           	__end_ofi2___aomod:
 10479  001886                     	signat	i2___aomod,95
 10480                           	global	i2___aodiv
 10481                           
 10482 ;; *************** function i2___aodiv *****************
 10483 ;; Defined at:
 10484 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
 10485 ;; Parameters:    Size  Location     Type
 10486 ;;  dividend        8    0[COMRAM] long long 
 10487 ;;  divisor         8    8[COMRAM] long long 
 10488 ;; Auto vars:     Size  Location     Type
 10489 ;;  __aodiv         8   18[COMRAM] long long 
 10490 ;;  __aodiv         1   17[COMRAM] unsigned char 
 10491 ;;  __aodiv         1   16[COMRAM] unsigned char 
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  8    0[COMRAM] long long 
 10494 ;; Registers used:
 10495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10501 ;;      Params:        16       0       0       0       0       0       0
 10502 ;;      Locals:        10       0       0       0       0       0       0
 10503 ;;      Temps:          0       0       0       0       0       0       0
 10504 ;;      Totals:        26       0       0       0       0       0       0
 10505 ;;Total ram usage:       26 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; This function calls:
 10508 ;;		Nothing
 10509 ;; This function is called by:
 10510 ;;		i2_dtoa
 10511 ;; This function uses a non-reentrant model
 10512 ;;
 10513                           psect	text44,class=CODE,space=0,reloc=2,group=0
 10514                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
 10515                           	line	9
 10516                           global __ptext44
 10517                           __ptext44:
 10518  0013BC                     psect	text44
 10519                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
 10520                           	line	9
 10521                           	global	__size_ofi2___aodiv
 10522                           	__size_ofi2___aodiv	equ	__end_ofi2___aodiv-i2___aodiv
 10523  0000                     	
 10524                           i2___aodiv:
 10525  0013BC                     ;incstack = 0
 10526                           	opt	stack 11
 10527                           	line	15
 10528                           	
 10529                           i2l2103:
 10530  0013BC                     	movlw	low(0)
 10531  0013BC  0E00               	movwf	((c:i2___aodiv@sign)),c
 10532  0013BE  6E12               	line	16
 10533                           	
 10534                           i2l2105:
 10535  0013C0                     	btfsc	((c:i2___aodiv@divisor+7)),c,7
 10536  0013C0  BE10               	goto	i2u162_40
 10537  0013C2  EFE7  F009         	goto	i2u162_41
 10538  0013C6  EFE5  F009         
 10539                           i2u162_41:
 10540  0013CA                     	goto	i2l2111
 10541  0013CA  EFFB  F009         i2u162_40:
 10542  0013CE                     	line	17
 10543                           	
 10544                           i2l2107:
 10545  0013CE                     	comf	((c:i2___aodiv@divisor+7)),c
 10546  0013CE  1E10               	comf	((c:i2___aodiv@divisor+6)),c
 10547  0013D0  1E0F               	comf	((c:i2___aodiv@divisor+5)),c
 10548  0013D2  1E0E               	comf	((c:i2___aodiv@divisor+4)),c
 10549  0013D4  1E0D               	comf	((c:i2___aodiv@divisor+3)),c
 10550  0013D6  1E0C               	comf	((c:i2___aodiv@divisor+2)),c
 10551  0013D8  1E0B               	comf	((c:i2___aodiv@divisor+1)),c
 10552  0013DA  1E0A               	negf	((c:i2___aodiv@divisor)),c
 10553  0013DC  6C09               	movlw	0
 10554  0013DE  0E00               	addwfc	((c:i2___aodiv@divisor+1)),c
 10555  0013E0  220A               	addwfc	((c:i2___aodiv@divisor+2)),c
 10556  0013E2  220B               	addwfc	((c:i2___aodiv@divisor+3)),c
 10557  0013E4  220C               	addwfc	((c:i2___aodiv@divisor+4)),c
 10558  0013E6  220D               	addwfc	((c:i2___aodiv@divisor+5)),c
 10559  0013E8  220E               	addwfc	((c:i2___aodiv@divisor+6)),c
 10560  0013EA  220F               	addwfc	((c:i2___aodiv@divisor+7)),c
 10561  0013EC  2210               	line	18
 10562                           	
 10563                           i2l2109:
 10564  0013EE                     	movlw	low(01h)
 10565  0013EE  0E01               	movwf	((c:i2___aodiv@sign)),c
 10566  0013F0  6E12               	goto	i2l2111
 10567  0013F2  EFFB  F009         	line	19
 10568                           	
 10569                           i2l357:
 10570  0013F6                     	line	20
 10571                           	
 10572                           i2l2111:
 10573  0013F6                     	btfsc	((c:i2___aodiv@dividend+7)),c,7
 10574  0013F6  BE08               	goto	i2u163_40
 10575  0013F8  EF02  F00A         	goto	i2u163_41
 10576  0013FC  EF00  F00A         
 10577                           i2u163_41:
 10578  001400                     	goto	i2l2117
 10579  001400  EF16  F00A         i2u163_40:
 10580  001404                     	line	21
 10581                           	
 10582                           i2l2113:
 10583  001404                     	comf	((c:i2___aodiv@dividend+7)),c
 10584  001404  1E08               	comf	((c:i2___aodiv@dividend+6)),c
 10585  001406  1E07               	comf	((c:i2___aodiv@dividend+5)),c
 10586  001408  1E06               	comf	((c:i2___aodiv@dividend+4)),c
 10587  00140A  1E05               	comf	((c:i2___aodiv@dividend+3)),c
 10588  00140C  1E04               	comf	((c:i2___aodiv@dividend+2)),c
 10589  00140E  1E03               	comf	((c:i2___aodiv@dividend+1)),c
 10590  001410  1E02               	negf	((c:i2___aodiv@dividend)),c
 10591  001412  6C01               	movlw	0
 10592  001414  0E00               	addwfc	((c:i2___aodiv@dividend+1)),c
 10593  001416  2202               	addwfc	((c:i2___aodiv@dividend+2)),c
 10594  001418  2203               	addwfc	((c:i2___aodiv@dividend+3)),c
 10595  00141A  2204               	addwfc	((c:i2___aodiv@dividend+4)),c
 10596  00141C  2205               	addwfc	((c:i2___aodiv@dividend+5)),c
 10597  00141E  2206               	addwfc	((c:i2___aodiv@dividend+6)),c
 10598  001420  2207               	addwfc	((c:i2___aodiv@dividend+7)),c
 10599  001422  2208               	line	22
 10600                           	
 10601                           i2l2115:
 10602  001424                     	movlw	(01h)&0ffh
 10603  001424  0E01               	xorwf	((c:i2___aodiv@sign)),c
 10604  001426  1A12               	goto	i2l2117
 10605  001428  EF16  F00A         	line	23
 10606                           	
 10607                           i2l358:
 10608  00142C                     	line	24
 10609                           	
 10610                           i2l2117:
 10611  00142C                     	lfsr	2,(i2___aodiv@quotient)
 10612  00142C  EE20  F013         	movlw	8-1
 10613  001430  0E07               i2u164_41:
 10614  001432                     	clrf	postinc2
 10615  001432  6ADE               	decf	wreg
 10616  001434  06E8               	bc	i2u164_41
 10617  001436  E2FD               	line	25
 10618                           	
 10619                           i2l2119:
 10620  001438                     	movf	((c:i2___aodiv@divisor)),c,w
 10621  001438  5009               iorwf	((c:i2___aodiv@divisor+1)),c,w
 10622  00143A  100A               iorwf	((c:i2___aodiv@divisor+2)),c,w
 10623  00143C  100B               iorwf	((c:i2___aodiv@divisor+3)),c,w
 10624  00143E  100C               iorwf	((c:i2___aodiv@divisor+4)),c,w
 10625  001440  100D               iorwf	((c:i2___aodiv@divisor+5)),c,w
 10626  001442  100E               iorwf	((c:i2___aodiv@divisor+6)),c,w
 10627  001444  100F               iorwf	((c:i2___aodiv@divisor+7)),c,w
 10628  001446  1010               	btfsc	status,2
 10629  001448  B4D8               	goto	i2u165_41
 10630  00144A  EF29  F00A         	goto	i2u165_40
 10631  00144E  EF2B  F00A         
 10632                           i2u165_41:
 10633  001452                     	goto	i2l2139
 10634  001452  EF89  F00A         i2u165_40:
 10635  001456                     	line	26
 10636                           	
 10637                           i2l2121:
 10638  001456                     	movlw	low(01h)
 10639  001456  0E01               	movwf	((c:i2___aodiv@counter)),c
 10640  001458  6E11               	line	27
 10641                           	goto	i2l2125
 10642  00145A  EF3B  F00A         	
 10643                           i2l361:
 10644  00145E                     	line	28
 10645                           	
 10646                           i2l2123:
 10647  00145E                     	bcf	status,0
 10648  00145E  90D8               	rlcf	((c:i2___aodiv@divisor)),c
 10649  001460  3609               	rlcf	((c:i2___aodiv@divisor+1)),c
 10650  001462  360A               	rlcf	((c:i2___aodiv@divisor+2)),c
 10651  001464  360B               	rlcf	((c:i2___aodiv@divisor+3)),c
 10652  001466  360C               	rlcf	((c:i2___aodiv@divisor+4)),c
 10653  001468  360D               	rlcf	((c:i2___aodiv@divisor+5)),c
 10654  00146A  360E               	rlcf	((c:i2___aodiv@divisor+6)),c
 10655  00146C  360F               	rlcf	((c:i2___aodiv@divisor+7)),c
 10656  00146E  3610               	line	29
 10657                           	incf	((c:i2___aodiv@counter)),c
 10658  001470  2A11               	goto	i2l2125
 10659  001472  EF3B  F00A         	line	30
 10660                           	
 10661                           i2l360:
 10662  001476                     	line	27
 10663                           	
 10664                           i2l2125:
 10665  001476                     	
 10666                           	btfss	((c:i2___aodiv@divisor+7)),c,(63)&7
 10667  001476  AE10               	goto	i2u166_41
 10668  001478  EF40  F00A         	goto	i2u166_40
 10669  00147C  EF42  F00A         i2u166_41:
 10670  001480                     	goto	i2l2123
 10671  001480  EF2F  F00A         i2u166_40:
 10672  001484                     	goto	i2l2127
 10673  001484  EF46  F00A         	
 10674                           i2l362:
 10675  001488                     	goto	i2l2127
 10676  001488  EF46  F00A         	line	31
 10677                           	
 10678                           i2l363:
 10679  00148C                     	line	32
 10680                           	
 10681                           i2l2127:
 10682  00148C                     	bcf	status,0
 10683  00148C  90D8               	rlcf	((c:i2___aodiv@quotient)),c
 10684  00148E  3613               	rlcf	((c:i2___aodiv@quotient+1)),c
 10685  001490  3614               	rlcf	((c:i2___aodiv@quotient+2)),c
 10686  001492  3615               	rlcf	((c:i2___aodiv@quotient+3)),c
 10687  001494  3616               	rlcf	((c:i2___aodiv@quotient+4)),c
 10688  001496  3617               	rlcf	((c:i2___aodiv@quotient+5)),c
 10689  001498  3618               	rlcf	((c:i2___aodiv@quotient+6)),c
 10690  00149A  3619               	rlcf	((c:i2___aodiv@quotient+7)),c
 10691  00149C  361A               	line	33
 10692                           	
 10693                           i2l2129:
 10694  00149E                     		movf	((c:i2___aodiv@divisor)),c,w
 10695  00149E  5009               	subwf	((c:i2___aodiv@dividend)),c,w
 10696  0014A0  5C01               	movf	((c:i2___aodiv@divisor+1)),c,w
 10697  0014A2  500A               	subwfb	((c:i2___aodiv@dividend+1)),c,w
 10698  0014A4  5802               	movf	((c:i2___aodiv@divisor+2)),c,w
 10699  0014A6  500B               	subwfb	((c:i2___aodiv@dividend+2)),c,w
 10700  0014A8  5803               	movf	((c:i2___aodiv@divisor+3)),c,w
 10701  0014AA  500C               	subwfb	((c:i2___aodiv@dividend+3)),c,w
 10702  0014AC  5804               	movf	((c:i2___aodiv@divisor+4)),c,w
 10703  0014AE  500D               	subwfb	((c:i2___aodiv@dividend+4)),c,w
 10704  0014B0  5805               	movf	((c:i2___aodiv@divisor+5)),c,w
 10705  0014B2  500E               	subwfb	((c:i2___aodiv@dividend+5)),c,w
 10706  0014B4  5806               	movf	((c:i2___aodiv@divisor+6)),c,w
 10707  0014B6  500F               	subwfb	((c:i2___aodiv@dividend+6)),c,w
 10708  0014B8  5807               	movf	((c:i2___aodiv@divisor+7)),c,w
 10709  0014BA  5010               	subwfb	((c:i2___aodiv@dividend+7)),c,w
 10710  0014BC  5808               	btfss	status,0
 10711  0014BE  A0D8               	goto	i2u167_41
 10712  0014C0  EF64  F00A         	goto	i2u167_40
 10713  0014C4  EF66  F00A         
 10714                           i2u167_41:
 10715  0014C8                     	goto	i2l2135
 10716  0014C8  EF79  F00A         i2u167_40:
 10717  0014CC                     	line	34
 10718                           	
 10719                           i2l2131:
 10720  0014CC                     	movf	((c:i2___aodiv@divisor)),c,w
 10721  0014CC  5009               	subwf	((c:i2___aodiv@dividend)),c
 10722  0014CE  5E01               	movf	((c:i2___aodiv@divisor+1)),c,w
 10723  0014D0  500A               	subwfb	((c:i2___aodiv@dividend+1)),c
 10724  0014D2  5A02               	movf	((c:i2___aodiv@divisor+2)),c,w
 10725  0014D4  500B               	subwfb	((c:i2___aodiv@dividend+2)),c
 10726  0014D6  5A03               	movf	((c:i2___aodiv@divisor+3)),c,w
 10727  0014D8  500C               	subwfb	((c:i2___aodiv@dividend+3)),c
 10728  0014DA  5A04               	movf	((c:i2___aodiv@divisor+4)),c,w
 10729  0014DC  500D               	subwfb	((c:i2___aodiv@dividend+4)),c
 10730  0014DE  5A05               	movf	((c:i2___aodiv@divisor+5)),c,w
 10731  0014E0  500E               	subwfb	((c:i2___aodiv@dividend+5)),c
 10732  0014E2  5A06               	movf	((c:i2___aodiv@divisor+6)),c,w
 10733  0014E4  500F               	subwfb	((c:i2___aodiv@dividend+6)),c
 10734  0014E6  5A07               	movf	((c:i2___aodiv@divisor+7)),c,w
 10735  0014E8  5010               	subwfb	((c:i2___aodiv@dividend+7)),c
 10736  0014EA  5A08               	line	35
 10737                           	
 10738                           i2l2133:
 10739  0014EC                     	bsf	(0+(0/8)+(c:i2___aodiv@quotient)),c,(0)&7
 10740  0014EC  8013               	goto	i2l2135
 10741  0014EE  EF79  F00A         	line	36
 10742                           	
 10743                           i2l364:
 10744  0014F2                     	line	37
 10745                           	
 10746                           i2l2135:
 10747  0014F2                     	bcf	status,0
 10748  0014F2  90D8               	rrcf	((c:i2___aodiv@divisor+7)),c
 10749  0014F4  3210               	rrcf	((c:i2___aodiv@divisor+6)),c
 10750  0014F6  320F               	rrcf	((c:i2___aodiv@divisor+5)),c
 10751  0014F8  320E               	rrcf	((c:i2___aodiv@divisor+4)),c
 10752  0014FA  320D               	rrcf	((c:i2___aodiv@divisor+3)),c
 10753  0014FC  320C               	rrcf	((c:i2___aodiv@divisor+2)),c
 10754  0014FE  320B               	rrcf	((c:i2___aodiv@divisor+1)),c
 10755  001500  320A               	rrcf	((c:i2___aodiv@divisor)),c
 10756  001502  3209               	line	38
 10757                           	
 10758                           i2l2137:
 10759  001504                     	decfsz	((c:i2___aodiv@counter)),c
 10760  001504  2E11               	
 10761                           	goto	i2l2127
 10762  001506  EF46  F00A         	goto	i2l2139
 10763  00150A  EF89  F00A         	
 10764                           i2l365:
 10765  00150E                     	goto	i2l2139
 10766  00150E  EF89  F00A         	line	39
 10767                           	
 10768                           i2l359:
 10769  001512                     	line	40
 10770                           	
 10771                           i2l2139:
 10772  001512                     	movf	((c:i2___aodiv@sign)),c,w
 10773  001512  5012               	btfsc	status,2
 10774  001514  B4D8               	goto	i2u168_41
 10775  001516  EF8F  F00A         	goto	i2u168_40
 10776  00151A  EF91  F00A         i2u168_41:
 10777  00151E                     	goto	i2l2143
 10778  00151E  EFA3  F00A         i2u168_40:
 10779  001522                     	line	41
 10780                           	
 10781                           i2l2141:
 10782  001522                     	comf	((c:i2___aodiv@quotient+7)),c
 10783  001522  1E1A               	comf	((c:i2___aodiv@quotient+6)),c
 10784  001524  1E19               	comf	((c:i2___aodiv@quotient+5)),c
 10785  001526  1E18               	comf	((c:i2___aodiv@quotient+4)),c
 10786  001528  1E17               	comf	((c:i2___aodiv@quotient+3)),c
 10787  00152A  1E16               	comf	((c:i2___aodiv@quotient+2)),c
 10788  00152C  1E15               	comf	((c:i2___aodiv@quotient+1)),c
 10789  00152E  1E14               	negf	((c:i2___aodiv@quotient)),c
 10790  001530  6C13               	movlw	0
 10791  001532  0E00               	addwfc	((c:i2___aodiv@quotient+1)),c
 10792  001534  2214               	addwfc	((c:i2___aodiv@quotient+2)),c
 10793  001536  2215               	addwfc	((c:i2___aodiv@quotient+3)),c
 10794  001538  2216               	addwfc	((c:i2___aodiv@quotient+4)),c
 10795  00153A  2217               	addwfc	((c:i2___aodiv@quotient+5)),c
 10796  00153C  2218               	addwfc	((c:i2___aodiv@quotient+6)),c
 10797  00153E  2219               	addwfc	((c:i2___aodiv@quotient+7)),c
 10798  001540  221A               	goto	i2l2143
 10799  001542  EFA3  F00A         	
 10800                           i2l366:
 10801  001546                     	line	42
 10802                           	
 10803                           i2l2143:
 10804  001546                     	movff	(c:i2___aodiv@quotient),(c:?i2___aodiv)
 10805  001546  C013  F001         	movff	(c:i2___aodiv@quotient+1),(c:?i2___aodiv+1)
 10806  00154A  C014  F002         	movff	(c:i2___aodiv@quotient+2),(c:?i2___aodiv+2)
 10807  00154E  C015  F003         	movff	(c:i2___aodiv@quotient+3),(c:?i2___aodiv+3)
 10808  001552  C016  F004         	movff	(c:i2___aodiv@quotient+4),(c:?i2___aodiv+4)
 10809  001556  C017  F005         	movff	(c:i2___aodiv@quotient+5),(c:?i2___aodiv+5)
 10810  00155A  C018  F006         	movff	(c:i2___aodiv@quotient+6),(c:?i2___aodiv+6)
 10811  00155E  C019  F007         	movff	(c:i2___aodiv@quotient+7),(c:?i2___aodiv+7)
 10812  001562  C01A  F008         	goto	i2l367
 10813  001566  EFB5  F00A         	
 10814                           i2l2145:
 10815  00156A                     	line	43
 10816                           	
 10817                           i2l367:
 10818  00156A                     	return	;funcret
 10819  00156A  0012               	opt stack 0
 10820                           GLOBAL	__end_ofi2___aodiv
 10821                           	__end_ofi2___aodiv:
 10822  00156C                     	signat	i2___aodiv,95
 10823                           	global	i2_lcd_puts
 10824                           
 10825 ;; *************** function i2_lcd_puts *****************
 10826 ;; Defined at:
 10827 ;;		line 62 in file "lcd.c"
 10828 ;; Parameters:    Size  Location     Type
 10829 ;;  s               2    1[COMRAM] PTR const unsigned char 
 10830 ;;		 -> STR_11(10), STR_10(14), STR_8(16), STR_6(18), 
 10831 ;;		 -> STR_5(7), STR_3(7), num(3), STR_1(9), 
 10832 ;; Auto vars:     Size  Location     Type
 10833 ;;		None
 10834 ;; Return value:  Size  Location     Type
 10835 ;;                  1    wreg      void 
 10836 ;; Registers used:
 10837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10838 ;; Tracked objects:
 10839 ;;		On entry : 0/0
 10840 ;;		On exit  : 0/0
 10841 ;;		Unchanged: 0/0
 10842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10843 ;;      Params:         2       0       0       0       0       0       0
 10844 ;;      Locals:         0       0       0       0       0       0       0
 10845 ;;      Temps:          0       0       0       0       0       0       0
 10846 ;;      Totals:         2       0       0       0       0       0       0
 10847 ;;Total ram usage:        2 bytes
 10848 ;; Hardware stack levels used:    1
 10849 ;; Hardware stack levels required when called:    1
 10850 ;; This function calls:
 10851 ;;		i2_lcd_write
 10852 ;; This function is called by:
 10853 ;;		_bloqueada
 10854 ;;		i2_mostra
 10855 ;; This function uses a non-reentrant model
 10856 ;;
 10857                           psect	text45,class=CODE,space=0,reloc=2,group=0
 10858                           	file	"lcd.c"
 10859                           	line	62
 10860                           global __ptext45
 10861                           __ptext45:
 10862  002190                     psect	text45
 10863                           	file	"lcd.c"
 10864                           	line	62
 10865                           	global	__size_ofi2_lcd_puts
 10866                           	__size_ofi2_lcd_puts	equ	__end_ofi2_lcd_puts-i2_lcd_puts
 10867  0000                     	
 10868                           i2_lcd_puts:
 10869  002190                     ;incstack = 0
 10870                           	opt	stack 14
 10871                           	line	64
 10872                           	
 10873                           i2l2503:
 10874  002190                     ;lcd.c: 62: lcd_puts(const char * s);lcd.c: 63: {;lcd.c: 64:  LE0 = 1;
 10875                           	bsf	c:(31848/8),(31848)&7	;volatile
 10876  002190  808D               	line	65
 10877                           ;lcd.c: 65:  while(*s)
 10878                           	goto	i2l2509
 10879  002192  EFE1  F010         	
 10880                           i2l18:
 10881  002196                     	line	66
 10882                           	
 10883                           i2l2505:
 10884  002196                     ;lcd.c: 66:   lcd_write(*s++);
 10885                           	movff	(c:i2lcd_puts@s),tblptrl
 10886  002196  C002  FFF6         	movff	(c:i2lcd_puts@s+1),tblptrh
 10887  00219A  C003  FFF7         	clrf	tblptru
 10888  00219E  6AF8               	
 10889                           	movlw	high __ramtop-1
 10890  0021A0  0E05               	cpfsgt	tblptrh
 10891  0021A2  64F7               	bra	i2u219_47
 10892  0021A4  D003               	tblrd	*
 10893  0021A6  0008               	
 10894                           	movf	tablat,w
 10895  0021A8  50F5               	bra	i2u219_40
 10896  0021AA  D005               i2u219_47:
 10897  0021AC                     	movff	tblptrl,fsr1l
 10898  0021AC  CFF6 FFE1          	movff	tblptrh,fsr1h
 10899  0021B0  CFF7 FFE2          	movf	indf1,w
 10900  0021B4  50E7               i2u219_40:
 10901  0021B6                     	
 10902                           	call	i2_lcd_write
 10903  0021B6  EC24  F014         	
 10904                           i2l2507:
 10905  0021BA                     	infsnz	((c:i2lcd_puts@s)),c
 10906  0021BA  4A02               	incf	((c:i2lcd_puts@s+1)),c
 10907  0021BC  2A03               	goto	i2l2509
 10908  0021BE  EFE1  F010         	
 10909                           i2l17:
 10910  0021C2                     	line	65
 10911                           	
 10912                           i2l2509:
 10913  0021C2                     ;lcd.c: 65:  while(*s)
 10914                           	movff	(c:i2lcd_puts@s),tblptrl
 10915  0021C2  C002  FFF6         	movff	(c:i2lcd_puts@s+1),tblptrh
 10916  0021C6  C003  FFF7         	clrf	tblptru
 10917  0021CA  6AF8               	
 10918                           	movlw	high __ramtop-1
 10919  0021CC  0E05               	cpfsgt	tblptrh
 10920  0021CE  64F7               	bra	i2u220_47
 10921  0021D0  D003               	tblrd	*
 10922  0021D2  0008               	
 10923                           	movf	tablat,w
 10924  0021D4  50F5               	bra	i2u220_40
 10925  0021D6  D005               i2u220_47:
 10926  0021D8                     	movff	tblptrl,fsr1l
 10927  0021D8  CFF6 FFE1          	movff	tblptrh,fsr1h
 10928  0021DC  CFF7 FFE2          	movf	indf1,w
 10929  0021E0  50E7               i2u220_40:
 10930  0021E2                     	iorlw	0
 10931  0021E2  0900               	btfss	status,2
 10932  0021E4  A4D8               	goto	i2u221_41
 10933  0021E6  EFF7  F010         	goto	i2u221_40
 10934  0021EA  EFF9  F010         i2u221_41:
 10935  0021EE                     	goto	i2l2505
 10936  0021EE  EFCB  F010         i2u221_40:
 10937  0021F2                     	goto	i2l20
 10938  0021F2  EFFB  F010         	
 10939                           i2l19:
 10940  0021F6                     	line	67
 10941                           	
 10942                           i2l20:
 10943  0021F6                     	return	;funcret
 10944  0021F6  0012               	opt stack 0
 10945                           GLOBAL	__end_ofi2_lcd_puts
 10946                           	__end_ofi2_lcd_puts:
 10947  0021F8                     	signat	i2_lcd_puts,89
 10948                           	global	i2_lcd_goto
 10949                           
 10950 ;; *************** function i2_lcd_goto *****************
 10951 ;; Defined at:
 10952 ;;		line 84 in file "lcd.c"
 10953 ;; Parameters:    Size  Location     Type
 10954 ;;  pos             1    wreg     unsigned char 
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;  pos             1    1[COMRAM] unsigned char 
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  1    wreg      void 
 10959 ;; Registers used:
 10960 ;;		wreg, status,2, status,0, cstack
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10966 ;;      Params:         0       0       0       0       0       0       0
 10967 ;;      Locals:         1       0       0       0       0       0       0
 10968 ;;      Temps:          0       0       0       0       0       0       0
 10969 ;;      Totals:         1       0       0       0       0       0       0
 10970 ;;Total ram usage:        1 bytes
 10971 ;; Hardware stack levels used:    1
 10972 ;; Hardware stack levels required when called:    1
 10973 ;; This function calls:
 10974 ;;		i2_lcd_write
 10975 ;; This function is called by:
 10976 ;;		_bloqueada
 10977 ;;		i2_mostra
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           psect	text46,class=CODE,space=0,reloc=2,group=0
 10981                           	line	84
 10982                           global __ptext46
 10983                           __ptext46:
 10984  00286E                     psect	text46
 10985                           	file	"lcd.c"
 10986                           	line	84
 10987                           	global	__size_ofi2_lcd_goto
 10988                           	__size_ofi2_lcd_goto	equ	__end_ofi2_lcd_goto-i2_lcd_goto
 10989  0000                     	
 10990                           i2_lcd_goto:
 10991  00286E                     ;incstack = 0
 10992                           	opt	stack 14
 10993                           ;i2lcd_goto@pos stored from wreg
 10994                           	movwf	((c:i2lcd_goto@pos)),c
 10995  00286E  6E02               	line	86
 10996                           	
 10997                           i2l2511:
 10998  002870                     ;lcd.c: 84: lcd_goto(unsigned char pos);lcd.c: 85: {;lcd.c: 86:  LE0 = 0;
 10999                           	bcf	c:(31848/8),(31848)&7	;volatile
 11000  002870  908D               	line	87
 11001                           	
 11002                           i2l2513:
 11003  002872                     ;lcd.c: 87:  lcd_write(0x80+pos);
 11004                           	movf	((c:i2lcd_goto@pos)),c,w
 11005  002872  5002               	addlw	low(080h)
 11006  002874  0F80               	
 11007                           	call	i2_lcd_write
 11008  002876  EC24  F014         	line	88
 11009                           	
 11010                           i2l26:
 11011  00287A                     	return	;funcret
 11012  00287A  0012               	opt stack 0
 11013                           GLOBAL	__end_ofi2_lcd_goto
 11014                           	__end_ofi2_lcd_goto:
 11015  00287C                     	signat	i2_lcd_goto,89
 11016                           	global	i2_lcd_clear
 11017                           
 11018 ;; *************** function i2_lcd_clear *****************
 11019 ;; Defined at:
 11020 ;;		line 52 in file "lcd.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;		None
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;		None
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      void 
 11027 ;; Registers used:
 11028 ;;		wreg, status,2, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11034 ;;      Params:         0       0       0       0       0       0       0
 11035 ;;      Locals:         0       0       0       0       0       0       0
 11036 ;;      Temps:          1       0       0       0       0       0       0
 11037 ;;      Totals:         1       0       0       0       0       0       0
 11038 ;;Total ram usage:        1 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:    1
 11041 ;; This function calls:
 11042 ;;		i2_lcd_write
 11043 ;; This function is called by:
 11044 ;;		_bloqueada
 11045 ;;		i2_lcd_init
 11046 ;;		i2_mostra
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           psect	text47,class=CODE,space=0,reloc=2,group=0
 11050                           	line	52
 11051                           global __ptext47
 11052                           __ptext47:
 11053  00281A                     psect	text47
 11054                           	file	"lcd.c"
 11055                           	line	52
 11056                           	global	__size_ofi2_lcd_clear
 11057                           	__size_ofi2_lcd_clear	equ	__end_ofi2_lcd_clear-i2_lcd_clear
 11058  0000                     	
 11059                           i2_lcd_clear:
 11060  00281A                     ;incstack = 0
 11061                           	opt	stack 13
 11062                           	line	54
 11063                           	
 11064                           i2l2425:
 11065  00281A                     ;lcd.c: 54:  LE0 = 0;
 11066                           	bcf	c:(31848/8),(31848)&7	;volatile
 11067  00281A  908D               	line	55
 11068                           	
 11069                           i2l2427:
 11070  00281C                     ;lcd.c: 55:  lcd_write(0x01);
 11071                           	movlw	(01h)&0ffh
 11072  00281C  0E01               	
 11073                           	call	i2_lcd_write
 11074  00281E  EC24  F014         	line	56
 11075                           	
 11076                           i2l2429:
 11077  002822                     ;lcd.c: 56:  _delay((unsigned long)((2)*(4000000/4000.0)));
 11078                           	opt asmopt_push
 11079                           opt asmopt_off
 11080                           movlw	3
 11081  002822  0E03               movwf	(??i2_lcd_clear+0+0)&0ffh,c,f
 11082  002824  6E02               	movlw	152
 11083  002826  0E98               i2u289_47:
 11084  002828                     decfsz	wreg,f
 11085  002828  2EE8               	bra	i2u289_47
 11086  00282A  D7FE               	decfsz	(??i2_lcd_clear+0+0)&0ffh,c,f
 11087  00282C  2E02               	bra	i2u289_47
 11088  00282E  D7FC               opt asmopt_pop
 11089                           
 11090                           	line	57
 11091                           	
 11092                           i2l14:
 11093  002830                     	return	;funcret
 11094  002830  0012               	opt stack 0
 11095                           GLOBAL	__end_ofi2_lcd_clear
 11096                           	__end_ofi2_lcd_clear:
 11097  002832                     	signat	i2_lcd_clear,89
 11098                           	global	i2_lcd_write
 11099                           
 11100 ;; *************** function i2_lcd_write *****************
 11101 ;; Defined at:
 11102 ;;		line 38 in file "lcd.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  c               1    wreg     unsigned char 
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;  c               1    0[COMRAM] unsigned char 
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  1    wreg      void 
 11109 ;; Registers used:
 11110 ;;		wreg, status,2, cstack
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11116 ;;      Params:         0       0       0       0       0       0       0
 11117 ;;      Locals:         1       0       0       0       0       0       0
 11118 ;;      Temps:          0       0       0       0       0       0       0
 11119 ;;      Totals:         1       0       0       0       0       0       0
 11120 ;;Total ram usage:        1 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; This function calls:
 11123 ;;		Nothing
 11124 ;; This function is called by:
 11125 ;;		i2_lcd_clear
 11126 ;;		i2_lcd_puts
 11127 ;;		i2_lcd_goto
 11128 ;;		i2_lcd_init
 11129 ;; This function uses a non-reentrant model
 11130 ;;
 11131                           psect	text48,class=CODE,space=0,reloc=2,group=0
 11132                           	line	38
 11133                           global __ptext48
 11134                           __ptext48:
 11135  002848                     psect	text48
 11136                           	file	"lcd.c"
 11137                           	line	38
 11138                           	global	__size_ofi2_lcd_write
 11139                           	__size_ofi2_lcd_write	equ	__end_ofi2_lcd_write-i2_lcd_write
 11140  0000                     	
 11141                           i2_lcd_write:
 11142  002848                     ;incstack = 0
 11143                           	opt	stack 14
 11144                           ;i2lcd_write@c stored from wreg
 11145                           	movwf	((c:i2lcd_write@c)),c
 11146  002848  6E01               	line	40
 11147                           	
 11148                           i2l2361:
 11149  00284A                     ;lcd.c: 38: lcd_write(unsigned char c);lcd.c: 39: {;lcd.c: 40:  _delay((unsigned long)((
                                 1)*(4000000/4000.0)));
 11150                           	opt asmopt_push
 11151                           opt asmopt_off
 11152                           	movlw	200
 11153  00284A  0EC8               i2u290_47:
 11154  00284C                     	nop2
 11155  00284C  D000               decfsz	wreg,f
 11156  00284E  2EE8               	bra	i2u290_47
 11157  002850  D7FD               opt asmopt_pop
 11158                           
 11159                           	line	41
 11160                           	
 11161                           i2l2363:
 11162  002852                     ;lcd.c: 41:     PORTD = ( c );
 11163                           	movff	(c:i2lcd_write@c),(c:3971)	;volatile
 11164  002852  C001  FF83         	line	42
 11165                           	
 11166                           i2l2365:
 11167  002856                     ;lcd.c: 42:  ((LE1 = 1),(LE1=0));
 11168                           	bsf	c:(31849/8),(31849)&7	;volatile
 11169  002856  828D               	
 11170                           i2l2367:
 11171  002858                     	bcf	c:(31849/8),(31849)&7	;volatile
 11172  002858  928D               	line	45
 11173                           	
 11174                           i2l11:
 11175  00285A                     	return	;funcret
 11176  00285A  0012               	opt stack 0
 11177                           GLOBAL	__end_ofi2_lcd_write
 11178                           	__end_ofi2_lcd_write:
 11179  00285C                     	signat	i2_lcd_write,89
 11180                           psect	smallconst
 11181                           	db 0	; dummy byte at the end
 11182  00064E  00                 	global	__smallconst
 11183                           	global	__mediumconst
 11184                           	GLOBAL	__activetblptr
 11185                           __activetblptr	EQU	2
 11186  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
 11187                           	PSECT	rparam,class=COMRAM,space=1,noexec
 11188                           	GLOBAL	__Lrparam
 11189                           	FNCONF	rparam,??,?
 11190                           	GLOBAL	___rparam_used
 11191                           	___rparam_used EQU 1
 11192  0000                     	GLOBAL	___param_bank
 11193                           	___param_bank EQU 0
 11194  0000                     GLOBAL	__Lparam, __Hparam
 11195                           GLOBAL	__Lrparam, __Hrparam
 11196                           __Lparam	EQU	__Lrparam
 11197  0000                     __Hparam	EQU	__Hrparam
 11198  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
 11199                           	global	btemp
 11200                           btemp:
 11201  000078                     	ds	1
 11202  000078                     	global	int$flags
 11203                           	int$flags	set btemp
 11204  0000                     	global	wtemp8
 11205                           	wtemp8 set btemp+1
 11206  0000                     	global	ttemp5
 11207                           	ttemp5 set btemp+1
 11208  0000                     	global	ttemp6
 11209                           	ttemp6 set btemp+4
 11210  0000                     	global	ttemp7
 11211                           	ttemp7 set btemp+8
 11212  0000                     	end


Data Sizes:
    Strings     77
    Constant    0
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     119
    BANK0           128    113     128
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> num(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_9(CODE[3]), STR_7(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 3
		 -> num(BANK0[3]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 3
		 -> num(BANK0[3]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S805_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 3
		 -> num(BANK0[3]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 3
		 -> num(BANK0[3]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_9(CODE[3]), STR_7(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_9(CODE[3]), STR_7(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_11(CODE[10]), STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[18]), 
		 -> STR_5(CODE[7]), STR_3(CODE[7]), num(BANK0[3]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _tmr in COMRAM

    _tmr->_bloqueada
    i2_atualza_entrada->i2_mostra
    i2_mostra->i2_sprintf
    i2_lcd_init->i2_lcd_clear
    _bloqueada->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_lcd_puts->i2_lcd_write
    i2_lcd_goto->i2_lcd_write
    i2_lcd_clear->i2_lcd_write

Critical Paths under _main in BANK0

    _gira_horarioF->_lcd_puts
    _atualza_entrada->_mostra
    _mostra->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_clear
    _lcd_clear->_lcd_write
    _lcd_goto->_lcd_write

Critical Paths under _tmr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tmr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tmr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tmr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tmr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tmr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     1      5    9037
                                            107 BANK0      6     1      5
                             _acende
                             _config
                  _gira_anti_horario
                       _gira_horario
                      _gira_horarioF
 ---------------------------------------------------------------------------------
 (1) _gira_horarioF                                        2     2      0     813
                                              3 BANK0      2     2      0
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _gira_horario                                         0     0      0    8028
                    _atualza_entrada
 ---------------------------------------------------------------------------------
 (2) _atualza_entrada                                      0     0      0    8028
                             _acende
                             _mostra
 ---------------------------------------------------------------------------------
 (3) _mostra                                               4     2      2    7832
                                            103 BANK0      4     2      2
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             16    10      6    6832
                                             87 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6    6120
                                             79 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           42    36      6    5751
                                             63 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    4358
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    2709
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               6     4      2     166
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1235
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2     747
                                              1 BANK0      2     0      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_init                                             2     2      0      67
                                              2 BANK0      2     2      0
                          _lcd_clear
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0      22
                                              1 BANK0      1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             1     1      0      44
                                              1 BANK0      1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _acende                                               2     0      2     196
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _gira_anti_horario                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _tmr                                                 8     8      0    9909
                                            109 COMRAM     8     8      0
                          _bloqueada
                i2_gira_anti_horario
                     i2_gira_horario
 ---------------------------------------------------------------------------------
 (13) i2_gira_horario                                      0     0      0    4862
                  i2_atualza_entrada
 ---------------------------------------------------------------------------------
 (14) i2_atualza_entrada                                   0     0      0    4862
                           i2_acende
                           i2_mostra
 ---------------------------------------------------------------------------------
 (15) i2_mostra                                            4     2      2    4792
                                            103 COMRAM     4     2      2
                        i2_lcd_clear
                         i2_lcd_goto
                         i2_lcd_init
                         i2_lcd_puts
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (16) i2_lcd_init                                          2     2      0      67
                                              2 COMRAM     2     2      0
                        i2_lcd_clear
                        i2_lcd_write
 ---------------------------------------------------------------------------------
 (15) i2_acende                                            2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_gira_anti_horario                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _bloqueada                                           6     2      4    5047
                                            103 COMRAM     6     2      4
                        i2_lcd_clear
                         i2_lcd_goto
                         i2_lcd_puts
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (16) i2_sprintf                                          16    10      6    4262
                                             87 COMRAM    16    10      6
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (17) i2_vfprintf                                          8     2      6    3855
                                             79 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (18) i2_vfpfcnvrt                                        42    36      6    3651
                                             63 COMRAM    16    10      6
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (19) i2_dtoa                                             36    26     10    2808
                                             27 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (20) i2_pad                                              11     5      6    1509
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (21) i2_strlen                                            6     4      2     116
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (21) i2_fputs                                             7     3      4     635
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (19) i2_fputc                                             9     5      4     434
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (20) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (20) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (20) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (20) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (16) i2_lcd_puts                                          2     0      2     327
                                              1 COMRAM     2     0      2
                        i2_lcd_write
 ---------------------------------------------------------------------------------
 (16) i2_lcd_goto                                          1     1      0      44
                                              1 COMRAM     1     1      0
                        i2_lcd_write
 ---------------------------------------------------------------------------------
 (17) i2_lcd_clear                                         1     1      0      22
                                              1 COMRAM     1     1      0
                        i2_lcd_write
 ---------------------------------------------------------------------------------
 (17) i2_lcd_write                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _acende
   _config
   _gira_anti_horario
   _gira_horario
     _atualza_entrada
       _acende
       _mostra
         _lcd_clear
           _lcd_write
         _lcd_goto
           _lcd_write
         _lcd_init
           _lcd_clear
             _lcd_write
           _lcd_write
         _lcd_puts
           _lcd_write
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
   _gira_horarioF
     _lcd_clear
       _lcd_write
     _lcd_goto
       _lcd_write
     _lcd_puts
       _lcd_write

 _tmr (ROOT)
   _bloqueada
     i2_lcd_clear
       i2_lcd_write
     i2_lcd_goto
       i2_lcd_write
     i2_lcd_puts
       i2_lcd_write
     i2_sprintf
       i2_vfprintf
         i2_vfpfcnvrt
           i2_dtoa
             i2___aodiv
             i2___aomod
             i2_abs
               i2___aomod (ARG)
             i2_pad
               i2_fputc
                 i2_putch
               i2_fputs
                 i2_fputc
                   i2_putch
               i2_strlen
           i2_fputc
             i2_putch
   i2_gira_anti_horario
   i2_gira_horario
     i2_atualza_entrada
       i2_acende
       i2_mostra
         i2_lcd_clear
           i2_lcd_write
         i2_lcd_goto
           i2_lcd_write
         i2_lcd_init
           i2_lcd_clear
             i2_lcd_write
           i2_lcd_write
         i2_lcd_puts
           i2_lcd_write
         i2_sprintf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                   i2_fputs
                     i2_fputc
                       i2_putch
                   i2_strlen
               i2_fputc
                 i2_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     71      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      77       1       94.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     117      15        0.0%
DATA                 0      0     117       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Dec 06 10:58:12 2019

                          l11 2846                            l20 218E                            l14 2818  
                          l17 215A                            l26 286C                            l18 212C  
                          l19 218E                            l29 2124                            l96 26DA  
         acende@quant_pessoas 0080                   __CFG_BORV$3 000000             i2_atualza_entrada 279A  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l110 2452                           l111 2456  
                         l112 2460                           l113 2488                           l201 1F32  
                         l114 2488                           l210 1FE2                           l122 2798  
                         l203 1F4E                           l109 2450                           l205 1F56  
                         l221 072C                           l213 06BE                           l117 1A9E  
                         l125 27DE                           l206 1F80                           l222 0850  
                         l214 06D2                           l118 1B3A                           l126 27DE  
                         l207 1F62                           l231 08FC                           l223 0752  
                         l119 1B3A                           l208 1F9E                           l216 06F8  
                         l240 0F80                           l160 0D18                           l209 1FC4  
                         l233 0920                           l225 08D4                           l129 2654  
                         l161 0D7E                           l138 2710                           l218 0700  
                         l242 0EFC                           l250 225C                           l170 0DD4  
                         l162 0D7A                           l139 2710                           l235 092C  
                         l227 08D0                           l219 0736                           l243 103C  
                         l171 0E5C                           l163 0D60                           l155 0CBA  
                         l236 096C                           l228 08D8                           l244 0FDA  
                         l172 0E58                           l164 0D60                           l156 0D1C  
                         l229 0940                           l173 0E3E                           l165 0D72  
                         l157 0D1C                           l174 0E3E                           l166 0DFA  
                         l158 0D06                           l239 0FFA                           l247 2238  
                         l175 0E50                           l167 0DF6                           l159 0CFE  
                         l360 12C6                           l248 220C                           l176 0E60  
                         l168 0DC2                           l361 12AE                           l249 2254  
                         l177 0E64                           l169 0DC2                           l362 12D8  
                         l370 15A8                           l178 0E64                           l363 12DC  
                         l371 15DA                           l364 1342                           l380 16F8  
                         l372 16A0                           l365 135E                           l357 1246  
                         l373 1618                           l366 1396                           l358 127C  
                         l374 1600                           l367 13BA                           l359 1362  
                         l375 162A                           l376 162E                           l377 1680  
                         l378 169C                           l379 16D4                           l930 2610  
                         l931 2610                           l940 1D42                           l942 1CF8  
                         l950 257E                           l943 1D4A                           l951 257E  
                         l928 2604                           l936 1C9E                           l961 287C  
                         l938 1C94                           _LE0 007C68                           l939 1D46  
                         _LE1 007C69                           l948 255A                           l964 23F4  
                         l949 253E                           l965 23EA                           l966 2410  
                         l958 2382                           l967 2432                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000            i2___aodiv@quotient 0013            ?i2_atualza_entrada 0001  
                         _abs 25CC                           _pad 1F0A                           _num 00FD  
                         _tmr 0008                   lcd_goto@pos 0081                           wreg 000FE8  
         __end_ofi2_vfpfcnvrt 120A                 ?_gira_horario 0001                    i2_dtoa$344 002E  
                __CFG_LVP$OFF 000000           ??i2_atualza_entrada 006C                    i2_lcd_init 225E  
                __CFG_WDT$OFF 000000                    i2_lcd_goto 286E                          l2001 120A  
                        l2011 1254                          l2003 1210                          ?_abs 0092  
                        l2021 12AE                          l2013 1274                          l2005 121E  
                        l2031 133C                          l2023 12C6                          l2015 127C  
                        l2007 123E                          l2041 1396                          l2033 1342  
                        l2025 12DC                          l2017 1288                          l2009 1246  
                        l2201 0708                          l2043 13BA                          l2035 1354  
                        l2027 12EE                          l2019 12A6                          l2051 15A0  
                        l2211 0752                          l2203 071A                          l2029 131C  
                        l2037 1362                          l2061 1600                          l2053 15A8  
                        l2045 156C                          l2213 0758                          l2221 0850  
                        l2205 072C                          l2311 2836                          l2039 1372  
                        l2071 1692                          l2063 1618                          l2055 15B6  
                        l2047 1572                          l2223 086C                          l2231 08D8  
                        l2215 07DC                          l2207 0736                          l2313 283E  
                        l2065 162E                          l2073 16A0                          l2057 15DA  
                        l2049 1580                          l2241 0920                          l2233 08EA  
                        l2225 088A                          l2217 07E2                          l2209 073E  
                        l2321 0E8C                          l2315 2842                          l2411 27FE  
                        l2075 16B0                          l2067 165C                          l2059 15F8  
                        l2243 092C                          l2235 08FC                          l2227 08A4  
                        l2219 07E8                          l2331 0EFC                          l2323 0E9A  
                        l2317 2844                          l2413 2800                          l2077 16D4  
                        l2069 1680                          l2237 0902                          l2245 0940  
                        l2229 08BE                          l2341 0FB2                          l2333 0F44  
                        l2325 0EAC                          l2421 220C                          l2501 2382  
                        l2415 2806                          l2079 16F8                          l2247 096C  
                        l2239 0914                          l2191 069A                          l2351 0FF6  
                        l2343 0FC8                          l2335 0F7C                          l2327 0EB0  
                        l2319 0E68                          l2423 2238                          l2441 212C  
                        l2193 06BE                          l2345 0FD6                          l2337 0F80  
                        l2329 0ED4                          l2353 0FFA                          l2417 21F8  
                        l2601 1ACE                          l2451 20BA                          l2443 2150  
                        l2195 06CC                          l2187 0650                          l2355 1020  
                        l2339 0FA4                          l2347 0FDA                          l2419 2200  
                        l2611 1B04                          l2603 1AD2                          l2461 20DA  
                        l2453 20C0                          l2445 215A                          l2197 06D2  
                        l2189 0670                          l2357 102E                          l2349 0FE8  
                        l2613 1B0A                          l2605 1AD8                          l2701 263A  
                        l2447 2860                          l2471 20F2                          l2463 20DC  
                        l2455 20C2                          l2439 2126                          l1911 1C6A  
                        l2199 06EC                          l2359 103C                          l2615 1B28  
                        l2607 1AE6                          l2449 2862                          l2481 210C  
                        l2473 20FA                          l2465 20DE                          l2457 20C4  
                        l1921 1CF8                          l1913 1C7E                          l2609 1B00  
                        l2801 0C98                          l2571 2460                          l2483 210E  
                        l2475 20FC                          l2467 20EE                          l2459 20D6  
                        l1923 1D4A                          l1915 1C94                          l2491 2326  
                        l2811 0CC8                          l2803 0C9C                          l2573 247C  
                        l2485 2114                          l2477 20FE                          l2469 20F0  
                        l1917 1C9E                          l1941 253E                          l2493 2338  
                        l2581 1A32                          l2821 0D2A                          l2813 0CDA  
                        l2805 0CA4                          l2567 2434                          l2487 211A  
                        l2479 210A                          l1919 1CBE                          l1943 2550  
                        l1951 23F4                          l2495 2340                          l2591 1A68  
                        l2583 1A36                          l2575 19FE                          l2671 278C  
                        l2831 0D8C                          l2823 0D3C                          l2815 0CE8  
                        l2807 0CAE                          l2681 26A2                          l2761 2704  
                        l2569 2448                          l2489 2120                          l1945 255A  
                        l1953 2410                          l2497 2348                          l2593 1A6E  
                        l2585 1A3C                          l2577 1A02                          l2841 0DE6  
                        l2833 0D9E                          l2825 0D4A                          l2817 0CFE  
                        l2809 0CBA                          l2683 26B0                          l1939 2530  
                        l1955 2432                          l1947 23DE                          l2499 236C  
                        l2595 1A8C                          l2587 1A4A                          l2579 1A22  
                        l2667 2772                          l2691 27D6                          l2851 0E50  
                        l2835 0DAC                          l2843 0DFA                          l2827 0D72  
                        l2819 0D06                          l2685 26B2                          l2757 26DC  
                        l1949 23EA                          l1981 1F42                          l2589 1A64  
                        l2597 1A9E                          l2669 2780                          l2693 2612  
                        l2845 0E08                          l2837 0DD4                          l2829 0D7E  
                        ?_pad 0090                          l2687 26B4                          l2679 269A  
                        l2759 26F0                          l1991 1FAC                          l1983 1F4E  
                        l1975 1F0A                          l2599 1ABE                          l2695 2622  
                        l2847 0E1A                          l2839 0DD8                          l1993 1FC4  
                        l1985 1F62                          l1977 1F1A                          l2689 27C2  
                        l2697 2626                          l2849 0E28                          l1995 1FE2  
                        l1987 1F76                          l1979 1F32                          l2699 262C  
                        l2795 0C8C                          l1997 25CC                          l1989 1F80  
                        l2797 0C90                          l1999 25E8                          l2799 0C94  
                  i2_lcd_puts 2190                          ?_tmr 0001                          STR_1 063B  
                        STR_2 064B                          STR_3 0644                          STR_4 064B  
                        STR_5 0644                          STR_6 0601                          STR_7 064B  
                        STR_8 0613                          STR_9 064B                          u1300 1CBE  
                        u1301 1CBA                          u1310 1CF4                          u1311 1CF0  
                        u1400 1F1A                          u1401 1F16                          u1410 1F42  
                        u1411 1F3E                          u2220 2448                          u1500 131C  
                        u1420 1F9E                          u2060 0E8C                          u2140 2254  
                        u2300 27D6                          u2221 2444                          u1501 1318  
                        u1421 1F9A                          u2061 0E88                          u2141 2250  
                        u2301 27D2                          u2230 247C                          u1510 1372  
                        u1430 1FAC                          u2070 0ED4                          u2231 2478  
                        u1511 136E                          u1431 1FA8                          u2071 0ED0  
                        u2160 214C                          u1520 1580                          u1440 25E8  
                        u1280 1C7E                          u1360 257A                          u2080 0EF8  
                        u2240 1A22                          u1521 157C                          u1441 25E4  
                        u1281 1C7A                          u1361 2576                          u2081 0EF4  
                        u2241 1A1E                          u2170 217A                          u1450 121E  
                        u1530 15B6                          u1290 1C90                          u1370 240C  
                        u2090 0FA4                          u2250 1ABE                          u1451 121A  
                        u1531 15B2                          u1291 1C8C                          u1371 2408  
                        u2091 0FA0                          u2251 1ABA                          u2340 26F0  
                        u2180 218A                          u1460 1254                          u1540 15F8  
                        u2500 0DAC                          u2341 26EC                          u2181 2186  
                        u1461 1250                          u1541 15F4                          u2501 0DA8  
                        u2350 2704                          u1550 1626                          u2510 0DD0  
                        u2430 0CC8                          u2351 2700                          u2167 2142  
                        u1471 1282                          u1551 1622                          u2511 0DCC  
                        u2431 0CC4                          u1480 12A6                          u1560 165C  
                        u1800 06EC                          u2520 0E08                          u2440 0CE8  
                        u2177 2170                          u1481 12A2                          u1561 1658  
                        u1801 06E8                          u2521 0E04                          u2441 0CE4  
                        u1490 12D4                          u1570 16B0                          u1810 071A  
                        u2530 0E28                          u2450 0D14                          u1491 12D0  
                        u1571 16AC                          u1811 0716                          u2531 0E24  
                        u2451 0D10                          u1900 0914                          u1820 0728  
                        u2540 0E4C                          u2460 0D2A                          u1901 0910  
                        u1821 0724                          u2541 0E48                          u2461 0D26  
                        u1830 086C                          u2470 0D4A                          u1831 0868  
                        u2607 0DB4                          u2471 0D46                          u1840 088A  
                        u1760 0682                          u2480 0D6E                          _IPEN 007E87  
                        u1841 0886                          u1761 067C                          u2617 0E10  
                        u2481 0D6A                          u1850 08A4                          u1770 0684  
                        u2490 0D8C                          u2707 20E6                          u1851 08A0  
                        u2627 0E30                          u2491 0D88                          u1860 08BE  
                        u1780 069A                          u2717 20F4                          u1861 08BA  
                        u1781 0696                          u2637 261A                          u2557 0CD0  
                        u1870 08CC                          u1790 06CC                          u2727 2100  
                        u1871 08C8                          u1791 06C8                          u2647 2646  
                        u2567 0CF0                          u1880 08EA                          u2737 280E  
                        u1881 08E6                          u2657 1A2A                          u2577 0D32  
                        u1890 08F8                          u2747 2838                          u1891 08F4  
                        u2667 1A56                          u2587 0D52                          u2677 1AC6  
                        u2597 0D94                          u2687 1AF2                          u2697 20CC  
                        i2l11 285A                          _RCIE 007CED                          i2l20 21F6  
                        _RCIF 007CF5                          i2l14 2830                          i2l17 21C2  
                        i2l26 287A                          i2l18 2196                          i2l19 21F6  
                        i2l29 22C2                          _RCIP 007CFD                          _TMR0 000FD6  
                        abs@a 0092                          _dbuf 0100                          _main 0C8C  
                        _dtoa 0650                          _prec 00F3                          _nout 0076  
                        pad@i 0097                          pad@p 0094                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          pad@w 0099                          fsr2l 000FD9  
                        btemp 0078                          start 000E                 __CFG_IESO$OFF 000000  
              ?_gira_horarioF 0001               __end_ofi2_fputc 1F0A               __end_ofi2_fputs 25CC  
             __end_ofi2_putch 2880                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
   __end_ofi2_atualza_entrada 27C2                         ??_abs 0094                         ??_pad 0096  
                       ??_tmr 006E                    i2_vfprintf 22C4                   i2_lcd_clear 281A  
             __end_of___aodiv 13BC                         ?_main 00EB                         ?_dtoa 009B  
             __end_of___aomod 16FA              ??i2_gira_horario 006C                         STR_10 0623  
                       STR_11 0631                   i2_lcd_write 2848                         _T0CON 000FD5  
                       i2l110 24A6                         i2l111 24AA                         i2l112 24B4  
                       i2l201 200C                         i2l113 24DC                         i2l210 20B8  
                       i2l114 24DC                         i2l122 27C0                         i2l203 2026  
                       i2l132 190A                         i2l205 202E                         i2l221 0A4A  
                       i2l213 09DA                         i2l133 1996                         i2l109 24A4  
                       i2l117 1BD4                         i2l125 27FC                         i2l206 2056  
                       i2l222 0B6C                         i2l214 09F0                         i2l134 19FC  
                       i2l118 1C68                         i2l126 27FC                         i2l150 1E08  
                       i2l207 203A                         i2l231 0C1A                         i2l223 0A70  
                       i2l135 19FC                         i2l119 1C68                         i2l208 2074  
                       i2l216 0A16                         i2l240 1156                         i2l144 1E08  
                       i2l209 209C                         i2l233 0C3E                         i2l225 0BF0  
                       i2l145 1DAC                         i2l218 0A1E                         i2l242 10D2  
                       i2l250 2324                         i2l138 2746                         i2l146 1E04  
                       i2l235 0C4A                         i2l227 0BEC                         i2l219 0A54  
                       i2l243 1208                         i2l139 2746                         i2l147 1DDA  
                       i2l236 0C8A                         i2l228 0BF4                         i2l244 11AC  
                       i2l148 1E00                         i2l229 0C5E                         i2l149 1DFC  
                       i2l239 11CA                         i2l247 2300                         i2l360 1476  
                       i2l248 22D8                         i2l361 145E                         i2l249 231C  
                       i2l362 1488                         i2l370 1734                         i2l363 148C  
                       i2l371 1766                         i2l364 14F2                         i2l380 1884  
                       i2l372 182C                         i2l365 150E                         i2l357 13F6  
                       i2l373 17A4                         i2l366 1546                         i2l358 142C  
                       i2l374 178C                         i2l367 156A                         i2l359 1512  
                       i2l375 17B6                         i2l376 17BA                         i2l377 180C  
                       i2l378 1828                         i2l379 1860                         i2l930 2698  
                       i2l931 2698                         i2l940 1F00                         i2l942 1EB6  
                       i2l950 25CA                         i2l943 1F08                         i2l951 25CA  
                       i2l928 268C                         i2l936 1E5E                         i2l961 287E  
                       i2l938 1E54                         i2l939 1F04                         i2l948 25A6  
                       i2l964 24F2                         i2l949 258C                         i2l965 24EA  
                       i2l966 250E                         i2l958 23DC                         i2l967 252E  
                       _RCREG 000FAE                         _RCSTA 000FAB                  vfpfcnvrt@fmt 00C1  
                       _SPBRG 000FAF                         _PORTB 000F81                         _PORTD 000F83  
                       _PORTE 000F84                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TRISE 000F96  
              ??_gira_horario 00EB                         i2_abs 2656                         _TXSTA 000FAC  
                       i2_pad 1FE4                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
           ??_atualza_entrada 00EB                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _flags 00F5                         _fputc 1C6A  
                       _fputs 2530                         pad@fp 0090                         _width 00F1  
                       _putch 287C                         dtoa@d 009D                         dtoa@i 00BD  
                       dtoa@n 00B5                         dtoa@p 00AF                         dtoa@s 00B3  
                       dtoa@w 00B1                         tablat 000FF5              __end_ofi2_acende 24DE  
                       ttemp5 0079                         ttemp6 007C                         ttemp7 0080  
                       status 000FD8                         wtemp8 0079               __end_of_sprintf 2384  
          __size_ofi2___aodiv 01B0            __size_ofi2___aomod 018C              __end_ofi2_mostra 1C6A  
            __end_ofi2_strlen 2530               __initialization 2748                  __end_of_main 0E68  
                __end_of_dtoa 096E                   i2_vfpfcnvrt 103E         i2mostra@quant_pessoas 0068  
               i2vfpfcnvrt@ap 0044                 i2vfpfcnvrt@fp 0040                 i2vfpfcnvrt@ll 0048  
                      ??_main 00F0                        ??_dtoa 00A5                 __activetblptr 000002  
                  i2sprintf@f 0062                    i2sprintf@s 0058            __size_ofi2_sprintf 005A  
                      ?i2_abs 0013                        ?i2_pad 0011                   i2lcd_puts@s 0002  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
                      ?_fputc 0080                        ?_fputs 0089                   ?i2_lcd_init 0001  
                 ?i2_lcd_goto 0001                        ?_putch 0001                   ?i2_lcd_puts 0002  
                      i2l2101 20B8                        i2l2111 13F6                        i2l2103 13BC  
                      i2l2121 1456                        i2l2113 1404                        i2l2105 13C0  
                      i2l2131 14CC                        i2l2123 145E                        i2l2115 1424  
                      i2l2107 13CE                        i2l2141 1522                        i2l2133 14EC  
                      i2l2125 1476                        i2l2117 142C                        i2l2109 13EE  
                      i2l2301 0C32                        i2l2143 1546                        i2l2135 14F2  
                      i2l2127 148C                        i2l2119 1438                        i2l2151 170C  
                      i2l2303 0C3E                        i2l2145 156A                        i2l2137 1504  
                      i2l2129 149E                        i2l2161 1784                        i2l2153 172C  
                      i2l2081 1FE4                        i2l2305 0C4A                        i2l2401 11C6  
                      i2l2139 1512                        i2l2171 180C                        i2l2163 178C  
                      i2l2155 1734                        i2l2147 16FA                        i2l2091 203A  
                      i2l2083 1FF4                        i2l2307 0C5E                        i2l2251 098E  
                      i2l2403 11CA                        i2l2181 1884                        i2l2173 181E  
                      i2l2165 17A4                        i2l2157 1742                        i2l2149 16FE  
                      i2l2093 204E                        i2l2085 200C                        i2l2309 0C8A  
                      i2l2261 0A0A                        i2l2253 09B6                        i2l2405 11EE  
                      i2l2511 2870                        i2l2503 2190                        i2l2167 17BA  
                      i2l2175 182C                        i2l2159 1766                        i2l2183 2656  
                      i2l2095 2056                        i2l2087 201A                        i2l2271 0A5C  
                      i2l2263 0A26                        i2l2255 09DA                        i2l2407 11FC  
                      i2l2431 22C4                        i2l2361 284A                        i2l2425 281A  
                      i2l2513 2872                        i2l2505 2196                        i2l2177 183C  
                      i2l2169 17E8                        i2l2185 2670                        i2l2097 2084  
                      i2l2089 2026                        i2l2281 0B04                        i2l2273 0A70  
                      i2l2265 0A38                        i2l2257 09EA                        i2l2249 096E  
                      i2l2409 1208                        i2l2433 22CC                        i2l2521 2266  
                      i2l2363 2852                        i2l2427 281C                        i2l2507 21BA  
                      i2l2179 1860                        i2l2099 209C                        i2l2291 0BD8  
                      i2l2275 0A76                        i2l2283 0B6C                        i2l2267 0A4A  
                      i2l2259 09F0                        i2l2371 1062                        i2l2435 22D8  
                      i2l2531 228C                        i2l2523 2274                        i2l2515 225E  
                      i2l2365 2856                        i2l2429 2822                        i2l2509 21C2  
                      i2l2285 0B86                        i2l2293 0BF4                        i2l2277 0AF8  
                      i2l2269 0A54                        i2l2381 10D2                        i2l2373 1070  
                      i2l2437 2300                        i2l2621 24B4                        i2l2541 229C  
                      i2l2533 228E                        i2l2525 2278                        i2l2517 2262  
                      i2l2367 2858                        i2l2295 0C06                        i2l2287 0BA4  
                      i2l2279 0AFE                        i2l2391 1188                        i2l2383 111A  
                      i2l2375 1082                        i2l2711 18B4                        i2l2703 1886  
                      i2l2623 24D0                        i2l2551 22B8                        i2l2543 22A8  
                      i2l2535 2290                        i2l2527 227A                        i2l2519 2264  
                      i2l2631 1B70                        i2l2297 0C1A                        i2l2289 0BBE  
                      i2l2393 119C                        i2l2385 1152                        i2l2377 1086  
                      i2l2369 103E                        i2l2561 23A4                        i2l2713 18C0  
                      i2l2705 189A                        i2l2721 190A                        i2l2617 248A  
                      i2l2553 22BE                        i2l2545 22AA                        i2l2537 2298  
                      i2l2529 227C                        i2l2641 1BA2                        i2l2633 1B74  
                      i2l2625 1B3C                        i2l1931 1E5E                        i2l2299 0C20  
                      i2l2395 11A8                        i2l2387 1156                        i2l2379 10AA  
                      i2l2563 23C8                        i2l2555 2384                        i2l2731 1944  
                      i2l2723 191E                        i2l2715 18D8                        i2l2707 18AA  
                      i2l2619 249C                        i2l2547 22AC                        i2l2539 229A  
                      i2l2651 1C04                        i2l2643 1BA8                        i2l2635 1B7A  
                      i2l2627 1B40                        i2l1933 1E7C                        i2l1925 1E2C  
                      i2l2389 117A                        i2l2397 11AC                        i2l2565 23DC  
                      i2l2557 2394                        i2l2733 195C                        i2l2725 192E  
                      i2l2741 1996                        i2l2717 18DE                        i2l2709 18AE  
                      i2l2549 22B2                        i2l2661 1C36                        i2l2653 1C08  
                      i2l2645 1BC4                        i2l2637 1B86                        i2l2629 1B60  
                      i2l1935 1EB6                        i2l1927 1E3E                        i2l2399 11BA  
                      i2l2559 239C                        i2l2751 19CE                        i2l2743 19A8  
                      i2l2735 1962                        i2l2727 1932                        i2l2719 18FA  
                      i2l2663 1C3C                        i2l2655 1C0E                        i2l2639 1B9E  
                      i2l2647 1BD4                        i2l1937 1F08                        i2l1929 1E54  
                      i2l1961 259E                        i2l2753 19D4                        i2l2745 19B8  
                      i2l2737 196A                        i2l2729 1938                        i2l2665 1C58  
                      i2l2657 1C1A                        i2l2649 1BF4                        i2l2673 279A  
                      i2l1963 25A6                        i2l1971 250E                        i2l2755 19E0  
                      i2l2747 19BC                        i2l2739 1986                        i2l2771 273A  
                      i2l2659 1C32                        i2l2675 27A8                        i2l2763 27E0  
                      i2l1957 2580                        i2l1973 252E                        i2l1965 24DE  
                      i2l2749 19C2                        i2l2677 27B4                        i2l2765 27F4  
                      i2l2781 1D7E                        i2l1959 258C                        i2l1967 24EA  
                      i2l2767 2712                        i2l2791 1DDA                        i2l2783 1D90  
                      i2l1969 24F2                        i2l2769 2726                        i2l2793 1DF0  
                      i2l2785 1D94                        i2l2777 1D6E                        i2l2787 1DAC  
                      i2l2779 1D7C                        i2l2789 1DBE                        _INTCON 000FF2  
                   ??i2_fputc 0005                     ??i2_fputs 000E                        _OSCCON 000FD3  
                   ??i2_putch 0001               ??_gira_horarioF 0083                i2___aodiv@sign 0012  
                      i2abs@a 0013                        i2_dtoa 096E                        i2pad@i 0018  
                      i2pad@p 0015                        i2pad@w 001A                __CFG_XINST$OFF 000000  
                vfprintf@cfmt 00D5              __end_of_lcd_init 2126              __end_of_lcd_goto 286E  
            __end_of_lcd_puts 2190                i2___aomod@sign 0012                        _acende 2434  
                   ??___aodiv 0090                 i2vfprintf@fmt 0052                     ??___aomod 0090  
              __CFG_STVREN$ON 000000    __size_ofi2_atualza_entrada 0028                        _config 269A  
                 ?i2_vfprintf 0050  __size_ofi2_gira_anti_horario 0036                        _estado 00F9  
                      clear_0 274E                        clear_1 275A                        _mostra 19FE  
                      pad@buf 0092                        dtoa@fp 009B                        _strlen 23DE  
                      fputc@c 0080                        fputs@c 008D                        fputs@i 008E  
           __end_ofi2___aodiv 156C                        fputs@s 0089             __end_ofi2___aomod 1886  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        putch@c 0001            i2___aomod@dividend 0001  
            __end_of_vfprintf 225E                     ??_sprintf 00DD                    __accesstop 0080  
     __end_of__initialization 2764               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
           __end_ofi2_sprintf 23DE          __end_of_gira_horario 27E0                 __end_ofi2_abs 269A  
               __end_ofi2_pad 20BA                __pcstackCOMRAM 0001                 __end_of_fputc 1D4C  
               __end_of_fputs 2580                 __end_of_putch 287E           __size_ofi2_lcd_init 0066  
         __size_ofi2_lcd_goto 000E           __size_ofi2_lcd_puts 0068                     ?i2_acende 0001  
                     ??i2_abs 0015                       ??i2_pad 0017            __size_of_lcd_clear 001C  
          __size_of_bloqueada 0178                     ?i2_mostra 0068                i2vfpfcnvrt@fmt 0042  
                   ?i2_strlen 0001            __size_of_lcd_write 0016                       ??_fputc 0084  
                     ??_fputs 008D                       ??_putch 0080                    __pbssBANK0 00F1  
                  __pbssBANK1 0100                   i2sprintf@ap 0060           __size_ofi2_vfprintf 0062  
             bloqueada@estado 0068                       ?i2_dtoa 001C                  i2lcd_write@c 0001  
                     ?_acende 0080               _atualza_entrada 2772                       ?_config 0001  
                     _BAUDCON 000FB8                  ?i2_lcd_clear 0001                       ?_mostra 00E7  
         mostra@quant_pessoas 00E7                  ?i2_lcd_write 0001                       ?_strlen 0080  
                  ??i2_acende 0003            __size_of_vfpfcnvrt 01D6                    ??i2_mostra 006A  
                  ??i2_strlen 0003                     ?_lcd_init 0001                     ?_lcd_goto 0001  
                   ?_lcd_puts 0081                       i2_fputc 1E2C                       i2_fputs 2580  
                     i2pad@fp 0011                       i2_putch 287E                       i2dtoa@d 001E  
                     i2dtoa@i 003E                       i2dtoa@n 0036                       i2dtoa@p 0030  
                     i2dtoa@s 0034                       i2dtoa@w 0032               __size_ofi2_dtoa 031E  
                     __Hparam 0000                       __Lparam 0000             __end_of_lcd_clear 281A  
           __end_of_bloqueada 19FE                       ___aodiv 120A                       ___aomod 156C  
             __size_of_acende 0056             __end_of_lcd_write 2848                     ?_vfprintf 00CF  
              i2vfprintf@cfmt 0056                  __psmallconst 0600               __size_of_config 0042  
                ?i2_vfpfcnvrt 0040                       __pcinit 2748                       __ramtop 0600  
                     __ptext0 0C8C                       __ptext1 2612                       __ptext2 27C2  
                     __ptext3 2772                       __ptext4 19FE                       __ptext5 2326  
                     __ptext6 21F8                       __ptext7 0E68                       __ptext8 0650  
                     __ptext9 1F0A               __size_of_mostra 013E               __size_of_strlen 0056  
                __size_of_abs 0046                  __size_of_pad 00DA                  __size_of_tmr 1E24  
                     _sprintf 2326                  ??i2_lcd_init 0003                  ??i2_lcd_goto 0002  
                  ??_lcd_init 0082                    ??_lcd_goto 0081                  ??i2_lcd_puts 0004  
              __pintcode_body 1D4C                    ??_lcd_puts 0083          end_of_initialization 2764  
         i2_gira_anti_horario 2712         __size_of_gira_horario 001E                       fputc@fp 0082  
               __Lmediumconst 0000                       int_func 1D4C                       fputs@fp 008B  
     __end_of_atualza_entrada 279A             __end_of_vfpfcnvrt 103E                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                ??i2_vfprintf 0056                    ??_vfprintf 00D5          ?i2_gira_anti_horario 0001  
                     strlen@a 0084                       strlen@s 0080                    _num_mostra 00F7  
          __end_ofi2_lcd_init 22C4            __end_ofi2_lcd_goto 287C            __end_ofi2_lcd_puts 21F8  
                   _PORTBbits 000F81                     _PORTCbits 000F82             i2___aodiv@divisor 0009  
           i2___aodiv@counter 0011                  _gira_horario 27C2                     i2___aodiv 13BC  
                   i2___aomod 16FA       __size_ofi2_gira_horario 001E            __end_ofi2_vfprintf 2326  
       __end_of_gira_horarioF 2656                __end_ofi2_dtoa 0C8C                    lcd_write@c 0080  
                   i2_sprintf 2384         ??i2_gira_anti_horario 0001                __end_of_acende 248A  
                 vfpfcnvrt@ap 00C3                   vfpfcnvrt@fp 00BF                   vfpfcnvrt@ll 00C7  
      bloqueada@quant_pessoas 006A                __end_of_config 26DC                     i2fputc@fp 0003  
                   i2fputs@fp 000C          __size_ofi2_lcd_clear 0018                __end_of_mostra 1B3C  
              __end_of_strlen 2434           start_initialization 2748          __size_ofi2_lcd_write 0014  
           __size_ofi2_acende 0054                   __end_of_abs 2612                   __end_of_pad 1FE4  
                 __end_of_tmr 1E2C                    ?i2___aodiv 0001                    ?i2___aomod 0001  
           __size_ofi2_mostra 012E            lcd_init@init_value 0083             __size_ofi2_strlen 0052  
                   i2strlen@a 0005                     i2strlen@s 0001              __CFG_OSC$INTIO67 000000  
                    ??i2_dtoa 0026              ?_atualza_entrada 0001                   vfprintf@fmt 00D1  
                i2vfprintf@ap 0054                  i2vfprintf@fp 0050                      ??_acende 0082  
                  ?i2_sprintf 0058                      ??_config 0080              __CFG_LPT1OSC$OFF 000000  
                    ??_mostra 00E9             i2___aomod@divisor 0009                      ??_strlen 0082  
           i2___aomod@counter 0011          __size_ofi2_vfpfcnvrt 01CC                  i2sprintf@fmt 005A  
                 __pbssCOMRAM 0076                  i2sprintf@ret 005E                 __pcstackBANK0 0080  
            ___aodiv@dividend 0080                 i2lcd_goto@pos 0002                      ?i2_fputc 0001  
                    ?i2_fputs 000A             __size_of_lcd_init 006C             __size_of_lcd_goto 0012  
                    ?i2_putch 0001             __size_of_lcd_puts 006A             __CFG_CCP2MX$PORTC 000000  
                   __pintcode 0008                      ?___aodiv 0080                      ?___aomod 0080  
            ___aodiv@quotient 0092                     _lcd_clear 27FE                     _bloqueada 1886  
           __size_of_vfprintf 0066                     _lcd_write 2832                   __smallconst 0600  
              __size_ofi2_abs 0044                __size_ofi2_pad 00D6                   ??i2___aodiv 0011  
                 ??i2___aomod 0011                      ?_sprintf 00D7                __size_of_fputc 00E2  
              __size_of_fputs 0050                i2_gira_horario 27E0                __size_of_putch 0002  
                    i2u200_40 0BBE                      i2u200_41 0BBA                      i2u201_40 0BD8  
                    i2u201_41 0BD4                      i2u202_40 0BE8                      i2u210_40 1062  
                    i2u202_41 0BE4                      i2u210_41 105E                      i2u203_40 0C06  
                    i2u211_40 10AA                      i2u203_41 0C02                      i2u211_41 10A6  
                    i2u220_40 21E2                      i2u132_40 1E3E                      i2u204_40 0C16  
                    i2u212_40 10CE                      i2u132_41 1E3A                      i2u204_41 0C12  
                    i2u212_41 10CA                      i2u220_47 21D8                      i2u221_40 21F2  
                    i2u133_40 1E50                      i2u205_40 0C32                      i2u213_40 117A  
                    i2u221_41 21EE                      i2u133_41 1E4C                      i2u205_41 0C2E  
                    i2u213_41 1176                      i2u134_40 1E7C                      i2u134_41 1E78  
                    i2u135_40 1EB2                      i2u215_40 231C                      i2u231_40 189A  
                    i2u135_41 1EAE                      i2u215_41 2318                      i2u231_41 1896  
                    i2u160_40 2074                      i2u232_40 191E                      i2u240_40 1D90  
                    i2u160_41 2070                      i2u232_41 191A                      i2u240_41 1D8C  
                    i2u161_40 2084                      i2u233_40 19A8                      i2u241_40 1DBE  
                    i2u161_41 2080                      i2u233_41 19A4                      i2u241_41 1DBA  
                    i2u162_40 13CE                      i2u170_40 1742                      i2u138_40 25C6  
                    i2u226_40 249C                      i2u242_40 1DF0                      i2u162_41 13CA  
                    i2u170_41 173E                      i2u138_41 25C2                      i2u226_41 2498  
                    i2u242_41 1DEC                      i2u219_40 21B6                      i2u163_40 1404  
                    i2u171_40 1784                      i2u139_40 250A                      i2u227_40 24D0  
                    i2u163_41 1400                      i2u171_41 1780                      i2u139_41 2506  
                    i2u227_41 24CC                      i2u219_47 21AC                      i2u172_40 17B2  
                    i2u228_40 1B60                      i2u236_40 27F4                      i2u164_41 1432  
                    i2u172_41 17AE                      i2u228_41 1B5C                      i2u236_41 27F0  
                    i2u165_40 1456                      i2u173_40 17E8                      i2u237_40 2726  
                    i2u229_40 1BF4                      i2u165_41 1452                      i2u173_41 17E4  
                    i2u237_41 2722                      i2u229_41 1BF0                      i2u166_40 1484  
                    i2u174_40 183C                      i2u158_40 1FF4                      i2u238_40 273A  
                    i2u166_41 1480                      i2u174_41 1838                      i2u158_41 1FF0  
                    i2u238_41 2736                      i2u167_40 14CC                      i2u175_40 2670  
                    i2u159_40 201A                      i2u191_40 099E                      i2u239_40 1D7C  
                    i2u167_41 14C8                      i2u175_41 266C                      i2u159_41 2016  
                    i2u191_41 0998                      i2u239_41 1D78                      i2u168_40 1522  
                    i2u192_40 09A0                      i2u168_41 151E                      i2u280_47 2282  
                    i2u169_40 170C                      i2u193_40 09B6                      i2u169_41 1708  
                    i2u193_41 09B2                      i2u281_47 2292                      i2u194_40 09EA  
                    i2u194_41 09E6                      i2u290_47 284C                      i2u282_47 229E  
                    i2u195_40 0A0A                      i2u195_41 0A06                      i2u283_47 18A0  
                    i2u275_47 1B66                      i2u196_40 0A38                      i2u196_41 0A34  
                    i2u284_47 18CA                      i2u276_47 1B90                      i2u197_40 0A46  
                    i2u197_41 0A42                      i2u285_47 1924                      i2u277_47 1BFA  
                    i2u198_40 0B86                      i2u198_41 0B82                      i2u286_47 194E  
                    i2u278_47 1C24                      i2u199_40 0BA4                      i2u199_41 0BA0  
                    i2u287_47 19AE                      i2u279_47 226C                      i2u288_47 19EA  
                    i2u289_47 2828              __CFG_WDTPS$32768 000000                   ??i2_sprintf 005E  
           _gira_anti_horario 26DC                    ?_lcd_clear 0001                     _vfpfcnvrt 0E68  
                  ?_bloqueada 0068                    ?_lcd_write 0001            ?_gira_anti_horario 0001  
                    i2_acende 248A                     lcd_puts@s 0081        __end_ofi2_gira_horario 27FE  
                    i2_mostra 1B3C                      i2pad@buf 0013           ??_gira_anti_horario 0080  
                    i2dtoa@fp 001C                      i2_strlen 24DE                      i2fputc@c 0001  
                    i2fputs@c 000E                      i2fputs@i 000F                      i2fputs@s 000A  
            __size_ofi2_fputc 00DE              __size_ofi2_fputs 004C              __size_ofi2_putch 0002  
                    __Hrparam 0000                    vfprintf@ap 00D3                      __Lrparam 0000  
                  vfprintf@fp 00CF            __CFG_BOREN$SBORDIS 000000     __end_of_gira_anti_horario 2712  
            __size_of___aodiv 01B2              __size_of___aomod 018E         i2acende@quant_pessoas 0001  
                  ?_vfpfcnvrt 00BF               ___aodiv@divisor 0088               ___aodiv@counter 0090  
                  sprintf@fmt 00D9                    sprintf@ret 00DD                      _dtoa$344 00AD  
             ?i2_gira_horario 0001                      __ptext10 23DE                      __ptext11 2530  
                    __ptext20 285C                      __ptext12 1C6A                      __ptext21 2832  
                    __ptext13 287C                      __ptext30 248A                      __ptext22 2434  
                    __ptext14 25CC                      __ptext31 2712                      __ptext23 26DC  
                    __ptext15 156C                      __ptext40 1E2C                      __ptext32 1886  
                    __ptext24 269A                      __ptext16 120A                      __ptext41 287E  
                    __ptext33 2384                      __ptext17 2126                      __ptext42 2656  
                    __ptext34 22C4                      __ptext26 27E0                      __ptext18 20BA  
                    __ptext43 16FA                      __ptext35 103E                      __ptext27 279A  
                    __ptext19 27FE                      __ptext44 13BC                      __ptext36 096E  
                    __ptext28 1B3C                      __ptext45 2190                      __ptext37 1FE4  
                    __ptext29 225E                      __ptext46 286E                      __ptext38 24DE  
                    __ptext47 281A                      __ptext39 2580                      __ptext48 2848  
                    _lcd_init 20BA                      _lcd_goto 285C                      _lcd_puts 2126  
            __size_of_sprintf 005E                 __size_of_main 01DC                 __size_of_dtoa 031E  
 __end_ofi2_gira_anti_horario 2748                      int$flags 0078                      _vfprintf 21F8  
               ??i2_lcd_clear 0002                      main@argc 00EB                   ??_lcd_clear 0081  
                    main@argv 00ED                   ??_bloqueada 006C                 ??i2_lcd_write 0001  
                 ??_lcd_write 0080              ___aomod@dividend 0080        __size_of_gira_horarioF 0044  
                    intlevel2 0000                     sprintf@ap 00DF    __size_of_gira_anti_horario 0036  
             ___aomod@divisor 0088                 ??i2_vfpfcnvrt 0046                   ??_vfpfcnvrt 00C5  
             ___aomod@counter 0090      __size_of_atualza_entrada 0028                      sprintf@f 00E1  
                    sprintf@s 00D7           __end_ofi2_lcd_clear 2832           __end_ofi2_lcd_write 285C  
               _quant_pessoas 00FB          i2lcd_init@init_value 0004                  ___aodiv@sign 0091  
          i2___aodiv@dividend 0001                  ___aomod@sign 0091                 _gira_horarioF 2612  
